{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.6.7"
    },
    "colab": {
      "provenance": [],
      "toc_visible": true
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "K-XYXmmluXdg"
      },
      "source": [
        "# Part 2:  Functions and Control Statements"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "xvBm3ReiuXdj"
      },
      "source": [
        "A distinguishing property of *programming* languages is that the programmer can create their own *functions*.  Creating a *function* is like teaching the computer a new trick.  Typically a function will receive some data as *input*, will perform an *algorithm* involving the input data, and will *output* data when the algorithm terminates.  \n",
        "\n",
        "In this part, we explore Python functions.  We also explore control statements, which allow a program to behave in different ways for different inputs.  We also introduce the *while loop*, a loop whose repetition can be more carefully controlled than a for loop.  As an application of these techniques, we implement the Euclidean algorithm as a Python function in a few ways, to effectively find the GCD of integers.\n",
        "\n",
        "At the end, you will be prepared to explore the Collatz conjecture."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Cw0CHgACuXdk"
      },
      "source": [
        "## Getting started with Python functions"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "o0UhM3CKuXdk"
      },
      "source": [
        "A *function* in Python is a construction which takes input data, performs some actions, and outputs data.  It is best to start with a few examples and break down the code.  Here is a function `square`.  Run the code as usual by pressing *shift-Enter* when the code block is selected."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "-sH7F-YEuXdk"
      },
      "source": [
        "def square(x):\n",
        "    answer = x * x\n",
        "    return answer"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "C6tqVsj6u4Ic"
      },
      "source": [
        "To see \"under the hood\" what Python is doing, we import the Python disassembler."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "v-H2v_wOuXdl"
      },
      "source": [
        "from dis import dis"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "6ZYvlyCYuXdl",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "de364890-60fb-4631-fb6d-400fe256982e"
      },
      "source": [
        "dis(square)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "  2           0 LOAD_FAST                0 (x)\n",
            "              2 LOAD_FAST                0 (x)\n",
            "              4 BINARY_MULTIPLY\n",
            "              6 STORE_FAST               1 (answer)\n",
            "\n",
            "  3           8 LOAD_FAST                1 (answer)\n",
            "             10 RETURN_VALUE\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "p43oP8AquXdm"
      },
      "source": [
        "When you run the code block, you probably didn't see anything happen.  But you have effectively taught your computer a new trick, increasing the vocabulary of commands it understands through the Python interpreter.  \n",
        "\n",
        "More specifically, Python has turned your neat \"square function\" into a series of very quickly runnable commands (\"LOAD_FAST\" and \"BINARY_MULTIPLY\").  That way, every time you want to use your square function, Python will just go through the same series of quick operations.\n",
        "\n",
        "You don't really need to know the \"disassembled\" square function above... you can use the `square` command as you wish."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "J1Drx8OauXdm",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "b0ff7bb4-397a-47a8-ef9f-d6db374f3c9d"
      },
      "source": [
        "square(12)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "144"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "RPfYsUfAuXdm",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "980c1a59-7e81-4a3b-c37e-4fc051d8c56d"
      },
      "source": [
        "square(1.5)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "2.25"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "83KgYRaIuXdm"
      },
      "source": [
        "Let's break down the syntax of the *function declaration*, line by line.\n",
        "\n",
        "```python\n",
        "def square(x):\n",
        "    answer = x * x\n",
        "    return answer\n",
        "```\n",
        "\n",
        "The first line begins with the Python reserved word `def`.  (So don't use `def` as a variable name!).  The word `def` stands for \"define\" and it defines a function called `square`.  After the function name `square` comes parentheses `(x)` containing the **argument** `x`.  The *arguments* or *parameters* of a function refer to the input data.  Even if your function has no arguments, you need parentheses.  The argument `x` is used to name whatever number is input into the `square` function.  \n",
        "\n",
        "At the end of the function declaration line is a colon `:` and the following two lines are indented.  As in the case of for loops, the colon and indentation are signals of *scope*.  Everything on the indented lines is considered within the *scope of the function* and is carried out when the function is used later.\n",
        "\n",
        "The second line `answer = x * x` is the beginning of the scope of the function.  It declares a variable `answer` and sets the value to be `x * x`.  So if the argument `x` is 12, then `answer` will be set to 144.  The variable `answer`, being declared within the scope of the function, will not be accessible outside the scope of the function.  It is called a **local variable**.\n",
        "\n",
        "The last line `return answer` contains the Python reserved word `return`, which terminates the function and outputs the value of the variable `answer`.  So when you apply the function with the command `square(1.5)`, the number `1.5` is `passed` as the argument `x`, and `answer` is `2.25`, and that number `2.25` becomes the output."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "v_nIkzhAuXdn"
      },
      "source": [
        "A function does not have to return a value.  Some functions might just provide some information.  Here is a function which displays the result of division with remainder as a sentence with addition and multiplication."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "kblJD_kQuXdn"
      },
      "source": [
        "def display_divmod(a,b):\n",
        "    quotient = a // b # Integer division\n",
        "    remainder = a % b #\n",
        "    print(\"{} = {} ({}) + {}\".format(a,quotient,b,remainder))"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "g2fq4CwHvtF1"
      },
      "source": [
        "If you want a quick look under the hood, here is the function disassembled.  Again, you don't need to know what everything means.  The four-line code above is translated into 20 very fast steps below, numbered 0,2,4, up to 38."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "44kJtTHJuXdn",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "f48eb701-1b5f-4995-ed29-a753b2728db8"
      },
      "source": [
        "dis(display_divmod)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "  2           0 LOAD_FAST                0 (a)\n",
            "              2 LOAD_FAST                1 (b)\n",
            "              4 BINARY_FLOOR_DIVIDE\n",
            "              6 STORE_FAST               2 (quotient)\n",
            "\n",
            "  3           8 LOAD_FAST                0 (a)\n",
            "             10 LOAD_FAST                1 (b)\n",
            "             12 BINARY_MODULO\n",
            "             14 STORE_FAST               3 (remainder)\n",
            "\n",
            "  4          16 LOAD_GLOBAL              0 (print)\n",
            "             18 LOAD_CONST               1 ('{} = {} ({}) + {}')\n",
            "             20 LOAD_ATTR                1 (format)\n",
            "             22 LOAD_FAST                0 (a)\n",
            "             24 LOAD_FAST                2 (quotient)\n",
            "             26 LOAD_FAST                1 (b)\n",
            "             28 LOAD_FAST                3 (remainder)\n",
            "             30 CALL_FUNCTION            4\n",
            "             32 CALL_FUNCTION            1\n",
            "             34 POP_TOP\n",
            "             36 LOAD_CONST               0 (None)\n",
            "             38 RETURN_VALUE\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "g8zsMb4av9Pu"
      },
      "source": [
        "Below, we can run the function to see the output."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "scrolled": true,
        "id": "-5N5Px0XuXdn",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "21e73a6e-5cca-428b-d9ac-49878588179b"
      },
      "source": [
        "display_divmod(23,5)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "23 = 4 (5) + 3\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "JUD5Y7FLuXdn"
      },
      "source": [
        "Notice that this function has no `return` line.  The function terminates automatically at the end of its scope.\n",
        "\n",
        "The function also uses Python's **string formatting**.  This has changed between Python 2.x and 3.x, and this notebook uses Python 3.x syntax.\n",
        "\n",
        "String formatting allows you to insert placeholders like `{}` within a string, and later fill those places with a list of things.  "
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "qYo13qoyuXdn",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "aae5a1d2-bb99-4f4f-cac2-e230f35b23f7"
      },
      "source": [
        "print(\"My favorite number is {}\".format(17))  # The .format \"method\" substitutes 17 for {}"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "My favorite number is 17\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "-XwFB1SBuXdo",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "257b8da0-9f61-4331-f41c-cdb2dfdd0a16"
      },
      "source": [
        "print(\"{} + {} = {}\".format(13,12,13+12))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "13 + 12 = 25\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "6_WwWoLOuXdo"
      },
      "source": [
        "The `format` command is an example of a **string method**.  It has the effect of replacing all placeholders `{}` by the its inputs, in sequence.  There is an intricate syntax for these placeholders, to allow one to match placeholders with values in different orders, and to format different kinds of values.  Here is the [official reference for string formatting in Python 3.x](https://docs.python.org/3/library/string.html#formatstrings).  We will only use the most basic features, exhibited below."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "IVmzfGzsuXdo",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "1ad7356f-b83d-4253-8b01-d789a37df1f7"
      },
      "source": [
        "print (\"The number {} comes before {}.\".format(1,2)) # This should be familiar.\n",
        "print (\"The number {1} comes before {0}.\".format(1,2)) # What happens?\n",
        "print (\"The number {1} comes before {1}.\".format(1,2)) # Got it now?\n",
        "\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "The number 1 comes before 2.\n",
            "The number 2 comes before 1.\n",
            "The number 2 comes before 2.\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ITCX3DmduXdo"
      },
      "source": [
        "By placing a number in the placeholder, like `{1}`, one can fill in the placeholders with the values in a different order, or repeat the same value.  The format method takes multiple parameters, and they are numbered:  parameter 0, parameter 1, parameter 2, etc..  So the placeholder `{1}` will be replaced by the second parameter (parameter 1).  It's confusing at first, but Python almost always starts counting at zero."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "cDQWP_m4uXdo",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "2a6842b2-5a75-414f-9b03-526c77def118"
      },
      "source": [
        "print(\"pi is approximately {0}\".format(3.14159265))\n",
        "print(\"pi is approximately {0:f}\".format(3.14159265)) # The \"f\" in \"0:f\" formats the float.\n",
        "print(\"pi is approximately {0:0.3f}\".format(3.14159265)) # Choose 3 digits of precision.\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "pi is approximately 3.14159265\n",
            "pi is approximately 3.141593\n",
            "pi is approximately 3.142\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "W9QjcrivuXdp"
      },
      "source": [
        "If you give some information about how the placeholder is being used, the format method will format things more nicely for printing.  The placeholder `{0:f}` will be replaced by parameter 0, and it will be formatted in a way that is nice for floats (hence the `f`).  Don't try formatting things outside of their type!"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "WI4b7-z6uXdp",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 270
        },
        "outputId": "19daebdf-4d19-4821-8b2b-247043b01427"
      },
      "source": [
        "print(\"{:d} is a pretty big integer.\".format(2**100)) # d is the formatting code for integers.\n",
        "print(\"{:f} is an integer, formatted like a float.\".format(2**100))\n",
        "print(\"{:f} is a float, of course.\".format(1/7))\n",
        "print(\"{:s} is a string.\".format('Hi there!')) # s is the formatting code for strings.\n",
        "print(\"{:d} will give us an error message.\".format(1/7))\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "1267650600228229401496703205376 is a pretty big integer.\n",
            "1267650600228229401496703205376.000000 is an integer, formatted like a float.\n",
            "0.142857 is a float, of course.\n",
            "Hi there! is a string.\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "error",
          "ename": "ValueError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-18-a243553941ff>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"{:f} is a float, of course.\"\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mformat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m/\u001b[0m\u001b[0;36m7\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"{:s} is a string.\"\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mformat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Hi there!'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;31m# s is the formatting code for strings.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 5\u001b[0;31m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"{:d} will give us an error message.\"\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mformat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m/\u001b[0m\u001b[0;36m7\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;31mValueError\u001b[0m: Unknown format code 'd' for object of type 'float'"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Xa4ug6SMuXdp",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "0c2fa8e0-12f7-4b6f-8be1-d39536ec1f9b"
      },
      "source": [
        "from math import sqrt  # Make sure the square root function is loaded.\n",
        "print(\"The square root of {0:d} is about {1:f}.\".format(1000, sqrt(1000)))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "The square root of 1000 is about 31.622777.\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "SimNBwI0uXdp"
      },
      "source": [
        "### Exercises\n",
        "\n",
        "1.  What are the signals of scope in Python?\n",
        "\n",
        "2.  Write a function called area_circle, which takes one argument radius. The function should return the area of the circle, as a floating point number. Then add one line to the function, using string formatting, so that it additionally prints a helpful sentence of the form \"The area of a circle of radius 1.0 is 3.14159.\" (depending on the radius and the area it computes).\n",
        "\n",
        "3.  Write a function called factorial, which takes one argument called `n`.  The function should return the factorian of `n` when `n` is a positive integer.  Don't worry about what happens when `n` is zero, or a bad input.  Don't use recursion (if you know it) -- just use a for loop.\n",
        "\n",
        "4. `format` is an example of a \"string method\".  Another neat one is `replace`.  Try `\"Python\".replace(\"yth\",\"arag\")` to see what it does.  \n",
        "\n",
        "5.  Try the formatting codes `%` and `E` (instead of `f`) for a floating point number.  What do they do?\n",
        "\n",
        "6. Can you think of a reason you might want to have a function with *no* arguments?"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Tq28kHHtQ1bd"
      },
      "source": [
        "#2.\n",
        "pi = 3.14159\n",
        "def area_circle(rad):\n",
        "  area = pi*rad**2\n",
        "  return(area)\n",
        "  print(\"The area of a circle of radius {0:f} is {1.f}\".format(rad,area))"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "M6iQ7ZkTRvBv",
        "outputId": "e7ca205a-9c3b-458a-a985-85318309e741"
      },
      "source": [
        "area_circle(2)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "12.56636"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 33
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ChENpR9ZUAlh"
      },
      "source": [
        "#3.\n",
        "def factorial(n):\n",
        "  fact = 1\n",
        "  for n in range(n+1):\n",
        "    if n > 0:\n",
        "      fact = fact * n\n",
        "  return(fact)\n",
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "EYh7uizEd3Kv",
        "outputId": "939b15cc-e344-4eab-f1e4-2babcf852fc7"
      },
      "source": [
        "factorial(4)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "24"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 229
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "id": "--JIDOjHXbS_",
        "outputId": "dc6f8212-8515-4599-8917-2565aae76ad8"
      },
      "source": [
        "#4.\n",
        "\"Python\".replace(\"yth\",\"arag\")"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            },
            "text/plain": [
              "'Paragon'"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 168
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "o9BtcXhvrGS6",
        "outputId": "0b4b13c6-5859-4ec2-8415-4fb98bcaebc0"
      },
      "source": [
        "#5\n",
        "print(\"{0:%}, {1:E}\".format(2,100))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "200.000000%, 1.000000E+02\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "nxzjK6_6NjPD"
      },
      "source": [
        "1.When something is in the indented lines, it is considered to be within the scope. For a for loop, colon and indentation are signals of scope.\n",
        "\n",
        "5.The formatting code, \"%\", yields the percentage of the inputted number. The formatting code, \"E\", yields the multiplication of the inputted number and 10^(log of the inputted number).\n",
        "\n",
        "6.One might want to have a function with no arguments when you just want to see whether the function returns a true value or false value.\n",
        "\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "o-JZI8kbuXdp"
      },
      "source": [
        "## Control statements"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "RoalaxvHuXdq"
      },
      "source": [
        "It is important for a computer program to behave differently under different circumstances.  The simplest control statements, `if` and its relative `else`, can be used to tell Python to carry out different actions depending on the value of a boolean variable.  The following function exhibits the syntax."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "d8Fw2EdWuXdq"
      },
      "source": [
        "def is_even(n):\n",
        "    if n%2 == 0:\n",
        "        print(\"{} is even.\".format(n))\n",
        "        return True\n",
        "    else:\n",
        "        print(\"{} is odd.\".format(n))\n",
        "        return False"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Ki1TLpgcuXdq",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "76dcd9bb-5806-4bc0-ea08-994a8fbc6f6e"
      },
      "source": [
        "is_even(17)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "17 is odd.\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "False"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 240
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "KXfWwovKuXdq",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "43af31bc-0898-45f7-e403-97f644d60126"
      },
      "source": [
        "is_even(1000)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "1000 is even.\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "True"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 241
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "HCZgs7ucuXdq"
      },
      "source": [
        "The broad syntax of the function should be familiar.  We have created a function called `is_even` with one argument called `n`.  The body of the function uses the **control statement** `if n%2 == 0:`.  Recall that `n%2` gives the remainder after dividing `n` by `2`.  Thus `n%2` is 0 or 1, depending on whether `n` is even or odd.  Therefore the **boolean** `n%2 == 0` is `True` if `n` is even, and `False` if `n` is odd.\n",
        "\n",
        "The next two lines (the first `print` and `return` statements) are within the **scope** of the `if <boolean>:` statement, as indicated by the colon and the indentation.  The `if <boolean>:` statement tells the Python interpreter to perform the statements within the scope if the boolean is `True`, and to ignore the statements within the scope if the boolean is `False`.\n",
        "\n",
        "Putting it together, we can analyze the code.\n",
        "```python\n",
        "    if n%2 == 0:\n",
        "        print(\"{} is even.\".format(n))\n",
        "        return True\n",
        "```\n",
        "If `n` is even, then the Python interpreter will print a sentence of the form `n is even`.  Then the interpreter will return (output) the value `True` and the function will terminate.  If `n` is odd, the Python interpreter will ignore the two lines of scope."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "9i0HhA_wuXdq"
      },
      "source": [
        "Often we don't just want Python to *do nothing* when a condition is not satisfied.  In the case above, we would rather Python tell us that the number is odd.  The `else:` control statement tells Python what to do in case the `if <boolean>:` control statement receives a `False` boolean.  We analyze the code\n",
        "```python\n",
        "    else:\n",
        "        print(\"{} is odd.\".format(n))\n",
        "        return False\n",
        "```\n",
        "The `print` and `return` commands are within the scope of the `else:` control statement.  So when the `if` statement receives a false signal (the number `n` is odd), the program prints a sentence of the form `n is odd.` and then returns the value `False` and terminates the function."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "2ZZTXkc3uXdq"
      },
      "source": [
        "The function `is_even` is a verbose, or \"talkative\" sort of function.  Such a function is sometimes useful in an interactive setting, where the programmer wants to understand everything that's going on.  But if the function had to be called a million times, the screen would fill with printed sentences!  In practice, an efficient and silent function `is_even` might look like the following."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "JnCmNtv7uXdr"
      },
      "source": [
        "def is_even(n):\n",
        "    return (n%2 == 0)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "qJVILvBfuXdr",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "493ec912-eab2-4697-cb38-c352ee87ae64"
      },
      "source": [
        "is_even(17)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "False"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 2
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "sy9_xgM7uXdr"
      },
      "source": [
        "A `for` loop and an `if` control statement, used together, allow us to carry out a **brute force** search.  We can search for factors in order to check whether a number is prime.  Or we can look for solutions to an equation until we find one.\n",
        "\n",
        "One thing to note:  the function below begins with a block of text between a triple-quote (three single-quotes when typing).  That text is called a **docstring** and it is meant to document what the function does.  Writing clear docstrings becomes more important as you write longer programs, collaborate with other programmers, and when you want to return months or years later to use a program again.  There are different style conventions for docstrings; for example, here are [Google's docstring conventions](https://google.github.io/styleguide/pyguide.html?showone=Comments#Comments).  We take a less formal approach."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "3Z-ygku6uXdr"
      },
      "source": [
        "def is_prime(n):\n",
        "    '''\n",
        "    Checks whether the argument n is a prime number.\n",
        "    Uses a brute force search for factors between 1 and n.\n",
        "    '''\n",
        "    for j in range(2,n):  # the list of numbers 2,3,...,n-1.\n",
        "        if n%j == 0:  # is n divisible by j?\n",
        "            print(\"{} is a factor of {}.\".format(j,n))\n",
        "            return False\n",
        "    return True"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "kLAH4a_buXdr"
      },
      "source": [
        "An important note:  the `return` keyword **terminates** the function.  So as soon as a factor is found, the function terminates and outputs `False`.  If no factor is found, then the function execution survives past the loop, and the line `return True` is executed to terminate the function."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "LSjrO41kuXdr",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "ba0c84ac-910c-4b47-baa4-4e011e926a9c"
      },
      "source": [
        "is_prime(91)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "7 is a factor of 91.\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "False"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "478jwHBwuXdr",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "89bd9721-c70f-4130-80f5-00e8fd0aff86"
      },
      "source": [
        "is_prime(101)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "True"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "RLMZKMW4uXds"
      },
      "source": [
        "Try the `is_prime` function on bigger numbers -- try numbers with 4 digits, 5 digits, 6 digits.  Where does it start to slow down?  Do you get any errors when the numbers are large?  Make sure to save your work first, just in case this crashes your computer!  \n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "5QVw3Xy8uXds",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 426
        },
        "outputId": "135fd679-ebab-4364-e0dc-9b3dc7e3d4a8"
      },
      "source": [
        "# Experiment with is_prime here.\n",
        "is_prime(1234)\n",
        "is_prime(12345)\n",
        "is_prime(123456)\n",
        "is_prime(1234567)\n",
        "is_prime(12345678)\n",
        "is_prime(123456789)\n",
        "is_prime(1234567891)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "2 is a factor of 1234.\n",
            "3 is a factor of 12345.\n",
            "2 is a factor of 123456.\n",
            "127 is a factor of 1234567.\n",
            "2 is a factor of 12345678.\n",
            "3 is a factor of 123456789.\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "error",
          "ename": "KeyboardInterrupt",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-252-b3ce08135a01>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0mis_prime\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m12345678\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0mis_prime\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m123456789\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 8\u001b[0;31m \u001b[0mis_prime\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m1234567891\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;32m<ipython-input-238-9b652073c8a0>\u001b[0m in \u001b[0;36mis_prime\u001b[0;34m(n)\u001b[0m\n\u001b[1;32m      5\u001b[0m     '''\n\u001b[1;32m      6\u001b[0m     \u001b[0;32mfor\u001b[0m \u001b[0mj\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mn\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m  \u001b[0;31m# the list of numbers 2,3,...,n-1.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 7\u001b[0;31m         \u001b[0;32mif\u001b[0m \u001b[0mn\u001b[0m\u001b[0;34m%\u001b[0m\u001b[0mj\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m:\u001b[0m  \u001b[0;31m# is n divisible by j?\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      8\u001b[0m             \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"{} is a factor of {}.\"\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mformat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mj\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mn\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      9\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mKeyboardInterrupt\u001b[0m: "
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "7TwqT8uF0M1T"
      },
      "source": [
        "It starts to slow down for numbers with 10 digits. I get an error that says \"KeyboardInterrupt\"."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Nxhj-gMjuXds"
      },
      "source": [
        "There are two limiting factors, which we study in more detail later.  These are **time** and **space** (your computer's memory space).  As the loop of `is_prime` goes on and on, it might take your computer a long time!  If each step of the loop takes only a nanosecond (1 billionth of a second), the loop would take about a second when executing `is_prime(1000000001)`.  If you tried `is_prime` on a much larger number, like `is_prime(2**101 - 1)`, the loop would take longer than the lifetime of the Earth.\n",
        "\n",
        "The other issue that can arise is a problem with *space*.  In Python 3.x, the `range(2,n)` cleverly *avoids* storing all the numbers between `2` and `n-1` in memory.  It just remembers the endpoints, and how to proceed from one number to the next.  In the older version, Python 2.x, the range command `range(2,n)` would have tried to store the entire list of numbers `[2,3,4,...,n-1]` in the memory of your computer.  Your computer has some (4 or 8 or 16, perhaps) gigabytes of memory (RAM).  A gigabyte is a billion bytes, and a byte is enough memory to store a number between 0 and 255.  (More detail about this later!).  So a gigabyte will not even hold a billion numbers.  So our `is_prime` function would have led to memory problems in Python 2.x, but in Python 3.x we don't have to worry (for now) about space."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "em93aZ_huXds"
      },
      "source": [
        "### Exercises\n",
        "\n",
        "1.  Create a function `my_abs(x)` which outputs the absolute value of the argument `x`.  (Note that Python already has a built-in `abs(x)` function).  \n",
        "\n",
        "2.  Modify the `is_prime` function so that it prints a message `Number too big` and returns `None` if the input argument is bigger than one million.  (Note that `None` is a Python reserved word.  You can use the one-line statement `return None`.)  \n",
        "\n",
        "3.  Write a Python function `thrarity` which takes an argument `n`, and outputs the string `threeven` if `n` is a multiple of three, or `throdd` is `n` is one more than a multiple of three, or `thrugly` if `n` is one less than a multiple of three.  Example:  `thrarity(31)` should output `throdd` and `thrarity(44)` should output `thrugly`.  Hint:  study the `if`/`elif` syntax at [the official Python tutorial](https://docs.python.org/3/tutorial/controlflow.html#if-statements)\n",
        "\n",
        "4.  Write a Python function `sum_of_squares(n)` which finds and prints a pair of natural numbers $x$, $y$, such that $x^2 + y^2 = n$.  The function should use a brute force search and return `None` if no such pair of numbers $x,y$ exists.  Explore which natural numbers can be expressed as sums of two squares... hint:  look at prime numbers first!\n",
        "\n",
        "5.  Write a function `gamma(n)` which takes a positive integer n as input, and outputs the difference between the harmonic sum $\\frac{1}{1} + \\frac{1}{2} + \\frac{1}{3} + \\cdots + \\frac{1}{n}$ and the natural logarithm $\\log(n)$.  Use numpy to compute the logarithm, by using the command `from numpy import log` in a separate cell.  Approximate $\\gamma(n)$ as $n \\rightarrow \\infty$.  How large does $n$ need to be to get five digits of precision on this limit?  Can you prove that the limit $\\lim_{n \\rightarrow \\infty} \\gamma(n)$ exists?"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "l5IQH9hxuXds"
      },
      "source": [
        "#1.\n",
        "def my_abs(x):\n",
        "  if x < 0:\n",
        "    return x*(-1)\n",
        "  else:\n",
        "    return x"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "nbE6VQNvkCF6"
      },
      "source": [
        "#2.\n",
        "def is_prime(n):\n",
        "  for j in range(2,n): # the list of numbers 2,3,...,n-1.\n",
        "    if n > 1000000:\n",
        "      print(\"Number too big.\")\n",
        "      return None\n",
        "    if n%j == 0: # is n divisible by j?\n",
        "      print(\"{} is a factor of {}.\".format(j,n))\n",
        "      return False\n",
        "    if n%j != 0: # is n not divisible by j?\n",
        "      print(\"{} is a prime.\".format(n))\n",
        "      return True"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ku6DMHNjpFrO"
      },
      "source": [
        "#3.\n",
        "def thrarity(n):\n",
        "  if n%3 == 0:\n",
        "    print(\"threeven\")\n",
        "  elif n%3 == 1:\n",
        "    print(\"throdd\")\n",
        "  elif n%3 == 2:\n",
        "    print(\"thrugly\")"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "feovAFqxRJCl"
      },
      "source": [
        "#4.\n",
        "def sum_of_squares(n):\n",
        "  for x in range(1,n):\n",
        "    for y in range(1,n):\n",
        "      if x**2+y**2 == n:\n",
        "        print(x,\"^2+\",y,\"^2=\",n)\n",
        "        return True\n",
        "  return None\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "gVcafQ07tcqA"
      },
      "source": [
        "from numpy import log"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "CEAgD6IPtQoz"
      },
      "source": [
        "#5.\n",
        "def gamma(n):\n",
        "  Harm_Sum = 0\n",
        "  for i in range(1,n+1):\n",
        "    Harm_Sum = Harm_Sum + 1/i\n",
        "    Gamma = Harm_Sum - log(n)\n",
        "  return Gamma\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "w2cULqX7U4tQ",
        "outputId": "bca1c12d-edfc-4820-9482-8644a5068715"
      },
      "source": [
        "gamma(1000000)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "\u001b[1;30;43mStreaming output truncated to the last 5000 lines.\u001b[0m\n",
            "0.5722046306139319\n",
            "0.5722056356370366\n",
            "0.5722066406591324\n",
            "0.5722076456802174\n",
            "0.5722086507002935\n",
            "0.5722096557193588\n",
            "0.5722106607374133\n",
            "0.5722116657544589\n",
            "0.5722126707704938\n",
            "0.5722136757855179\n",
            "0.572214680799533\n",
            "0.5722156858125373\n",
            "0.5722166908245327\n",
            "0.5722176958355174\n",
            "0.5722187008454913\n",
            "0.5722197058544563\n",
            "0.5722207108624104\n",
            "0.5722217158693557\n",
            "0.5722227208752901\n",
            "0.5722237258802139\n",
            "0.5722247308841286\n",
            "0.5722257358870326\n",
            "0.5722267408889277\n",
            "0.572227745889812\n",
            "0.5722287508896855\n",
            "0.5722297558885501\n",
            "0.5722307608864039\n",
            "0.5722317658832488\n",
            "0.5722327708790829\n",
            "0.572233775873908\n",
            "0.5722347808677224\n",
            "0.572235785860526\n",
            "0.5722367908523207\n",
            "0.5722377958431046\n",
            "0.5722388008328796\n",
            "0.5722398058216438\n",
            "0.5722408108093973\n",
            "0.5722418157961418\n",
            "0.5722428207818755\n",
            "0.5722438257666003\n",
            "0.5722448307503143\n",
            "0.5722458357330193\n",
            "0.5722468407147137\n",
            "0.5722478456953972\n",
            "0.5722488506750718\n",
            "0.5722498556537357\n",
            "0.5722508606313905\n",
            "0.5722518656080346\n",
            "0.5722528705836698\n",
            "0.5722538755582942\n",
            "0.5722548805319079\n",
            "0.5722558855045126\n",
            "0.5722568904761065\n",
            "0.5722578954466915\n",
            "0.5722589004162657\n",
            "0.572259905384831\n",
            "0.5722609103523855\n",
            "0.572261915318931\n",
            "0.5722629202844658\n",
            "0.5722639252489898\n",
            "0.5722649302125049\n",
            "0.5722659351750092\n",
            "0.5722669401365046\n",
            "0.5722679450969892\n",
            "0.5722689500564648\n",
            "0.5722699550149297\n",
            "0.5722709599723856\n",
            "0.5722719649288308\n",
            "0.5722729698842652\n",
            "0.5722739748386907\n",
            "0.5722749797921054\n",
            "0.5722759847445111\n",
            "0.5722769896959061\n",
            "0.5722779946462921\n",
            "0.5722789995956674\n",
            "0.5722800045440337\n",
            "0.5722810094913893\n",
            "0.5722820144377359\n",
            "0.5722830193830717\n",
            "0.5722840243273986\n",
            "0.5722850292707147\n",
            "0.5722860342130218\n",
            "0.5722870391543182\n",
            "0.5722880440946039\n",
            "0.5722890490338806\n",
            "0.5722900539721465\n",
            "0.5722910589094035\n",
            "0.5722920638456497\n",
            "0.5722930687808869\n",
            "0.5722940737151134\n",
            "0.572295078648331\n",
            "0.5722960835805377\n",
            "0.5722970885117356\n",
            "0.5722980934419226\n",
            "0.5722990983711007\n",
            "0.5723001032992681\n",
            "0.5723011082264264\n",
            "0.5723021131525741\n",
            "0.5723031180777127\n",
            "0.5723041230018406\n",
            "0.5723051279249596\n",
            "0.5723061328470678\n",
            "0.572307137768167\n",
            "0.5723081426882555\n",
            "0.572309147607335\n",
            "0.5723101525254037\n",
            "0.5723111574424635\n",
            "0.5723121623585126\n",
            "0.5723131672735526\n",
            "0.572314172187582\n",
            "0.5723151771006023\n",
            "0.5723161820126119\n",
            "0.5723171869236126\n",
            "0.5723181918336024\n",
            "0.5723191967425834\n",
            "0.5723202016505535\n",
            "0.5723212065575147\n",
            "0.5723222114634652\n",
            "0.5723232163684067\n",
            "0.5723242212723374\n",
            "0.5723252261752592\n",
            "0.5723262310771702\n",
            "0.5723272359780722\n",
            "0.5723282408779635\n",
            "0.5723292457768459\n",
            "0.5723302506747174\n",
            "0.57233125557158\n",
            "0.5723322604674319\n",
            "0.5723332653622748\n",
            "0.572334270256107\n",
            "0.5723352751489301\n",
            "0.5723362800407443\n",
            "0.5723372849315478\n",
            "0.5723382898213423\n",
            "0.572339294710126\n",
            "0.5723402995979008\n",
            "0.5723413044846648\n",
            "0.5723423093704199\n",
            "0.5723433142551642\n",
            "0.5723443191388995\n",
            "0.5723453240216241\n",
            "0.5723463289033397\n",
            "0.5723473337840446\n",
            "0.5723483386637405\n",
            "0.5723493435424256\n",
            "0.5723503484201018\n",
            "0.572351353296769\n",
            "0.5723523581724255\n",
            "0.572353363047073\n",
            "0.5723543679207097\n",
            "0.5723553727933375\n",
            "0.5723563776649545\n",
            "0.5723573825355626\n",
            "0.5723583874051599\n",
            "0.5723593922737482\n",
            "0.5723603971413276\n",
            "0.5723614020078962\n",
            "0.5723624068734559\n",
            "0.5723634117380048\n",
            "0.5723644166015447\n",
            "0.5723654214640739\n",
            "0.5723664263255941\n",
            "0.5723674311861036\n",
            "0.5723684360456041\n",
            "0.5723694409040956\n",
            "0.5723704457615764\n",
            "0.5723714506180482\n",
            "0.5723724554735092\n",
            "0.5723734603279613\n",
            "0.5723744651814027\n",
            "0.572375470033835\n",
            "0.5723764748852584\n",
            "0.5723774797356711\n",
            "0.5723784845850748\n",
            "0.5723794894334677\n",
            "0.5723804942808517\n",
            "0.5723814991272249\n",
            "0.5723825039725892\n",
            "0.5723835088169444\n",
            "0.572384513660289\n",
            "0.5723855185026245\n",
            "0.5723865233439493\n",
            "0.5723875281842652\n",
            "0.5723885330235721\n",
            "0.5723895378618682\n",
            "0.5723905426991553\n",
            "0.5723915475354318\n",
            "0.5723925523706992\n",
            "0.5723935572049577\n",
            "0.5723945620382054\n",
            "0.5723955668704441\n",
            "0.5723965717016721\n",
            "0.5723975765318912\n",
            "0.5723985813611012\n",
            "0.5723995861893005\n",
            "0.5724005910164909\n",
            "0.5724015958426705\n",
            "0.5724026006678411\n",
            "0.5724036054920028\n",
            "0.5724046103151537\n",
            "0.5724056151372956\n",
            "0.5724066199584268\n",
            "0.572407624778549\n",
            "0.5724086295976623\n",
            "0.5724096344157648\n",
            "0.5724106392328583\n",
            "0.5724116440489411\n",
            "0.5724126488640149\n",
            "0.5724136536780797\n",
            "0.5724146584911338\n",
            "0.572415663303179\n",
            "0.5724166681142133\n",
            "0.5724176729242387\n",
            "0.5724186777332552\n",
            "0.5724196825412609\n",
            "0.5724206873482576\n",
            "0.5724216921542453\n",
            "0.5724226969592223\n",
            "0.5724237017631904\n",
            "0.5724247065661476\n",
            "0.572425711368096\n",
            "0.5724267161690353\n",
            "0.5724277209689639\n",
            "0.5724287257678835\n",
            "0.5724297305657942\n",
            "0.5724307353626941\n",
            "0.572431740158585\n",
            "0.572432744953467\n",
            "0.5724337497473382\n",
            "0.5724347545402004\n",
            "0.5724357593320519\n",
            "0.5724367641228945\n",
            "0.572437768912728\n",
            "0.5724387737015508\n",
            "0.5724397784893647\n",
            "0.5724407832761695\n",
            "0.5724417880619637\n",
            "0.5724427928467488\n",
            "0.572443797630525\n",
            "0.5724448024132904\n",
            "0.5724458071950469\n",
            "0.5724468119757944\n",
            "0.5724478167555311\n",
            "0.5724488215342589\n",
            "0.5724498263119777\n",
            "0.5724508310886858\n",
            "0.5724518358643849\n",
            "0.572452840639075\n",
            "0.5724538454127543\n",
            "0.5724548501854247\n",
            "0.5724558549570862\n",
            "0.5724568597277369\n",
            "0.5724578644973786\n",
            "0.5724588692660113\n",
            "0.5724598740336333\n",
            "0.5724608788002463\n",
            "0.5724618835658504\n",
            "0.5724628883304437\n",
            "0.572463893094028\n",
            "0.5724648978566034\n",
            "0.572465902618168\n",
            "0.5724669073787236\n",
            "0.5724679121382703\n",
            "0.5724689168968062\n",
            "0.5724699216543332\n",
            "0.5724709264108512\n",
            "0.5724719311663584\n",
            "0.5724729359208567\n",
            "0.572473940674346\n",
            "0.5724749454268245\n",
            "0.5724759501782941\n",
            "0.5724769549287547\n",
            "0.5724779596782046\n",
            "0.5724789644266455\n",
            "0.5724799691740774\n",
            "0.5724809739205003\n",
            "0.5724819786659125\n",
            "0.5724829834103158\n",
            "0.57248398815371\n",
            "0.5724849928960936\n",
            "0.5724859976374681\n",
            "0.5724870023778337\n",
            "0.5724880071171885\n",
            "0.5724890118555344\n",
            "0.5724900165928712\n",
            "0.5724910213291992\n",
            "0.5724920260645163\n",
            "0.5724930307988245\n",
            "0.5724940355321237\n",
            "0.5724950402644122\n",
            "0.5724960449956917\n",
            "0.5724970497259623\n",
            "0.5724980544552221\n",
            "0.5724990591834729\n",
            "0.5725000639107147\n",
            "0.5725010686369476\n",
            "0.5725020733621697\n",
            "0.5725030780863829\n",
            "0.5725040828095871\n",
            "0.5725050875317805\n",
            "0.572506092252965\n",
            "0.5725070969731405\n",
            "0.572508101692307\n",
            "0.5725091064104628\n",
            "0.5725101111276096\n",
            "0.5725111158437475\n",
            "0.5725121205588763\n",
            "0.5725131252729945\n",
            "0.5725141299861036\n",
            "0.5725151346982038\n",
            "0.5725161394092932\n",
            "0.5725171441193737\n",
            "0.5725181488284452\n",
            "0.5725191535365077\n",
            "0.5725201582435595\n",
            "0.5725211629496023\n",
            "0.5725221676546361\n",
            "0.572523172358661\n",
            "0.5725241770616751\n",
            "0.5725251817636803\n",
            "0.5725261864646765\n",
            "0.5725271911646637\n",
            "0.5725281958636401\n",
            "0.5725292005616076\n",
            "0.5725302052585661\n",
            "0.5725312099545157\n",
            "0.5725322146494545\n",
            "0.5725332193433843\n",
            "0.5725342240363052\n",
            "0.572535228728217\n",
            "0.5725362334191182\n",
            "0.5725372381090104\n",
            "0.5725382427978936\n",
            "0.5725392474857678\n",
            "0.5725402521726313\n",
            "0.5725412568584858\n",
            "0.5725422615433313\n",
            "0.5725432662271679\n",
            "0.5725442709099937\n",
            "0.5725452755918106\n",
            "0.5725462802726184\n",
            "0.5725472849524174\n",
            "0.5725482896312073\n",
            "0.5725492943089865\n",
            "0.5725502989857567\n",
            "0.572551303661518\n",
            "0.5725523083362702\n",
            "0.5725533130100118\n",
            "0.5725543176827443\n",
            "0.5725553223544679\n",
            "0.5725563270251826\n",
            "0.5725573316948882\n",
            "0.5725583363635831\n",
            "0.572559341031269\n",
            "0.572560345697946\n",
            "0.572561350363614\n",
            "0.5725623550282712\n",
            "0.5725633596919195\n",
            "0.5725643643545588\n",
            "0.5725653690161892\n",
            "0.5725663736768105\n",
            "0.5725673783364211\n",
            "0.5725683829950228\n",
            "0.5725693876526154\n",
            "0.5725703923091991\n",
            "0.5725713969647739\n",
            "0.5725724016193379\n",
            "0.5725734062728929\n",
            "0.5725744109254389\n",
            "0.572575415576976\n",
            "0.5725764202275041\n",
            "0.5725774248770215\n",
            "0.5725784295255298\n",
            "0.5725794341730293\n",
            "0.5725804388195197\n",
            "0.5725814434650012\n",
            "0.5725824481094719\n",
            "0.5725834527529337\n",
            "0.5725844573953864\n",
            "0.5725854620368303\n",
            "0.5725864666772651\n",
            "0.5725874713166892\n",
            "0.5725884759551043\n",
            "0.5725894805925105\n",
            "0.5725904852289077\n",
            "0.5725914898642959\n",
            "0.5725924944986751\n",
            "0.5725934991320436\n",
            "0.5725945037644031\n",
            "0.5725955083957537\n",
            "0.5725965130260953\n",
            "0.5725975176554279\n",
            "0.5725985222837497\n",
            "0.5725995269110626\n",
            "0.5726005315373666\n",
            "0.5726015361626615\n",
            "0.5726025407869475\n",
            "0.5726035454102245\n",
            "0.5726045500324908\n",
            "0.5726055546537481\n",
            "0.5726065592739964\n",
            "0.5726075638932357\n",
            "0.5726085685114661\n",
            "0.5726095731286875\n",
            "0.5726105777448982\n",
            "0.5726115823600999\n",
            "0.5726125869742926\n",
            "0.5726135915874764\n",
            "0.5726145961996512\n",
            "0.572615600810817\n",
            "0.5726166054209738\n",
            "0.5726176100301199\n",
            "0.572618614638257\n",
            "0.5726196192453852\n",
            "0.5726206238515044\n",
            "0.5726216284566146\n",
            "0.5726226330607158\n",
            "0.5726236376638063\n",
            "0.5726246422658878\n",
            "0.5726256468669604\n",
            "0.572626651467024\n",
            "0.5726276560660786\n",
            "0.5726286606641242\n",
            "0.5726296652611609\n",
            "0.5726306698571886\n",
            "0.5726316744522055\n",
            "0.5726326790462135\n",
            "0.5726336836392125\n",
            "0.5726346882312026\n",
            "0.5726356928221836\n",
            "0.5726366974121557\n",
            "0.5726377020011189\n",
            "0.5726387065890712\n",
            "0.5726397111760146\n",
            "0.5726407157619491\n",
            "0.5726417203468745\n",
            "0.572642724930791\n",
            "0.5726437295136986\n",
            "0.5726447340955971\n",
            "0.5726457386764867\n",
            "0.5726467432563656\n",
            "0.5726477478352354\n",
            "0.5726487524130963\n",
            "0.5726497569899482\n",
            "0.5726507615657912\n",
            "0.5726517661406252\n",
            "0.5726527707144502\n",
            "0.5726537752872662\n",
            "0.5726547798590733\n",
            "0.5726557844298696\n",
            "0.572656788999657\n",
            "0.5726577935684354\n",
            "0.5726587981362048\n",
            "0.5726598027029652\n",
            "0.5726608072687167\n",
            "0.5726618118334592\n",
            "0.5726628163971927\n",
            "0.5726638209599173\n",
            "0.5726648255216329\n",
            "0.5726658300823377\n",
            "0.5726668346420336\n",
            "0.5726678392007205\n",
            "0.5726688437583984\n",
            "0.5726698483150674\n",
            "0.5726708528707274\n",
            "0.5726718574253784\n",
            "0.5726728619790205\n",
            "0.5726738665316535\n",
            "0.5726748710832776\n",
            "0.5726758756338928\n",
            "0.5726768801834972\n",
            "0.5726778847320926\n",
            "0.572678889279679\n",
            "0.5726798938262565\n",
            "0.572680898371825\n",
            "0.5726819029163845\n",
            "0.5726829074599351\n",
            "0.5726839120024767\n",
            "0.5726849165440093\n",
            "0.572685921084533\n",
            "0.5726869256240477\n",
            "0.5726879301625534\n",
            "0.5726889347000501\n",
            "0.5726899392365361\n",
            "0.5726909437720131\n",
            "0.5726919483064812\n",
            "0.5726929528399403\n",
            "0.5726939573723904\n",
            "0.5726949619038315\n",
            "0.5726959664342637\n",
            "0.5726969709636869\n",
            "0.5726979754921011\n",
            "0.5726989800195064\n",
            "0.5726999845459027\n",
            "0.57270098907129\n",
            "0.5727019935956683\n",
            "0.5727029981190377\n",
            "0.5727040026413981\n",
            "0.5727050071627495\n",
            "0.5727060116830902\n",
            "0.5727070162024219\n",
            "0.5727080207207447\n",
            "0.5727090252380584\n",
            "0.5727100297543632\n",
            "0.5727110342696591\n",
            "0.5727120387839459\n",
            "0.5727130432972238\n",
            "0.5727140478094928\n",
            "0.5727150523207527\n",
            "0.5727160568310037\n",
            "0.5727170613402457\n",
            "0.5727180658484787\n",
            "0.5727190703557028\n",
            "0.5727200748619179\n",
            "0.572721079367124\n",
            "0.5727220838713212\n",
            "0.5727230883745094\n",
            "0.5727240928766886\n",
            "0.5727250973778588\n",
            "0.5727261018780201\n",
            "0.5727271063771724\n",
            "0.5727281108753157\n",
            "0.5727291153724501\n",
            "0.5727301198685755\n",
            "0.5727311243636919\n",
            "0.5727321288577993\n",
            "0.5727331333508978\n",
            "0.5727341378429873\n",
            "0.5727351423340661\n",
            "0.5727361468241359\n",
            "0.5727371513131967\n",
            "0.5727381558012485\n",
            "0.5727391602882914\n",
            "0.5727401647743253\n",
            "0.5727411692593503\n",
            "0.5727421737433662\n",
            "0.5727431782263732\n",
            "0.5727441827083712\n",
            "0.5727451871893603\n",
            "0.5727461916693404\n",
            "0.5727471961483115\n",
            "0.5727482006262736\n",
            "0.5727492051032268\n",
            "0.572750209579171\n",
            "0.5727512140541062\n",
            "0.5727522185280325\n",
            "0.5727532230009498\n",
            "0.5727542274728581\n",
            "0.5727552319437574\n",
            "0.5727562364136478\n",
            "0.5727572408825292\n",
            "0.5727582453504017\n",
            "0.5727592498172651\n",
            "0.5727602542831196\n",
            "0.5727612587479651\n",
            "0.5727622632118017\n",
            "0.5727632676746293\n",
            "0.5727642721364479\n",
            "0.5727652765972575\n",
            "0.5727662810570582\n",
            "0.5727672855158499\n",
            "0.5727682899736344\n",
            "0.5727692944304099\n",
            "0.5727702988861765\n",
            "0.5727713033409341\n",
            "0.5727723077946827\n",
            "0.5727733122474223\n",
            "0.572774316699153\n",
            "0.5727753211498747\n",
            "0.5727763255995875\n",
            "0.5727773300482912\n",
            "0.572778334495986\n",
            "0.5727793389426719\n",
            "0.5727803433883487\n",
            "0.5727813478330166\n",
            "0.5727823522766755\n",
            "0.5727833567193255\n",
            "0.5727843611609664\n",
            "0.5727853656015984\n",
            "0.5727863700412215\n",
            "0.5727873744798355\n",
            "0.5727883789174406\n",
            "0.5727893833540367\n",
            "0.5727903877896239\n",
            "0.5727913922242021\n",
            "0.5727923966577713\n",
            "0.5727934010903315\n",
            "0.5727944055218828\n",
            "0.5727954099524251\n",
            "0.5727964143819602\n",
            "0.5727974188104863\n",
            "0.5727984232380035\n",
            "0.5727994276645116\n",
            "0.5728004320900109\n",
            "0.5728014365145011\n",
            "0.5728024409379824\n",
            "0.5728034453604547\n",
            "0.572804449781918\n",
            "0.5728054542023724\n",
            "0.5728064586218178\n",
            "0.5728074630402542\n",
            "0.5728084674576817\n",
            "0.5728094718741001\n",
            "0.5728104762895097\n",
            "0.5728114807039102\n",
            "0.5728124851173018\n",
            "0.5728134895296861\n",
            "0.5728144939410615\n",
            "0.572815498351428\n",
            "0.5728165027607854\n",
            "0.5728175071691339\n",
            "0.5728185115764735\n",
            "0.572819515982804\n",
            "0.5728205203881256\n",
            "0.5728215247924382\n",
            "0.5728225291957418\n",
            "0.5728235335980365\n",
            "0.5728245379993222\n",
            "0.5728255423996007\n",
            "0.5728265467988702\n",
            "0.5728275511971308\n",
            "0.5728285555943824\n",
            "0.572829559990625\n",
            "0.5728305643858587\n",
            "0.5728315687800833\n",
            "0.572832573173299\n",
            "0.5728335775655058\n",
            "0.5728345819567036\n",
            "0.5728355863468924\n",
            "0.572836590736074\n",
            "0.5728375951242466\n",
            "0.5728385995114103\n",
            "0.5728396038975649\n",
            "0.5728406082827107\n",
            "0.5728416126668474\n",
            "0.5728426170499752\n",
            "0.572843621432094\n",
            "0.5728446258132038\n",
            "0.5728456301933047\n",
            "0.5728466345723984\n",
            "0.5728476389504831\n",
            "0.5728486433275588\n",
            "0.5728496477036256\n",
            "0.5728506520786834\n",
            "0.5728516564527322\n",
            "0.572852660825772\n",
            "0.5728536651978029\n",
            "0.5728546695688248\n",
            "0.5728556739388395\n",
            "0.5728566783078453\n",
            "0.572857682675842\n",
            "0.5728586870428298\n",
            "0.5728596914088087\n",
            "0.5728606957737785\n",
            "0.5728617001377394\n",
            "0.5728627045006913\n",
            "0.572863708862636\n",
            "0.5728647132235718\n",
            "0.5728657175834986\n",
            "0.5728667219424164\n",
            "0.5728677263003252\n",
            "0.5728687306572251\n",
            "0.572869735013116\n",
            "0.5728707393679979\n",
            "0.5728717437218727\n",
            "0.5728727480747384\n",
            "0.5728737524265952\n",
            "0.572874756777443\n",
            "0.5728757611272819\n",
            "0.5728767654761118\n",
            "0.5728777698239327\n",
            "0.5728787741707464\n",
            "0.5728797785165511\n",
            "0.5728807828613469\n",
            "0.5728817872051337\n",
            "0.5728827915479116\n",
            "0.5728837958896804\n",
            "0.5728848002304403\n",
            "0.572885804570193\n",
            "0.5728868089089367\n",
            "0.5728878132466715\n",
            "0.5728888175833973\n",
            "0.5728898219191141\n",
            "0.5728908262538219\n",
            "0.5728918305875226\n",
            "0.5728928349202143\n",
            "0.572893839251897\n",
            "0.5728948435825707\n",
            "0.5728958479122355\n",
            "0.5728968522408913\n",
            "0.5728978565685399\n",
            "0.5728988608951795\n",
            "0.5728998652208102\n",
            "0.5729008695454318\n",
            "0.5729018738690446\n",
            "0.5729028781916483\n",
            "0.5729038825132449\n",
            "0.5729048868338324\n",
            "0.5729058911534111\n",
            "0.5729068954719807\n",
            "0.5729078997895414\n",
            "0.5729089041060931\n",
            "0.5729099084216376\n",
            "0.5729109127361731\n",
            "0.5729119170496997\n",
            "0.5729129213622173\n",
            "0.5729139256737259\n",
            "0.5729149299842273\n",
            "0.5729159342937198\n",
            "0.5729169386022033\n",
            "0.5729179429096778\n",
            "0.5729189472161433\n",
            "0.5729199515216017\n",
            "0.5729209558260511\n",
            "0.5729219601294915\n",
            "0.5729229644319229\n",
            "0.5729239687333454\n",
            "0.5729249730337589\n",
            "0.5729259773331652\n",
            "0.5729269816315625\n",
            "0.5729279859289509\n",
            "0.5729289902253303\n",
            "0.5729299945207007\n",
            "0.5729309988150639\n",
            "0.5729320031084182\n",
            "0.5729330074007635\n",
            "0.5729340116920998\n",
            "0.5729350159824289\n",
            "0.5729360202717491\n",
            "0.5729370245600602\n",
            "0.5729380288473624\n",
            "0.5729390331336557\n",
            "0.5729400374189417\n",
            "0.5729410417032188\n",
            "0.5729420459864869\n",
            "0.572943050268746\n",
            "0.5729440545499962\n",
            "0.5729450588302392\n",
            "0.5729460631094732\n",
            "0.5729470673876982\n",
            "0.5729480716649142\n",
            "0.5729490759411231\n",
            "0.572950080216323\n",
            "0.5729510844905139\n",
            "0.5729520887636959\n",
            "0.5729530930358688\n",
            "0.5729540973070346\n",
            "0.5729551015771914\n",
            "0.5729561058463393\n",
            "0.5729571101144781\n",
            "0.5729581143816098\n",
            "0.5729591186477325\n",
            "0.5729601229128463\n",
            "0.572961127176951\n",
            "0.5729621314400486\n",
            "0.5729631357021372\n",
            "0.5729641399632168\n",
            "0.5729651442232875\n",
            "0.572966148482351\n",
            "0.5729671527404054\n",
            "0.572968156997451\n",
            "0.5729691612534875\n",
            "0.5729701655085169\n",
            "0.5729711697625373\n",
            "0.5729721740155487\n",
            "0.5729731782675511\n",
            "0.5729741825185464\n",
            "0.5729751867685327\n",
            "0.57297619101751\n",
            "0.5729771952654783\n",
            "0.5729781995124394\n",
            "0.5729792037583916\n",
            "0.5729802080033348\n",
            "0.5729812122472691\n",
            "0.5729822164901961\n",
            "0.5729832207321142\n",
            "0.5729842249730233\n",
            "0.5729852292129234\n",
            "0.5729862334518163\n",
            "0.5729872376897003\n",
            "0.5729882419265753\n",
            "0.5729892461624413\n",
            "0.5729902503973001\n",
            "0.57299125463115\n",
            "0.5729922588639909\n",
            "0.5729932630958245\n",
            "0.5729942673266493\n",
            "0.572995271556465\n",
            "0.5729962757852718\n",
            "0.5729972800130714\n",
            "0.572998284239862\n",
            "0.5729992884656436\n",
            "0.5730002926904181\n",
            "0.5730012969141836\n",
            "0.5730023011369401\n",
            "0.5730033053586876\n",
            "0.5730043095794279\n",
            "0.5730053137991593\n",
            "0.5730063180178817\n",
            "0.5730073222355969\n",
            "0.5730083264523032\n",
            "0.5730093306680004\n",
            "0.5730103348826887\n",
            "0.5730113390963698\n",
            "0.5730123433090419\n",
            "0.5730133475207051\n",
            "0.5730143517313611\n",
            "0.573015355941008\n",
            "0.5730163601496461\n",
            "0.5730173643572769\n",
            "0.5730183685638988\n",
            "0.5730193727695116\n",
            "0.5730203769741156\n",
            "0.5730213811777123\n",
            "0.5730223853803\n",
            "0.5730233895818788\n",
            "0.5730243937824504\n",
            "0.573025397982013\n",
            "0.5730264021805667\n",
            "0.5730274063781131\n",
            "0.5730284105746506\n",
            "0.5730294147701791\n",
            "0.5730304189647004\n",
            "0.5730314231582128\n",
            "0.5730324273507161\n",
            "0.5730334315422123\n",
            "0.5730344357326995\n",
            "0.5730354399221778\n",
            "0.573036444110647\n",
            "0.5730374482981091\n",
            "0.5730384524845622\n",
            "0.5730394566700063\n",
            "0.5730404608544433\n",
            "0.5730414650378712\n",
            "0.5730424692202902\n",
            "0.573043473401702\n",
            "0.5730444775821049\n",
            "0.5730454817614987\n",
            "0.5730464859398854\n",
            "0.5730474901172631\n",
            "0.5730484942936318\n",
            "0.5730494984689933\n",
            "0.5730505026433459\n",
            "0.5730515068166895\n",
            "0.5730525109890259\n",
            "0.5730535151603533\n",
            "0.5730545193306718\n",
            "0.573055523499983\n",
            "0.5730565276682853\n",
            "0.5730575318355804\n",
            "0.5730585360018665\n",
            "0.5730595401671437\n",
            "0.5730605443314136\n",
            "0.5730615484946746\n",
            "0.5730625526569266\n",
            "0.5730635568181714\n",
            "0.5730645609784073\n",
            "0.5730655651376342\n",
            "0.5730665692958539\n",
            "0.5730675734530646\n",
            "0.5730685776092663\n",
            "0.5730695817644609\n",
            "0.5730705859186465\n",
            "0.5730715900718248\n",
            "0.5730725942239943\n",
            "0.5730735983751547\n",
            "0.573074602525308\n",
            "0.5730756066744522\n",
            "0.5730766108225875\n",
            "0.5730776149697157\n",
            "0.5730786191158348\n",
            "0.573079623260945\n",
            "0.573080627405048\n",
            "0.573081631548142\n",
            "0.5730826356902288\n",
            "0.5730836398313066\n",
            "0.5730846439713755\n",
            "0.5730856481104372\n",
            "0.5730866522484899\n",
            "0.5730876563855336\n",
            "0.5730886605215701\n",
            "0.5730896646565977\n",
            "0.5730906687906181\n",
            "0.5730916729236295\n",
            "0.5730926770556319\n",
            "0.5730936811866272\n",
            "0.5730946853166135\n",
            "0.5730956894455925\n",
            "0.5730966935735626\n",
            "0.5730976977005238\n",
            "0.5730987018264777\n",
            "0.5730997059514227\n",
            "0.5731007100753605\n",
            "0.5731017141982893\n",
            "0.5731027183202091\n",
            "0.5731037224411217\n",
            "0.5731047265610254\n",
            "0.5731057306799219\n",
            "0.5731067347978094\n",
            "0.5731077389146879\n",
            "0.5731087430305593\n",
            "0.5731097471454216\n",
            "0.5731107512592768\n",
            "0.573111755372123\n",
            "0.5731127594839602\n",
            "0.5731137635947903\n",
            "0.5731147677046113\n",
            "0.5731157718134252\n",
            "0.5731167759212301\n",
            "0.573117780028026\n",
            "0.5731187841338148\n",
            "0.5731197882385946\n",
            "0.5731207923423671\n",
            "0.5731217964451307\n",
            "0.5731228005468871\n",
            "0.5731238046476346\n",
            "0.573124808747373\n",
            "0.5731258128461043\n",
            "0.5731268169438266\n",
            "0.5731278210405417\n",
            "0.5731288251362479\n",
            "0.5731298292309468\n",
            "0.5731308333246368\n",
            "0.5731318374173178\n",
            "0.5731328415089916\n",
            "0.5731338455996564\n",
            "0.573134849689314\n",
            "0.5731358537779627\n",
            "0.5731368578656042\n",
            "0.5731378619522367\n",
            "0.5731388660378602\n",
            "0.5731398701224766\n",
            "0.573140874206084\n",
            "0.5731418782886841\n",
            "0.5731428823702753\n",
            "0.5731438864508593\n",
            "0.5731448905304344\n",
            "0.5731458946090022\n",
            "0.5731468986865611\n",
            "0.5731479027631128\n",
            "0.5731489068386555\n",
            "0.5731499109131892\n",
            "0.5731509149867158\n",
            "0.5731519190592334\n",
            "0.5731529231307437\n",
            "0.5731539272012451\n",
            "0.5731549312707394\n",
            "0.5731559353392246\n",
            "0.5731569394067026\n",
            "0.5731579434731717\n",
            "0.5731589475386336\n",
            "0.5731599516030865\n",
            "0.5731609556665305\n",
            "0.5731619597289672\n",
            "0.573162963790395\n",
            "0.5731639678508156\n",
            "0.5731649719102272\n",
            "0.5731659759686316\n",
            "0.5731669800260271\n",
            "0.5731679840824153\n",
            "0.5731689881377946\n",
            "0.5731699921921667\n",
            "0.5731709962455298\n",
            "0.5731720002978857\n",
            "0.5731730043492327\n",
            "0.5731740083995724\n",
            "0.5731750124489032\n",
            "0.5731760164972268\n",
            "0.5731770205445414\n",
            "0.5731780245908489\n",
            "0.5731790286361473\n",
            "0.5731800326804386\n",
            "0.5731810367237209\n",
            "0.5731820407659942\n",
            "0.5731830448072603\n",
            "0.5731840488475175\n",
            "0.5731850528867675\n",
            "0.5731860569250085\n",
            "0.5731870609622423\n",
            "0.5731880649984671\n",
            "0.5731890690336847\n",
            "0.5731900730678934\n",
            "0.5731910771010948\n",
            "0.5731920811332873\n",
            "0.5731930851644726\n",
            "0.573194089194649\n",
            "0.5731950932238181\n",
            "0.5731960972519783\n",
            "0.5731971012791313\n",
            "0.5731981053052753\n",
            "0.5731991093304121\n",
            "0.5732001133545399\n",
            "0.5732011173776606\n",
            "0.573202121399774\n",
            "0.5732031254208785\n",
            "0.5732041294409758\n",
            "0.5732051334600641\n",
            "0.5732061374781452\n",
            "0.5732071414952173\n",
            "0.5732081455112823\n",
            "0.5732091495263383\n",
            "0.5732101535403871\n",
            "0.5732111575534269\n",
            "0.5732121615654595\n",
            "0.5732131655764832\n",
            "0.5732141695864996\n",
            "0.5732151735955071\n",
            "0.5732161776035074\n",
            "0.5732171816104987\n",
            "0.5732181856164829\n",
            "0.573219189621458\n",
            "0.573220193625426\n",
            "0.573221197628385\n",
            "0.5732222016303368\n",
            "0.5732232056312814\n",
            "0.573224209631217\n",
            "0.5732252136301454\n",
            "0.5732262176280649\n",
            "0.5732272216249772\n",
            "0.5732282256208805\n",
            "0.5732292296157766\n",
            "0.5732302336096637\n",
            "0.5732312376025437\n",
            "0.5732322415944147\n",
            "0.5732332455852784\n",
            "0.5732342495751332\n",
            "0.5732352535639809\n",
            "0.5732362575518213\n",
            "0.5732372615386527\n",
            "0.573238265524477\n",
            "0.5732392695092923\n",
            "0.5732402734931004\n",
            "0.5732412774758995\n",
            "0.5732422814576914\n",
            "0.5732432854384744\n",
            "0.5732442894182501\n",
            "0.5732452933970187\n",
            "0.5732462973747783\n",
            "0.5732473013515307\n",
            "0.5732483053272741\n",
            "0.5732493093020103\n",
            "0.5732503132757376\n",
            "0.5732513172484577\n",
            "0.5732523212201706\n",
            "0.5732533251908745\n",
            "0.5732543291605712\n",
            "0.5732553331292589\n",
            "0.5732563370969395\n",
            "0.573257341063611\n",
            "0.5732583450292754\n",
            "0.5732593489939326\n",
            "0.5732603529575808\n",
            "0.5732613569202218\n",
            "0.5732623608818539\n",
            "0.5732633648424788\n",
            "0.5732643688020946\n",
            "0.5732653727607033\n",
            "0.5732663767183048\n",
            "0.5732673806748974\n",
            "0.5732683846304827\n",
            "0.573269388585059\n",
            "0.5732703925386282\n",
            "0.5732713964911902\n",
            "0.5732724004427432\n",
            "0.573273404393289\n",
            "0.5732744083428258\n",
            "0.5732754122913555\n",
            "0.5732764162388779\n",
            "0.5732774201853914\n",
            "0.5732784241308977\n",
            "0.573279428075395\n",
            "0.5732804320188851\n",
            "0.573281435961368\n",
            "0.573282439902842\n",
            "0.5732834438433088\n",
            "0.5732844477827665\n",
            "0.5732854517212171\n",
            "0.5732864556586605\n",
            "0.573287459595095\n",
            "0.5732884635305222\n",
            "0.5732894674649405\n",
            "0.5732904713983515\n",
            "0.5732914753307554\n",
            "0.5732924792621503\n",
            "0.573293483192538\n",
            "0.5732944871219168\n",
            "0.5732954910502883\n",
            "0.5732964949776527\n",
            "0.573297498904008\n",
            "0.5732985028293562\n",
            "0.5732995067536972\n",
            "0.5733005106770293\n",
            "0.5733015145993541\n",
            "0.5733025185206699\n",
            "0.5733035224409786\n",
            "0.5733045263602801\n",
            "0.5733055302785726\n",
            "0.5733065341958579\n",
            "0.573307538112136\n",
            "0.5733085420274051\n",
            "0.573309545941667\n",
            "0.5733105498549218\n",
            "0.5733115537671676\n",
            "0.5733125576784062\n",
            "0.5733135615886358\n",
            "0.5733145654978582\n",
            "0.5733155694060734\n",
            "0.5733165733132797\n",
            "0.5733175772194787\n",
            "0.5733185811246706\n",
            "0.5733195850288535\n",
            "0.5733205889320292\n",
            "0.5733215928341977\n",
            "0.5733225967353572\n",
            "0.5733236006355096\n",
            "0.5733246045346547\n",
            "0.5733256084327909\n",
            "0.5733266123299199\n",
            "0.5733276162260399\n",
            "0.5733286201211527\n",
            "0.5733296240152583\n",
            "0.573330627908355\n",
            "0.5733316318004444\n",
            "0.5733326356915267\n",
            "0.5733336395816\n",
            "0.5733346434706661\n",
            "0.573335647358725\n",
            "0.5733366512457749\n",
            "0.5733376551318177\n",
            "0.5733386590168532\n",
            "0.5733396629008798\n",
            "0.5733406667838992\n",
            "0.5733416706659114\n",
            "0.5733426745469146\n",
            "0.5733436784269106\n",
            "0.5733446823058994\n",
            "0.5733456861838793\n",
            "0.5733466900608519\n",
            "0.5733476939368174\n",
            "0.5733486978117739\n",
            "0.5733497016857232\n",
            "0.5733507055586653\n",
            "0.5733517094306002\n",
            "0.5733527133015262\n",
            "0.5733537171714449\n",
            "0.5733547210403565\n",
            "0.573355724908259\n",
            "0.5733567287751544\n",
            "0.5733577326410426\n",
            "0.5733587365059218\n",
            "0.5733597403697939\n",
            "0.5733607442326587\n",
            "0.5733617480945146\n",
            "0.5733627519553632\n",
            "0.5733637558152047\n",
            "0.5733647596740372\n",
            "0.5733657635318625\n",
            "0.5733667673886806\n",
            "0.5733677712444916\n",
            "0.5733687750992935\n",
            "0.5733697789530883\n",
            "0.5733707828058758\n",
            "0.5733717866576544\n",
            "0.5733727905084258\n",
            "0.57337379435819\n",
            "0.573374798206947\n",
            "0.5733758020546951\n",
            "0.5733768059014359\n",
            "0.5733778097471696\n",
            "0.5733788135918942\n",
            "0.5733798174356117\n",
            "0.573380821278322\n",
            "0.5733818251200233\n",
            "0.5733828289607175\n",
            "0.5733838328004044\n",
            "0.5733848366390841\n",
            "0.5733858404767549\n",
            "0.5733868443134185\n",
            "0.5733878481490748\n",
            "0.573388851983724\n",
            "0.5733898558173642\n",
            "0.5733908596499973\n",
            "0.5733918634816231\n",
            "0.5733928673122399\n",
            "0.5733938711418496\n",
            "0.573394874970452\n",
            "0.5733958787980473\n",
            "0.5733968826246336\n",
            "0.5733978864502127\n",
            "0.5733988902747846\n",
            "0.5733998940983493\n",
            "0.5734008979209051\n",
            "0.5734019017424536\n",
            "0.573402905562995\n",
            "0.5734039093825292\n",
            "0.5734049132010544\n",
            "0.5734059170185724\n",
            "0.5734069208350832\n",
            "0.5734079246505868\n",
            "0.5734089284650814\n",
            "0.5734099322785688\n",
            "0.5734109360910491\n",
            "0.5734119399025204\n",
            "0.5734129437129845\n",
            "0.5734139475224413\n",
            "0.573414951330891\n",
            "0.5734159551383335\n",
            "0.5734169589447671\n",
            "0.5734179627501934\n",
            "0.5734189665546126\n",
            "0.5734199703580245\n",
            "0.5734209741604275\n",
            "0.5734219779618233\n",
            "0.5734229817622118\n",
            "0.5734239855615932\n",
            "0.5734249893599657\n",
            "0.5734259931573309\n",
            "0.5734269969536889\n",
            "0.5734280007490398\n",
            "0.5734290045433816\n",
            "0.5734300083367163\n",
            "0.5734310121290438\n",
            "0.5734320159203641\n",
            "0.5734330197106772\n",
            "0.5734340234999813\n",
            "0.5734350272882782\n",
            "0.573436031075568\n",
            "0.5734370348618505\n",
            "0.5734380386471241\n",
            "0.5734390424313904\n",
            "0.5734400462146496\n",
            "0.5734410499969016\n",
            "0.5734420537781464\n",
            "0.5734430575583822\n",
            "0.5734440613376108\n",
            "0.5734450651158323\n",
            "0.5734460688930465\n",
            "0.5734470726692518\n",
            "0.5734480764444498\n",
            "0.5734490802186407\n",
            "0.5734500839918244\n",
            "0.5734510877640009\n",
            "0.5734520915351684\n",
            "0.5734530953053287\n",
            "0.5734540990744819\n",
            "0.5734551028426278\n",
            "0.5734561066097665\n",
            "0.5734571103758963\n",
            "0.5734581141410189\n",
            "0.5734591179051343\n",
            "0.5734601216682425\n",
            "0.5734611254303434\n",
            "0.5734621291914355\n",
            "0.5734631329515203\n",
            "0.5734641367105979\n",
            "0.5734651404686684\n",
            "0.5734661442257316\n",
            "0.5734671479817859\n",
            "0.573468151736833\n",
            "0.5734691554908729\n",
            "0.5734701592439055\n",
            "0.573471162995931\n",
            "0.5734721667469493\n",
            "0.5734731704969587\n",
            "0.5734741742459608\n",
            "0.5734751779939558\n",
            "0.5734761817409435\n",
            "0.5734771854869241\n",
            "0.5734781892318974\n",
            "0.5734791929758618\n",
            "0.573480196718819\n",
            "0.573481200460769\n",
            "0.5734822042017118\n",
            "0.5734832079416474\n",
            "0.5734842116805741\n",
            "0.5734852154184935\n",
            "0.5734862191554058\n",
            "0.5734872228913108\n",
            "0.5734882266262087\n",
            "0.5734892303600994\n",
            "0.5734902340929828\n",
            "0.5734912378248573\n",
            "0.5734922415557246\n",
            "0.5734932452855848\n",
            "0.5734942490144377\n",
            "0.5734952527422834\n",
            "0.573496256469122\n",
            "0.5734972601949515\n",
            "0.5734982639197739\n",
            "0.573499267643589\n",
            "0.573500271366397\n",
            "0.5735012750881978\n",
            "0.5735022788089914\n",
            "0.5735032825287778\n",
            "0.5735042862475552\n",
            "0.5735052899653255\n",
            "0.5735062936820885\n",
            "0.5735072973978443\n",
            "0.573508301112593\n",
            "0.5735093048263344\n",
            "0.5735103085390687\n",
            "0.573511312250794\n",
            "0.5735123159615121\n",
            "0.573513319671223\n",
            "0.5735143233799267\n",
            "0.5735153270876232\n",
            "0.5735163307943125\n",
            "0.5735173344999946\n",
            "0.5735183382046678\n",
            "0.5735193419083338\n",
            "0.5735203456109925\n",
            "0.5735213493126441\n",
            "0.5735223530132885\n",
            "0.5735233567129256\n",
            "0.5735243604115556\n",
            "0.5735253641091784\n",
            "0.5735263678057922\n",
            "0.5735273715013989\n",
            "0.5735283751959983\n",
            "0.5735293788895905\n",
            "0.5735303825821756\n",
            "0.5735313862737534\n",
            "0.5735323899643241\n",
            "0.5735333936538876\n",
            "0.5735343973424438\n",
            "0.5735354010299911\n",
            "0.5735364047165312\n",
            "0.5735374084020641\n",
            "0.5735384120865898\n",
            "0.5735394157701084\n",
            "0.5735404194526197\n",
            "0.5735414231341238\n",
            "0.5735424268146208\n",
            "0.5735434304941105\n",
            "0.5735444341725913\n",
            "0.5735454378500648\n",
            "0.5735464415265312\n",
            "0.5735474452019904\n",
            "0.5735484488764424\n",
            "0.5735494525498872\n",
            "0.5735504562223248\n",
            "0.5735514598937552\n",
            "0.5735524635641784\n",
            "0.5735534672335945\n",
            "0.5735544709020033\n",
            "0.5735554745694031\n",
            "0.5735564782357958\n",
            "0.5735574819011813\n",
            "0.5735584855655596\n",
            "0.5735594892289306\n",
            "0.5735604928912945\n",
            "0.5735614965526512\n",
            "0.5735625002130007\n",
            "0.573563503872343\n",
            "0.5735645075306781\n",
            "0.573565511188006\n",
            "0.5735665148443267\n",
            "0.5735675184996403\n",
            "0.5735685221539448\n",
            "0.5735695258072422\n",
            "0.5735705294595324\n",
            "0.5735715331108153\n",
            "0.5735725367610911\n",
            "0.5735735404103597\n",
            "0.5735745440586211\n",
            "0.5735755477058753\n",
            "0.5735765513521223\n",
            "0.5735775549973621\n",
            "0.5735785586415947\n",
            "0.5735795622848201\n",
            "0.5735805659270383\n",
            "0.5735815695682493\n",
            "0.5735825732084532\n",
            "0.573583576847648\n",
            "0.5735845804858357\n",
            "0.5735855841230162\n",
            "0.5735865877591895\n",
            "0.5735875913943556\n",
            "0.5735885950285144\n",
            "0.5735895986616661\n",
            "0.5735906022938106\n",
            "0.573591605924948\n",
            "0.5735926095550781\n",
            "0.573593613184201\n",
            "0.5735946168123167\n",
            "0.5735956204394252\n",
            "0.5735966240655266\n",
            "0.5735976276906207\n",
            "0.5735986313147077\n",
            "0.5735996349377874\n",
            "0.57360063855986\n",
            "0.5736016421809254\n",
            "0.5736026458009835\n",
            "0.5736036494200345\n",
            "0.5736046530380783\n",
            "0.5736056566551149\n",
            "0.5736066602711443\n",
            "0.5736076638861647\n",
            "0.5736086675001779\n",
            "0.573609671113184\n",
            "0.5736106747251828\n",
            "0.5736116783361744\n",
            "0.5736126819461589\n",
            "0.5736136855551361\n",
            "0.5736146891631062\n",
            "0.5736156927700691\n",
            "0.5736166963760247\n",
            "0.5736176999809732\n",
            "0.5736187035849145\n",
            "0.5736197071878486\n",
            "0.5736207107897755\n",
            "0.5736217143906952\n",
            "0.5736227179906077\n",
            "0.573623721589513\n",
            "0.5736247251874111\n",
            "0.5736257287843021\n",
            "0.5736267323801858\n",
            "0.5736277359750623\n",
            "0.5736287395689317\n",
            "0.5736297431617938\n",
            "0.5736307467536488\n",
            "0.5736317503444965\n",
            "0.5736327539343371\n",
            "0.5736337575231705\n",
            "0.5736347611109966\n",
            "0.5736357646978156\n",
            "0.5736367682836274\n",
            "0.573637771868432\n",
            "0.5736387754522294\n",
            "0.5736397790350196\n",
            "0.5736407826168026\n",
            "0.5736417861975784\n",
            "0.5736427897773471\n",
            "0.5736437933561085\n",
            "0.5736447969338627\n",
            "0.5736458005106098\n",
            "0.5736468040863496\n",
            "0.5736478076610823\n",
            "0.5736488112348077\n",
            "0.573649814807526\n",
            "0.573650818379237\n",
            "0.5736518219499409\n",
            "0.5736528255196376\n",
            "0.5736538290883271\n",
            "0.5736548326560094\n",
            "0.5736558362226845\n",
            "0.5736568397883541\n",
            "0.5736578433530166\n",
            "0.5736588469166719\n",
            "0.57365985047932\n",
            "0.5736608540409609\n",
            "0.5736618576015946\n",
            "0.5736628611612211\n",
            "0.5736638647198404\n",
            "0.5736648682774526\n",
            "0.5736658718340575\n",
            "0.5736668753896552\n",
            "0.5736678789442458\n",
            "0.5736688824978291\n",
            "0.5736698860504053\n",
            "0.5736708896019742\n",
            "0.573671893152536\n",
            "0.5736728967020905\n",
            "0.5736739002506379\n",
            "0.5736749037981781\n",
            "0.5736759073447111\n",
            "0.5736769108902369\n",
            "0.5736779144347555\n",
            "0.5736789179782669\n",
            "0.5736799215207711\n",
            "0.5736809250622699\n",
            "0.5736819286027615\n",
            "0.5736829321422459\n",
            "0.5736839356807231\n",
            "0.5736849392181931\n",
            "0.5736859427546559\n",
            "0.5736869462901115\n",
            "0.57368794982456\n",
            "0.5736889533580012\n",
            "0.5736899568904352\n",
            "0.5736909604218621\n",
            "0.5736919639522817\n",
            "0.5736929674816942\n",
            "0.5736939710100994\n",
            "0.5736949745374975\n",
            "0.5736959780638884\n",
            "0.5736969815892738\n",
            "0.5736979851136521\n",
            "0.5736989886370232\n",
            "0.573699992159387\n",
            "0.5737009956807437\n",
            "0.5737019992010932\n",
            "0.5737030027204355\n",
            "0.5737040062387706\n",
            "0.5737050097560985\n",
            "0.5737060132724192\n",
            "0.5737070167877327\n",
            "0.573708020302039\n",
            "0.57370902381534\n",
            "0.5737100273276337\n",
            "0.5737110308389202\n",
            "0.5737120343491995\n",
            "0.5737130378584716\n",
            "0.5737140413667365\n",
            "0.5737150448739943\n",
            "0.5737160483802448\n",
            "0.5737170518854882\n",
            "0.5737180553897243\n",
            "0.5737190588929533\n",
            "0.5737200623951768\n",
            "0.5737210658963932\n",
            "0.5737220693966023\n",
            "0.5737230728958043\n",
            "0.573724076393999\n",
            "0.5737250798911866\n",
            "0.573726083387367\n",
            "0.5737270868825401\n",
            "0.5737280903767061\n",
            "0.5737290938698667\n",
            "0.5737300973620201\n",
            "0.5737311008531663\n",
            "0.5737321043433052\n",
            "0.573733107832437\n",
            "0.5737341113205616\n",
            "0.573735114807679\n",
            "0.5737361182937892\n",
            "0.5737371217788922\n",
            "0.5737381252629898\n",
            "0.5737391287460802\n",
            "0.5737401322281634\n",
            "0.5737411357092395\n",
            "0.5737421391893083\n",
            "0.5737431426683699\n",
            "0.5737441461464243\n",
            "0.5737451496234716\n",
            "0.5737461530995134\n",
            "0.573747156574548\n",
            "0.5737481600485754\n",
            "0.5737491635215957\n",
            "0.5737501669936087\n",
            "0.5737511704646145\n",
            "0.5737521739346132\n",
            "0.5737531774036047\n",
            "0.5737541808715907\n",
            "0.5737551843385695\n",
            "0.5737561878045412\n",
            "0.5737571912695056\n",
            "0.5737581947334629\n",
            "0.573759198196413\n",
            "0.5737602016583558\n",
            "0.5737612051192933\n",
            "0.5737622085792236\n",
            "0.5737632120381466\n",
            "0.5737642154960625\n",
            "0.5737652189529712\n",
            "0.5737662224088727\n",
            "0.5737672258637687\n",
            "0.5737682293176576\n",
            "0.5737692327705393\n",
            "0.5737702362224137\n",
            "0.573771239673281\n",
            "0.5737722431231411\n",
            "0.573773246571994\n",
            "0.5737742500198415\n",
            "0.5737752534666818\n",
            "0.5737762569125149\n",
            "0.5737772603573408\n",
            "0.5737782638011595\n",
            "0.573779267243971\n",
            "0.5737802706857771\n",
            "0.573781274126576\n",
            "0.5737822775663677\n",
            "0.5737832810051522\n",
            "0.5737842844429295\n",
            "0.5737852878796996\n",
            "0.5737862913154643\n",
            "0.5737872947502218\n",
            "0.5737882981839721\n",
            "0.5737893016167153\n",
            "0.5737903050484512\n",
            "0.5737913084791817\n",
            "0.573792311908905\n",
            "0.5737933153376211\n",
            "0.57379431876533\n",
            "0.5737953221920318\n",
            "0.5737963256177263\n",
            "0.5737973290424154\n",
            "0.5737983324660973\n",
            "0.5737993358887721\n",
            "0.5738003393104396\n",
            "0.5738013427311\n",
            "0.5738023461507549\n",
            "0.5738033495694026\n",
            "0.5738043529870431\n",
            "0.5738053564036765\n",
            "0.5738063598193026\n",
            "0.5738073632339233\n",
            "0.5738083666475369\n",
            "0.5738093700601432\n",
            "0.5738103734717424\n",
            "0.5738113768823343\n",
            "0.5738123802919208\n",
            "0.5738133837005002\n",
            "0.5738143871080723\n",
            "0.5738153905146373\n",
            "0.573816393920195\n",
            "0.5738173973247473\n",
            "0.5738184007282925\n",
            "0.5738194041308304\n",
            "0.5738204075323612\n",
            "0.5738214109328847\n",
            "0.5738224143324029\n",
            "0.5738234177309138\n",
            "0.5738244211284176\n",
            "0.5738254245249141\n",
            "0.5738264279204053\n",
            "0.5738274313148892\n",
            "0.573828434708366\n",
            "0.5738294381008355\n",
            "0.5738304414922979\n",
            "0.5738314448827548\n",
            "0.5738324482722046\n",
            "0.5738334516606471\n",
            "0.5738344550480825\n",
            "0.5738354584345124\n",
            "0.5738364618199352\n",
            "0.5738374652043507\n",
            "0.5738384685877591\n",
            "0.573839471970162\n",
            "0.5738404753515578\n",
            "0.5738414787319464\n",
            "0.5738424821113277\n",
            "0.5738434854897019\n",
            "0.5738444888670706\n",
            "0.5738454922434322\n",
            "0.5738464956187865\n",
            "0.5738474989931337\n",
            "0.5738485023664754\n",
            "0.57384950573881\n",
            "0.5738505091101374\n",
            "0.5738515124804575\n",
            "0.5738525158497723\n",
            "0.5738535192180798\n",
            "0.5738545225853802\n",
            "0.5738555259516733\n",
            "0.5738565293169611\n",
            "0.5738575326812416\n",
            "0.573858536044515\n",
            "0.5738595394067811\n",
            "0.5738605427680419\n",
            "0.5738615461282954\n",
            "0.5738625494875418\n",
            "0.5738635528457809\n",
            "0.5738645562030147\n",
            "0.5738655595592412\n",
            "0.5738665629144606\n",
            "0.5738675662686745\n",
            "0.5738685696218813\n",
            "0.5738695729740808\n",
            "0.5738705763252732\n",
            "0.5738715796754601\n",
            "0.5738725830246398\n",
            "0.5738735863728124\n",
            "0.5738745897199777\n",
            "0.5738755930661377\n",
            "0.5738765964112904\n",
            "0.573877599755436\n",
            "0.5738786030985761\n",
            "0.573879606440709\n",
            "0.5738806097818347\n",
            "0.5738816131219533\n",
            "0.5738826164610664\n",
            "0.5738836197991724\n",
            "0.5738846231362711\n",
            "0.5738856264723644\n",
            "0.5738866298074505\n",
            "0.5738876331415295\n",
            "0.5738886364746012\n",
            "0.5738896398066675\n",
            "0.5738906431377266\n",
            "0.5738916464677786\n",
            "0.5738926497968251\n",
            "0.5738936531248644\n",
            "0.5738946564518965\n",
            "0.5738956597779215\n",
            "0.573896663102941\n",
            "0.5738976664269533\n",
            "0.5738986697499584\n",
            "0.5738996730719581\n",
            "0.5739006763929506\n",
            "0.5739016797129359\n",
            "0.5739026830319158\n",
            "0.5739036863498885\n",
            "0.573904689666854\n",
            "0.5739056929828141\n",
            "0.573906696297767\n",
            "0.5739076996117127\n",
            "0.5739087029246512\n",
            "0.5739097062365843\n",
            "0.5739107095475102\n",
            "0.5739117128574289\n",
            "0.5739127161663422\n",
            "0.5739137194742483\n",
            "0.5739147227811472\n",
            "0.5739157260870407\n",
            "0.573916729391927\n",
            "0.573917732695806\n",
            "0.5739187359986797\n",
            "0.5739197393005462\n",
            "0.5739207426014055\n",
            "0.5739217459012593\n",
            "0.573922749200106\n",
            "0.5739237524979455\n",
            "0.5739247557947795\n",
            "0.5739257590906064\n",
            "0.5739267623854261\n",
            "0.5739277656792403\n",
            "0.5739287689720474\n",
            "0.5739297722638472\n",
            "0.5739307755546417\n",
            "0.5739317788444289\n",
            "0.573932782133209\n",
            "0.5739337854209836\n",
            "0.573934788707751\n",
            "0.5739357919935113\n",
            "0.5739367952782661\n",
            "0.5739377985620138\n",
            "0.5739388018447542\n",
            "0.5739398051264892\n",
            "0.5739408084072171\n",
            "0.5739418116869377\n",
            "0.5739428149656529\n",
            "0.5739438182433609\n",
            "0.5739448215200618\n",
            "0.5739458247957572\n",
            "0.5739468280704454\n",
            "0.5739478313441282\n",
            "0.5739488346168038\n",
            "0.5739498378884722\n",
            "0.5739508411591352\n",
            "0.573951844428791\n",
            "0.5739528476974396\n",
            "0.5739538509650828\n",
            "0.5739548542317188\n",
            "0.5739558574973476\n",
            "0.5739568607619709\n",
            "0.5739578640255871\n",
            "0.5739588672881979\n",
            "0.5739598705498015\n",
            "0.5739608738103978\n",
            "0.5739618770699888\n",
            "0.5739628803285726\n",
            "0.5739638835861491\n",
            "0.5739648868427203\n",
            "0.5739658900982842\n",
            "0.5739668933528428\n",
            "0.5739678966063941\n",
            "0.5739688998589383\n",
            "0.573969903110477\n",
            "0.5739709063610086\n",
            "0.5739719096105329\n",
            "0.5739729128590518\n",
            "0.5739739161065636\n",
            "0.5739749193530699\n",
            "0.573975922598569\n",
            "0.5739769258430609\n",
            "0.5739779290865474\n",
            "0.5739789323290267\n",
            "0.5739799355705006\n",
            "0.5739809388109673\n",
            "0.5739819420504269\n",
            "0.5739829452888809\n",
            "0.5739839485263278\n",
            "0.5739849517627693\n",
            "0.5739859549982036\n",
            "0.5739869582326307\n",
            "0.5739879614660524\n",
            "0.5739889646984668\n",
            "0.5739899679298759\n",
            "0.5739909711602778\n",
            "0.5739919743896724\n",
            "0.5739929776180617\n",
            "0.5739939808454437\n",
            "0.5739949840718204\n",
            "0.5739959872971898\n",
            "0.5739969905215521\n",
            "0.5739979937449089\n",
            "0.5739989969672585\n",
            "0.5740000001886028\n",
            "0.5740010034089398\n",
            "0.5740020066282714\n",
            "0.5740030098465958\n",
            "0.574004013063913\n",
            "0.5740050162802248\n",
            "0.5740060194955294\n",
            "0.5740070227098286\n",
            "0.5740080259231206\n",
            "0.5740090291354072\n",
            "0.5740100323466866\n",
            "0.5740110355569588\n",
            "0.5740120387662255\n",
            "0.5740130419744851\n",
            "0.5740140451817393\n",
            "0.5740150483879862\n",
            "0.5740160515932278\n",
            "0.5740170547974621\n",
            "0.5740180580006893\n",
            "0.574019061202911\n",
            "0.5740200644041256\n",
            "0.5740210676043347\n",
            "0.5740220708035366\n",
            "0.5740230740017331\n",
            "0.5740240771989225\n",
            "0.5740250803951064\n",
            "0.5740260835902831\n",
            "0.5740270867844526\n",
            "0.5740280899776167\n",
            "0.5740290931697736\n",
            "0.5740300963609251\n",
            "0.5740310995510693\n",
            "0.5740321027402082\n",
            "0.5740331059283399\n",
            "0.5740341091154662\n",
            "0.5740351123015852\n",
            "0.5740361154866971\n",
            "0.5740371186708035\n",
            "0.5740381218539028\n",
            "0.5740391250359966\n",
            "0.5740401282170833\n",
            "0.5740411313971645\n",
            "0.5740421345762385\n",
            "0.5740431377543072\n",
            "0.5740441409313686\n",
            "0.5740451441074246\n",
            "0.5740461472824734\n",
            "0.5740471504565168\n",
            "0.574048153629553\n",
            "0.5740491568015837\n",
            "0.5740501599726073\n",
            "0.5740511631426237\n",
            "0.5740521663116347\n",
            "0.5740531694796385\n",
            "0.5740541726466368\n",
            "0.574055175812628\n",
            "0.5740561789776137\n",
            "0.5740571821415923\n",
            "0.5740581853045654\n",
            "0.5740591884665314\n",
            "0.5740601916274919\n",
            "0.5740611947874452\n",
            "0.5740621979463931\n",
            "0.5740632011043338\n",
            "0.5740642042612691\n",
            "0.5740652074171972\n",
            "0.5740662105721199\n",
            "0.5740672137260354\n",
            "0.5740682168789455\n",
            "0.5740692200308484\n",
            "0.5740702231817458\n",
            "0.5740712263316361\n",
            "0.574072229480521\n",
            "0.5740732326283986\n",
            "0.5740742357752708\n",
            "0.5740752389211359\n",
            "0.5740762420659955\n",
            "0.5740772452098479\n",
            "0.5740782483526949\n",
            "0.5740792514945348\n",
            "0.5740802546353692\n",
            "0.5740812577751964\n",
            "0.5740822609140181\n",
            "0.5740832640518327\n",
            "0.5740842671886419\n",
            "0.5740852703244439\n",
            "0.5740862734592405\n",
            "0.5740872765930298\n",
            "0.5740882797258138\n",
            "0.5740892828575905\n",
            "0.5740902859883619\n",
            "0.574091289118126\n",
            "0.5740922922468847\n",
            "0.5740932953746363\n",
            "0.5740942985013824\n",
            "0.5740953016271213\n",
            "0.5740963047518548\n",
            "0.5740973078755829\n",
            "0.5740983109983038\n",
            "0.5740993141200192\n",
            "0.5741003172407275\n",
            "0.5741013203604304\n",
            "0.574102323479126\n",
            "0.5741033265968163\n",
            "0.5741043297134993\n",
            "0.574105332829177\n",
            "0.5741063359438474\n",
            "0.5741073390575124\n",
            "0.5741083421701703\n",
            "0.5741093452818227\n",
            "0.5741103483924697\n",
            "0.5741113515021095\n",
            "0.5741123546107438\n",
            "0.574113357718371\n",
            "0.5741143608249928\n",
            "0.5741153639306074\n",
            "0.5741163670352165\n",
            "0.5741173701388185\n",
            "0.574118373241415\n",
            "0.5741193763430044\n",
            "0.5741203794435883\n",
            "0.5741213825431668\n",
            "0.5741223856417381\n",
            "0.574123388739304\n",
            "0.5741243918358627\n",
            "0.574125394931416\n",
            "0.5741263980259621\n",
            "0.5741274011195028\n",
            "0.5741284042120363\n",
            "0.5741294073035643\n",
            "0.574130410394087\n",
            "0.5741314134836024\n",
            "0.5741324165721124\n",
            "0.5741334196596153\n",
            "0.5741344227461127\n",
            "0.5741354258316029\n",
            "0.5741364289160877\n",
            "0.5741374319995671\n",
            "0.5741384350820393\n",
            "0.5741394381635061\n",
            "0.5741404412439657\n",
            "0.5741414443234198\n",
            "0.5741424474018668\n",
            "0.5741434504793084\n",
            "0.5741444535557445\n",
            "0.5741454566311734\n",
            "0.574146459705597\n",
            "0.5741474627790133\n",
            "0.5741484658514242\n",
            "0.5741494689228297\n",
            "0.574150471993228\n",
            "0.5741514750626209\n",
            "0.5741524781310066\n",
            "0.5741534811983868\n",
            "0.5741544842647599\n",
            "0.5741554873301276\n",
            "0.5741564903944898\n",
            "0.5741574934578448\n",
            "0.5741584965201945\n",
            "0.5741594995815369\n",
            "0.5741605026418739\n",
            "0.5741615057012055\n",
            "0.5741625087595299\n",
            "0.5741635118168489\n",
            "0.5741645148731607\n",
            "0.574165517928467\n",
            "0.574166520982768\n",
            "0.5741675240360617\n",
            "0.5741685270883501\n",
            "0.5741695301396312\n",
            "0.574170533189907\n",
            "0.5741715362391773\n",
            "0.5741725392874404\n",
            "0.5741735423346981\n",
            "0.5741745453809504\n",
            "0.5741755484261954\n",
            "0.5741765514704351\n",
            "0.5741775545136676\n",
            "0.5741785575558946\n",
            "0.5741795605971163\n",
            "0.5741805636373307\n",
            "0.5741815666765397\n",
            "0.5741825697147416\n",
            "0.574183572751938\n",
            "0.574184575788129\n",
            "0.5741855788233128\n",
            "0.5741865818574912\n",
            "0.5741875848906641\n",
            "0.5741885879228299\n",
            "0.5741895909539902\n",
            "0.5741905939841452\n",
            "0.5741915970132929\n",
            "0.5741926000414352\n",
            "0.5741936030685704\n",
            "0.5741946060947001\n",
            "0.5741956091198244\n",
            "0.5741966121439415\n",
            "0.5741976151670531\n",
            "0.5741986181891594\n",
            "0.5741996212102585\n",
            "0.5742006242303521\n",
            "0.5742016272494403\n",
            "0.5742026302675214\n",
            "0.574203633284597\n",
            "0.5742046363006672\n",
            "0.5742056393157302\n",
            "0.5742066423297878\n",
            "0.5742076453428382\n",
            "0.5742086483548832\n",
            "0.5742096513659227\n",
            "0.5742106543759551\n",
            "0.574211657384982\n",
            "0.5742126603930036\n",
            "0.5742136634000179\n",
            "0.5742146664060268\n",
            "0.5742156694110303\n",
            "0.5742166724150266\n",
            "0.5742176754180175\n",
            "0.574218678420003\n",
            "0.5742196814209812\n",
            "0.5742206844209541\n",
            "0.5742216874199215\n",
            "0.5742226904178818\n",
            "0.5742236934148366\n",
            "0.574224696410786\n",
            "0.5742256994057282\n",
            "0.574226702399665\n",
            "0.5742277053925964\n",
            "0.5742287083845206\n",
            "0.5742297113754393\n",
            "0.5742307143653527\n",
            "0.5742317173542588\n",
            "0.5742327203421596\n",
            "0.5742337233290549\n",
            "0.574234726314943\n",
            "0.5742357292998257\n",
            "0.574236732283703\n",
            "0.5742377352665748\n",
            "0.5742387382484395\n",
            "0.5742397412292988\n",
            "0.5742407442091526\n",
            "0.5742417471879993\n",
            "0.5742427501658405\n",
            "0.5742437531426763\n",
            "0.5742447561185049\n",
            "0.5742457590933281\n",
            "0.5742467620671459\n",
            "0.5742477650399564\n",
            "0.5742487680117616\n",
            "0.5742497709825614\n",
            "0.5742507739523557\n",
            "0.5742517769211428\n",
            "0.5742527798889245\n",
            "0.5742537828557008\n",
            "0.5742547858214699\n",
            "0.5742557887862336\n",
            "0.5742567917499919\n",
            "0.5742577947127447\n",
            "0.5742587976744904\n",
            "0.5742598006352306\n",
            "0.5742608035949655\n",
            "0.5742618065536931\n",
            "0.5742628095114153\n",
            "0.5742638124681321\n",
            "0.5742648154238417\n",
            "0.5742658183785458\n",
            "0.5742668213322446\n",
            "0.5742678242849379\n",
            "0.5742688272366241\n",
            "0.5742698301873048\n",
            "0.5742708331369801\n",
            "0.57427183608565\n",
            "0.5742728390333127\n",
            "0.57427384197997\n",
            "0.5742748449256219\n",
            "0.5742758478702665\n",
            "0.5742768508139058\n",
            "0.5742778537565396\n",
            "0.574278856698168\n",
            "0.5742798596387892\n",
            "0.574280862578405\n",
            "0.5742818655170154\n",
            "0.5742828684546204\n",
            "0.5742838713912182\n",
            "0.5742848743268105\n",
            "0.5742858772613975\n",
            "0.574286880194979\n",
            "0.5742878831275533\n",
            "0.5742888860591222\n",
            "0.5742898889896857\n",
            "0.5742908919192438\n",
            "0.5742918948477946\n",
            "0.5742928977753401\n",
            "0.5742939007018801\n",
            "0.5742949036274148\n",
            "0.5742959065519422\n",
            "0.5742969094754642\n",
            "0.5742979123979808\n",
            "0.574298915319492\n",
            "0.5742999182399959\n",
            "0.5743009211594945\n",
            "0.5743019240779876\n",
            "0.5743029269954754\n",
            "0.5743039299119559\n",
            "0.574304932827431\n",
            "0.5743059357419007\n",
            "0.574306938655365\n",
            "0.5743079415678221\n",
            "0.5743089444792737\n",
            "0.57430994738972\n",
            "0.5743109502991608\n",
            "0.5743119532075944\n",
            "0.5743129561150226\n",
            "0.5743139590214454\n",
            "0.5743149619268628\n",
            "0.5743159648312748\n",
            "0.5743169677346796\n",
            "0.5743179706370789\n",
            "0.5743189735384728\n",
            "0.5743199764388613\n",
            "0.5743209793382427\n",
            "0.5743219822366186\n",
            "0.574322985133989\n",
            "0.5743239880303541\n",
            "0.5743249909257138\n",
            "0.5743259938200662\n",
            "0.5743269967134133\n",
            "0.5743279996057549\n",
            "0.5743290024970911\n",
            "0.5743300053874218\n",
            "0.5743310082767454\n",
            "0.5743320111650636\n",
            "0.5743330140523764\n",
            "0.5743340169386837\n",
            "0.5743350198239838\n",
            "0.5743360227082785\n",
            "0.5743370255915679\n",
            "0.5743380284738517\n",
            "0.5743390313551302\n",
            "0.5743400342354015\n",
            "0.5743410371146673\n",
            "0.5743420399929278\n",
            "0.5743430428701828\n",
            "0.5743440457464324\n",
            "0.5743450486216766\n",
            "0.5743460514959136\n",
            "0.5743470543691451\n",
            "0.5743480572413713\n",
            "0.574349060112592\n",
            "0.5743500629828073\n",
            "0.5743510658520155\n",
            "0.5743520687202182\n",
            "0.5743530715874154\n",
            "0.5743540744536073\n",
            "0.5743550773187938\n",
            "0.574356080182973\n",
            "0.5743570830461469\n",
            "0.5743580859083153\n",
            "0.5743590887694783\n",
            "0.5743600916296359\n",
            "0.574361094488788\n",
            "0.574362097346933\n",
            "0.5743631002040726\n",
            "0.5743641030602067\n",
            "0.5743651059153354\n",
            "0.5743661087694587\n",
            "0.5743671116225766\n",
            "0.5743681144746873\n",
            "0.5743691173257925\n",
            "0.5743701201758924\n",
            "0.5743711230249868\n",
            "0.5743721258730758\n",
            "0.5743731287201594\n",
            "0.5743741315662358\n",
            "0.5743751344113068\n",
            "0.5743761372553724\n",
            "0.5743771400984325\n",
            "0.5743781429404873\n",
            "0.5743791457815366\n",
            "0.5743801486215787\n",
            "0.5743811514606154\n",
            "0.5743821542986467\n",
            "0.5743831571356726\n",
            "0.574384159971693\n",
            "0.574385162806708\n",
            "0.5743861656407176\n",
            "0.5743871684737201\n",
            "0.5743881713057171\n",
            "0.5743891741367086\n",
            "0.5743901769666948\n",
            "0.5743911797956756\n",
            "0.5743921826236509\n",
            "0.5743931854506208\n",
            "0.5743941882765835\n",
            "0.5743951911015408\n",
            "0.5743961939254927\n",
            "0.5743971967484391\n",
            "0.5743981995703802\n",
            "0.5743992023913158\n",
            "0.574400205211246\n",
            "0.5744012080301708\n",
            "0.5744022108480884\n",
            "0.5744032136650006\n",
            "0.5744042164809073\n",
            "0.5744052192958087\n",
            "0.5744062221097046\n",
            "0.5744072249225951\n",
            "0.5744082277344802\n",
            "0.5744092305453599\n",
            "0.5744102333552323\n",
            "0.5744112361640994\n",
            "0.574412238971961\n",
            "0.5744132417788173\n",
            "0.574414244584668\n",
            "0.5744152473895134\n",
            "0.5744162501933534\n",
            "0.574417252996188\n",
            "0.5744182557980171\n",
            "0.574419258598839\n",
            "0.5744202613986555\n",
            "0.5744212641974666\n",
            "0.5744222669952723\n",
            "0.5744232697920726\n",
            "0.5744242725878674\n",
            "0.5744252753826569\n",
            "0.5744262781764409\n",
            "0.5744272809692195\n",
            "0.5744282837609926\n",
            "0.5744292865517586\n",
            "0.5744302893415192\n",
            "0.5744312921302743\n",
            "0.5744322949180241\n",
            "0.5744332977047684\n",
            "0.5744343004905073\n",
            "0.5744353032752407\n",
            "0.5744363060589688\n",
            "0.5744373088416914\n",
            "0.5744383116234086\n",
            "0.5744393144041187\n",
            "0.5744403171838233\n",
            "0.5744413199625225\n",
            "0.5744423227402162\n",
            "0.5744433255169046\n",
            "0.5744443282925875\n",
            "0.574445331067265\n",
            "0.5744463338409371\n",
            "0.5744473366136038\n",
            "0.5744483393852651\n",
            "0.5744493421559209\n",
            "0.5744503449255713\n",
            "0.5744513476942164\n",
            "0.5744523504618542\n",
            "0.5744533532284866\n",
            "0.5744543559941135\n",
            "0.5744553587587351\n",
            "0.5744563615223512\n",
            "0.574457364284962\n",
            "0.5744583670465673\n",
            "0.5744593698071672\n",
            "0.5744603725667616\n",
            "0.5744613753253507\n",
            "0.5744623780829343\n",
            "0.5744633808395125\n",
            "0.5744643835950853\n",
            "0.5744653863496527\n",
            "0.5744663891032147\n",
            "0.5744673918557712\n",
            "0.5744683946073224\n",
            "0.5744693973578663\n",
            "0.5744704001074048\n",
            "0.5744714028559379\n",
            "0.5744724056034656\n",
            "0.5744734083499878\n",
            "0.5744744110955047\n",
            "0.5744754138400161\n",
            "0.5744764165835221\n",
            "0.5744774193260227\n",
            "0.5744784220675179\n",
            "0.5744794248080076\n",
            "0.574480427547492\n",
            "0.5744814302859709\n",
            "0.5744824330234444\n",
            "0.5744834357599125\n",
            "0.5744844384953751\n",
            "0.5744854412298324\n",
            "0.5744864439632842\n",
            "0.5744874466957306\n",
            "0.5744884494271716\n",
            "0.5744894521576072\n",
            "0.5744904548870373\n",
            "0.574491457615462\n",
            "0.5744924603428814\n",
            "0.5744934630692953\n",
            "0.5744944657947038\n",
            "0.5744954685191068\n",
            "0.5744964712425027\n",
            "0.5744974739648931\n",
            "0.5744984766862782\n",
            "0.5744994794066578\n",
            "0.574500482126032\n",
            "0.5745014848444008\n",
            "0.5745024875617641\n",
            "0.5745034902781221\n",
            "0.5745044929934746\n",
            "0.5745054957078217\n",
            "0.5745064984211634\n",
            "0.5745075011334997\n",
            "0.5745085038448305\n",
            "0.574509506555156\n",
            "0.574510509264476\n",
            "0.5745115119727906\n",
            "0.5745125146800998\n",
            "0.5745135173864035\n",
            "0.5745145200917019\n",
            "0.5745155227959948\n",
            "0.5745165254992823\n",
            "0.5745175282015644\n",
            "0.5745185309028411\n",
            "0.5745195336031124\n",
            "0.5745205363023782\n",
            "0.5745215390006386\n",
            "0.5745225416978936\n",
            "0.5745235443941432\n",
            "0.5745245470893874\n",
            "0.5745255497836261\n",
            "0.5745265524768595\n",
            "0.5745275551690874\n",
            "0.5745285578603099\n",
            "0.574529560550527\n",
            "0.5745305632397386\n",
            "0.5745315659279449\n",
            "0.5745325686151457\n",
            "0.5745335713013429\n",
            "0.5745345739865346\n",
            "0.574535576670721\n",
            "0.5745365793539019\n",
            "0.5745375820360774\n",
            "0.5745385847172475\n",
            "0.5745395873974122\n",
            "0.5745405900765714\n",
            "0.5745415927547253\n",
            "0.5745425954318737\n",
            "0.5745435981080167\n",
            "0.5745446007831543\n",
            "0.5745456034572864\n",
            "0.5745466061304132\n",
            "0.5745476088025345\n",
            "0.5745486114736504\n",
            "0.5745496141437609\n",
            "0.574550616812866\n",
            "0.5745516194809657\n",
            "0.5745526221480599\n",
            "0.5745536248141487\n",
            "0.5745546274792321\n",
            "0.5745556301433101\n",
            "0.5745566328063827\n",
            "0.5745576354684498\n",
            "0.5745586381295116\n",
            "0.5745596407895679\n",
            "0.5745606434486206\n",
            "0.5745616461066678\n",
            "0.5745626487637097\n",
            "0.5745636514197461\n",
            "0.5745646540747771\n",
            "0.5745656567288027\n",
            "0.5745666593818228\n",
            "0.5745676620338376\n",
            "0.5745686646848469\n",
            "0.5745696673348508\n",
            "0.5745706699838493\n",
            "0.5745716726318424\n",
            "0.57457267527883\n",
            "0.5745736779248123\n",
            "0.5745746805697891\n",
            "0.5745756832137605\n",
            "0.5745766858567265\n",
            "0.5745776884986888\n",
            "0.5745786911396458\n",
            "0.5745796937795973\n",
            "0.5745806964185434\n",
            "0.574581699056484\n",
            "0.5745827016934193\n",
            "0.5745837043293491\n",
            "0.5745847069642736\n",
            "0.5745857095981926\n",
            "0.5745867122311061\n",
            "0.5745877148630143\n",
            "0.574588717493917\n",
            "0.5745897201238162\n",
            "0.5745907227527098\n",
            "0.5745917253805981\n",
            "0.574592728007481\n",
            "0.5745937306333584\n",
            "0.5745947332582304\n",
            "0.574595735882097\n",
            "0.5745967385049582\n",
            "0.5745977411268139\n",
            "0.5745987437476643\n",
            "0.5745997463675092\n",
            "0.5746007489863505\n",
            "0.5746017516041864\n",
            "0.5746027542210168\n",
            "0.5746037568368418\n",
            "0.5746047594516615\n",
            "0.5746057620654756\n",
            "0.5746067646782844\n",
            "0.5746077672900878\n",
            "0.5746087699008857\n",
            "0.5746097725106782\n",
            "0.5746107751194671\n",
            "0.5746117777272506\n",
            "0.5746127803340286\n",
            "0.5746137829398013\n",
            "0.5746147855445685\n",
            "0.5746157881483303\n",
            "0.5746167907510866\n",
            "0.5746177933528376\n",
            "0.5746187959535831\n",
            "0.574619798553325\n",
            "0.5746208011520615\n",
            "0.5746218037497925\n",
            "0.5746228063465182\n",
            "0.5746238089422384\n",
            "0.5746248115369532\n",
            "0.5746258141306626\n",
            "0.5746268167233666\n",
            "0.5746278193150669\n",
            "0.5746288219057618\n",
            "0.5746298244954513\n",
            "0.5746308270841354\n",
            "0.574631829671814\n",
            "0.5746328322584873\n",
            "0.5746338348441551\n",
            "0.5746348374288175\n",
            "0.5746358400124763\n",
            "0.5746368425951296\n",
            "0.5746378451767775\n",
            "0.57463884775742\n",
            "0.5746398503370571\n",
            "0.5746408529156888\n",
            "0.574641855493315\n",
            "0.5746428580699376\n",
            "0.5746438606455548\n",
            "0.5746448632201666\n",
            "0.574645865793773\n",
            "0.5746468683663739\n",
            "0.5746478709379694\n",
            "0.5746488735085613\n",
            "0.5746498760781478\n",
            "0.5746508786467288\n",
            "0.5746518812143044\n",
            "0.5746528837808746\n",
            "0.5746538863464394\n",
            "0.5746548889109988\n",
            "0.5746558914745545\n",
            "0.5746568940371048\n",
            "0.5746578965986497\n",
            "0.5746588991591892\n",
            "0.5746599017187233\n",
            "0.5746609042772519\n",
            "0.5746619068347769\n",
            "0.5746629093912965\n",
            "0.5746639119468107\n",
            "0.5746649145013194\n",
            "0.5746659170548227\n",
            "0.5746669196073206\n",
            "0.5746679221588149\n",
            "0.5746689247093038\n",
            "0.5746699272587872\n",
            "0.5746709298072652\n",
            "0.5746719323547378\n",
            "0.574672934901205\n",
            "0.5746739374466685\n",
            "0.5746749399911266\n",
            "0.5746759425345793\n",
            "0.5746769450770266\n",
            "0.5746779476184685\n",
            "0.5746789501589067\n",
            "0.5746799526983395\n",
            "0.5746809552367669\n",
            "0.5746819577741888\n",
            "0.5746829603106054\n",
            "0.5746839628460183\n",
            "0.5746849653804258\n",
            "0.5746859679138279\n",
            "0.5746869704462245\n",
            "0.5746879729776158\n",
            "0.5746889755080016\n",
            "0.5746899780373838\n",
            "0.5746909805657605\n",
            "0.5746919830931319\n",
            "0.5746929856194978\n",
            "0.5746939881448583\n",
            "0.5746949906692151\n",
            "0.5746959931925666\n",
            "0.5746969957149126\n",
            "0.5746979982362532\n",
            "0.5746990007565902\n",
            "0.5747000032759217\n",
            "0.5747010057942479\n",
            "0.5747020083115686\n",
            "0.5747030108278839\n",
            "0.5747040133431955\n",
            "0.5747050158575018\n",
            "0.5747060183708026\n",
            "0.574707020883098\n",
            "0.574708023394388\n",
            "0.5747090259046743\n",
            "0.5747100284139552\n",
            "0.5747110309222307\n",
            "0.5747120334295008\n",
            "0.5747130359357673\n",
            "0.5747140384410283\n",
            "0.5747150409452839\n",
            "0.5747160434485341\n",
            "0.5747170459507789\n",
            "0.57471804845202\n",
            "0.5747190509522557\n",
            "0.574720053451486\n",
            "0.5747210559497109\n",
            "0.5747220584469321\n",
            "0.574723060943148\n",
            "0.5747240634383584\n",
            "0.5747250659325633\n",
            "0.5747260684257647\n",
            "0.5747270709179606\n",
            "0.5747280734091511\n",
            "0.5747290758993362\n",
            "0.5747300783885176\n",
            "0.5747310808766937\n",
            "0.5747320833638643\n",
            "0.5747330858500295\n",
            "0.574734088335191\n",
            "0.5747350908193471\n",
            "0.5747360933024979\n",
            "0.5747370957846432\n",
            "0.5747380982657848\n",
            "0.574739100745921\n",
            "0.5747401032250519\n",
            "0.5747411057031773\n",
            "0.574742108180299\n",
            "0.5747431106564154\n",
            "0.5747441131315263\n",
            "0.5747451156056318\n",
            "0.5747461180787337\n",
            "0.5747471205508301\n",
            "0.5747481230219211\n",
            "0.5747491254920067\n",
            "0.5747501279610887\n",
            "0.5747511304291653\n",
            "0.5747521328962364\n",
            "0.5747531353623021\n",
            "0.5747541378273642\n",
            "0.5747551402914208\n",
            "0.5747561427544721\n",
            "0.5747571452165197\n",
            "0.5747581476775618\n",
            "0.5747591501375986\n",
            "0.5747601525966299\n",
            "0.5747611550546576\n",
            "0.5747621575116799\n",
            "0.5747631599676968\n",
            "0.5747641624227082\n",
            "0.574765164876716\n",
            "0.5747661673297184\n",
            "0.5747671697817154\n",
            "0.5747681722327087\n",
            "0.5747691746826966\n",
            "0.5747701771316791\n",
            "0.574771179579658\n",
            "0.5747721820266314\n",
            "0.5747731844725994\n",
            "0.574774186917562\n",
            "0.5747751893615209\n",
            "0.5747761918044745\n",
            "0.5747771942464226\n",
            "0.5747781966873671\n",
            "0.5747791991273061\n",
            "0.5747802015662398\n",
            "0.574781204004168\n",
            "0.5747822064410926\n",
            "0.5747832088770117\n",
            "0.5747842113119255\n",
            "0.5747852137458356\n",
            "0.5747862161787403\n",
            "0.5747872186106395\n",
            "0.5747882210415352\n",
            "0.5747892234714254\n",
            "0.5747902259003101\n",
            "0.5747912283281913\n",
            "0.574792230755067\n",
            "0.5747932331809373\n",
            "0.5747942356058022\n",
            "0.5747952380296635\n",
            "0.5747962404525193\n",
            "0.5747972428743697\n",
            "0.5747982452952165\n",
            "0.5747992477150579\n",
            "0.5748002501338938\n",
            "0.5748012525517261\n",
            "0.574802254968553\n",
            "0.5748032573843744\n",
            "0.5748042597991923\n",
            "0.5748052622130047\n",
            "0.5748062646258116\n",
            "0.574807267037615\n",
            "0.5748082694484129\n",
            "0.5748092718582054\n",
            "0.5748102742669943\n",
            "0.5748112766747777\n",
            "0.5748122790815557\n",
            "0.5748132814873301\n",
            "0.5748142838920991\n",
            "0.5748152862958626\n",
            "0.5748162886986226\n",
            "0.574817291100377\n",
            "0.5748182935011261\n",
            "0.5748192959008716\n",
            "0.5748202982996116\n",
            "0.5748213006973462\n",
            "0.5748223030940771\n",
            "0.5748233054898026\n",
            "0.5748243078845228\n",
            "0.5748253102782392\n",
            "0.5748263126709503\n",
            "0.5748273150626577\n",
            "0.5748283174533597\n",
            "0.5748293198430563\n",
            "0.5748303222317492\n",
            "0.5748313246194368\n",
            "0.5748323270061189\n",
            "0.5748333293917973\n",
            "0.5748343317764704\n",
            "0.574835334160138\n",
            "0.574836336542802\n",
            "0.5748373389244605\n",
            "0.5748383413051155\n",
            "0.574839343684765\n",
            "0.5748403460634091\n",
            "0.5748413484410495\n",
            "0.5748423508176845\n",
            "0.5748433531933141\n",
            "0.5748443555679401\n",
            "0.5748453579415607\n",
            "0.5748463603141758\n",
            "0.5748473626857873\n",
            "0.5748483650563934\n",
            "0.5748493674259958\n",
            "0.5748503697945928\n",
            "0.5748513721621844\n",
            "0.5748523745287724\n",
            "0.5748533768943549\n",
            "0.5748543792589338\n",
            "0.5748553816225073\n",
            "0.5748563839850753\n",
            "0.5748573863466397\n",
            "0.5748583887071987\n",
            "0.5748593910667523\n",
            "0.5748603934253023\n",
            "0.5748613957828468\n",
            "0.5748623981393877\n",
            "0.5748634004949231\n",
            "0.5748644028494532\n",
            "0.5748654052029796\n",
            "0.5748664075555006\n",
            "0.5748674099070179\n",
            "0.5748684122575298\n",
            "0.5748694146070363\n",
            "0.5748704169555392\n",
            "0.5748714193030366\n",
            "0.5748724216495305\n",
            "0.5748734239950188\n",
            "0.5748744263395018\n",
            "0.5748754286829811\n",
            "0.574876431025455\n",
            "0.5748774333669253\n",
            "0.5748784357073902\n",
            "0.5748794380468496\n",
            "0.5748804403853054\n",
            "0.5748814427227558\n",
            "0.5748824450592025\n",
            "0.5748834473946438\n",
            "0.5748844497290815\n",
            "0.5748854520625137\n",
            "0.5748864543949406\n",
            "0.5748874567263638\n",
            "0.5748884590567815\n",
            "0.5748894613861957\n",
            "0.5748904637146044\n",
            "0.5748914660420095\n",
            "0.5748924683684091\n",
            "0.5748934706938034\n",
            "0.574894473018194\n",
            "0.5748954753415791\n",
            "0.5748964776639607\n",
            "0.5748974799853368\n",
            "0.5748984823057093\n",
            "0.5748994846250763\n",
            "0.574900486943438\n",
            "0.574901489260796\n",
            "0.5749024915771486\n",
            "0.5749034938924975\n",
            "0.574904496206841\n",
            "0.5749054985201809\n",
            "0.5749065008325154\n",
            "0.5749075031438444\n",
            "0.5749085054541698\n",
            "0.5749095077634898\n",
            "0.5749105100718062\n",
            "0.5749115123791171\n",
            "0.5749125146854244\n",
            "0.5749135169907262\n",
            "0.5749145192950245\n",
            "0.5749155215983173\n",
            "0.5749165239006064\n",
            "0.5749175262018902\n",
            "0.5749185285021685\n",
            "0.5749195308014432\n",
            "0.5749205330997125\n",
            "0.5749215353969781\n",
            "0.5749225376932383\n",
            "0.5749235399884949\n",
            "0.574924542282746\n",
            "0.5749255445759935\n",
            "0.5749265468682356\n",
            "0.5749275491594741\n",
            "0.5749285514497071\n",
            "0.5749295537389365\n",
            "0.5749305560271605\n",
            "0.574931558314379\n",
            "0.574932560600594\n",
            "0.5749335628858034\n",
            "0.5749345651700093\n",
            "0.5749355674532097\n",
            "0.5749365697354065\n",
            "0.5749375720165979\n",
            "0.5749385742967856\n",
            "0.574939576575968\n",
            "0.5749405788541466\n",
            "0.5749415811313199\n",
            "0.5749425834074895\n",
            "0.5749435856826537\n",
            "0.5749445879568142\n",
            "0.5749455902299694\n",
            "0.5749465925021209\n",
            "0.574947594773267\n",
            "0.5749485970434094\n",
            "0.5749495993125464\n",
            "0.5749506015806798\n",
            "0.5749516038478077\n",
            "0.5749526061139321\n",
            "0.574953608379051\n",
            "0.5749546106431662\n",
            "0.5749556129062761\n",
            "0.5749566151683823\n",
            "0.574957617429483\n",
            "0.5749586196895802\n",
            "0.5749596219486719\n",
            "0.57496062420676\n",
            "0.5749616264638426\n",
            "0.5749626287199217\n",
            "0.5749636309749953\n",
            "0.5749646332290652\n",
            "0.5749656354821298\n",
            "0.5749666377341907\n",
            "0.5749676399852461\n",
            "0.574968642235298\n",
            "0.5749696444843444\n",
            "0.5749706467323872\n",
            "0.5749716489794245\n",
            "0.5749726512254583\n",
            "0.5749736534704866\n",
            "0.5749746557145112\n",
            "0.5749756579575305\n",
            "0.5749766601995461\n",
            "0.5749776624405563\n",
            "0.5749786646805628\n",
            "0.5749796669195639\n",
            "0.5749806691575614\n",
            "0.5749816713945552\n",
            "0.5749826736305437\n",
            "0.5749836758655285\n",
            "0.5749846780995078\n",
            "0.5749856803324835\n",
            "0.5749866825644538\n",
            "0.5749876847954205\n",
            "0.5749886870253818\n",
            "0.5749896892543394\n",
            "0.5749906914822915\n",
            "0.5749916937092401\n",
            "0.5749926959351832\n",
            "0.5749936981601227\n",
            "0.5749947003840568\n",
            "0.5749957026069872\n",
            "0.574996704828914\n",
            "0.5749977070498353\n",
            "0.574998709269753\n",
            "0.5749997114886654\n",
            "0.575000713706574\n",
            "0.5750017159234773\n",
            "0.5750027181393769\n",
            "0.575003720354271\n",
            "0.5750047225681616\n",
            "0.5750057247810485\n",
            "0.57500672699293\n",
            "0.5750077292038078\n",
            "0.5750087314136803\n",
            "0.575009733622549\n",
            "0.5750107358304124\n",
            "0.5750117380372721\n",
            "0.5750127402431264\n",
            "0.5750137424479771\n",
            "0.5750147446518241\n",
            "0.5750157468546657\n",
            "0.5750167490565037\n",
            "0.5750177512573362\n",
            "0.5750187534571651\n",
            "0.5750197556559886\n",
            "0.5750207578538085\n",
            "0.5750217600506247\n",
            "0.5750227622464354\n",
            "0.5750237644412426\n",
            "0.5750247666350443\n",
            "0.5750257688278424\n",
            "0.5750267710196351\n",
            "0.5750277732104241\n",
            "0.5750287754002095\n",
            "0.5750297775889894\n",
            "0.5750307797767658\n",
            "0.5750317819635367\n",
            "0.5750327841493039\n",
            "0.5750337863340675\n",
            "0.5750347885178257\n",
            "0.5750357907005803\n",
            "0.5750367928823295\n",
            "0.575037795063075\n",
            "0.575038797242815\n",
            "0.5750397994215515\n",
            "0.5750408015992843\n",
            "0.5750418037760117\n",
            "0.5750428059517354\n",
            "0.5750438081264537\n",
            "0.5750448103001684\n",
            "0.5750458124728794\n",
            "0.5750468146445851\n",
            "0.575047816815287\n",
            "0.5750488189849836\n",
            "0.5750498211536765\n",
            "0.5750508233213658\n",
            "0.5750518254880497\n",
            "0.5750528276537299\n",
            "0.5750538298184065\n",
            "0.5750548319820776\n",
            "0.5750558341447451\n",
            "0.5750568363064072\n",
            "0.5750578384670657\n",
            "0.5750588406267205\n",
            "0.5750598427853699\n",
            "0.5750608449430157\n",
            "0.575061847099656\n",
            "0.5750628492552927\n",
            "0.5750638514099258\n",
            "0.5750648535635534\n",
            "0.5750658557161774\n",
            "0.5750668578677978\n",
            "0.5750678600184127\n",
            "0.575068862168024\n",
            "0.5750698643166299\n",
            "0.5750708664642321\n",
            "0.5750718686108307\n",
            "0.5750728707564239\n",
            "0.5750738729010134\n",
            "0.5750748750445993\n",
            "0.5750758771871798\n",
            "0.5750768793287566\n",
            "0.575077881469328\n",
            "0.5750788836088958\n",
            "0.5750798857474599\n",
            "0.5750808878850187\n",
            "0.5750818900215737\n",
            "0.5750828921571252\n",
            "0.5750838942916712\n",
            "0.5750848964252135\n",
            "0.5750858985577523\n",
            "0.5750869006892856\n",
            "0.5750879028198153\n",
            "0.5750889049493413\n",
            "0.5750899070778619\n",
            "0.5750909092053789\n",
            "0.5750919113318922\n",
            "0.5750929134574001\n",
            "0.5750939155819044\n",
            "0.5750949177054032\n",
            "0.5750959198278984\n",
            "0.57509692194939\n",
            "0.5750979240698761\n",
            "0.5750989261893587\n",
            "0.5750999283078375\n",
            "0.575100930425311\n",
            "0.5751019325417808\n",
            "0.5751029346572469\n",
            "0.5751039367717077\n",
            "0.5751049388851648\n",
            "0.5751059409976182\n",
            "0.5751069431090663\n",
            "0.5751079452195107\n",
            "0.5751089473289515\n",
            "0.5751099494373868\n",
            "0.5751109515448185\n",
            "0.5751119536512466\n",
            "0.5751129557566692\n",
            "0.5751139578610882\n",
            "0.5751149599645036\n",
            "0.5751159620669153\n",
            "0.5751169641683216\n",
            "0.5751179662687242\n",
            "0.5751189683681233\n",
            "0.5751199704665169\n",
            "0.5751209725639068\n",
            "0.5751219746602931\n",
            "0.575122976755674\n",
            "0.5751239788500513\n",
            "0.5751249809434249\n",
            "0.5751259830357931\n",
            "0.5751269851271577\n",
            "0.5751279872175186\n",
            "0.5751289893068741\n",
            "0.5751299913952259\n",
            "0.5751309934825741\n",
            "0.5751319955689187\n",
            "0.5751329976542578\n",
            "0.5751339997385934\n",
            "0.5751350018219252\n",
            "0.5751360039042517\n",
            "0.5751370059855745\n",
            "0.5751380080658937\n",
            "0.5751390101452074\n",
            "0.5751400122235175\n",
            "0.575141014300824\n",
            "0.5751420163771268\n",
            "0.5751430184524242\n",
            "0.575144020526718\n",
            "0.5751450226000081\n",
            "0.5751460246722928\n",
            "0.5751470267435739\n",
            "0.5751480288138513\n",
            "0.5751490308831251\n",
            "0.5751500329513934\n",
            "0.5751510350186582\n",
            "0.5751520370849192\n",
            "0.5751530391501749\n",
            "0.5751540412144269\n",
            "0.5751550432776753\n",
            "0.57515604533992\n",
            "0.5751570474011594\n",
            "0.575158049461395\n",
            "0.5751590515206271\n",
            "0.5751600535788555\n",
            "0.5751610556360784\n",
            "0.5751620576922978\n",
            "0.5751630597475135\n",
            "0.5751640618017237\n",
            "0.5751650638549304\n",
            "0.5751660659071334\n",
            "0.5751670679583327\n",
            "0.5751680700085267\n",
            "0.575169072057717\n",
            "0.5751700741059036\n",
            "0.5751710761530866\n",
            "0.5751720781992642\n",
            "0.5751730802444381\n",
            "0.5751740822886084\n",
            "0.5751750843317751\n",
            "0.5751760863739364\n",
            "0.575177088415094\n",
            "0.5751780904552479\n",
            "0.5751790924943982\n",
            "0.5751800945325432\n",
            "0.5751810965696844\n",
            "0.575182098605822\n",
            "0.575183100640956\n",
            "0.5751841026750846\n",
            "0.5751851047082095\n",
            "0.5751861067403308\n",
            "0.5751871087714484\n",
            "0.5751881108015606\n",
            "0.5751891128306692\n",
            "0.5751901148587741\n",
            "0.5751911168858754\n",
            "0.5751921189119731\n",
            "0.5751931209370653\n",
            "0.5751941229611539\n",
            "0.5751951249842389\n",
            "0.5751961270063202\n",
            "0.5751971290273961\n",
            "0.5751981310474683\n",
            "0.5751991330665369\n",
            "0.5752001350846019\n",
            "0.5752011371016614\n",
            "0.5752021391177173\n",
            "0.5752031411327696\n",
            "0.5752041431468182\n",
            "0.5752051451598632\n",
            "0.5752061471719028\n",
            "0.5752071491829387\n",
            "0.575208151192971\n",
            "0.5752091532019996\n",
            "0.5752101552100228\n",
            "0.5752111572170424\n",
            "0.5752121592230584\n",
            "0.5752131612280706\n",
            "0.5752141632320793\n",
            "0.5752151652350825\n",
            "0.5752161672370821\n",
            "0.5752171692380781\n",
            "0.5752181712380704\n",
            "0.5752191732370591\n",
            "0.5752201752350423\n",
            "0.5752211772320219\n",
            "0.5752221792279979\n",
            "0.5752231812229702\n",
            "0.5752241832169389\n",
            "0.5752251852099022\n",
            "0.5752261872018618\n",
            "0.5752271891928178\n",
            "0.5752281911827701\n",
            "0.5752291931717188\n",
            "0.5752301951596621\n",
            "0.5752311971466018\n",
            "0.5752321991325378\n",
            "0.5752332011174701\n",
            "0.5752342031013988\n",
            "0.5752352050843239\n",
            "0.5752362070662436\n",
            "0.5752372090471596\n",
            "0.575238211027072\n",
            "0.5752392130059807\n",
            "0.5752402149838858\n",
            "0.5752412169607855\n",
            "0.5752422189366815\n",
            "0.5752432209115739\n",
            "0.5752442228854626\n",
            "0.5752452248583477\n",
            "0.5752462268302292\n",
            "0.5752472288011052\n",
            "0.5752482307709776\n",
            "0.5752492327398464\n",
            "0.5752502347077115\n",
            "0.575251236674573\n",
            "0.5752522386404308\n",
            "0.5752532406052833\n",
            "0.575254242569132\n",
            "0.5752552445319772\n",
            "0.5752562464938187\n",
            "0.5752572484546565\n",
            "0.5752582504144907\n",
            "0.5752592523733195\n",
            "0.5752602543311447\n",
            "0.5752612562879662\n",
            "0.5752622582437841\n",
            "0.5752632601985983\n",
            "0.5752642621524089\n",
            "0.5752652641052141\n",
            "0.5752662660570156\n",
            "0.5752672680078135\n",
            "0.5752682699576077\n",
            "0.5752692719063983\n",
            "0.5752702738541853\n",
            "0.5752712758009686\n",
            "0.5752722777467465\n",
            "0.5752732796915208\n",
            "0.5752742816352914\n",
            "0.5752752835780583\n",
            "0.5752762855198217\n",
            "0.5752772874605814\n",
            "0.5752782894003374\n",
            "0.5752792913390881\n",
            "0.575280293276835\n",
            "0.5752812952135784\n",
            "0.5752822971493181\n",
            "0.5752832990840542\n",
            "0.5752843010177866\n",
            "0.5752853029505154\n",
            "0.5752863048822405\n",
            "0.5752873068129603\n",
            "0.5752883087426763\n",
            "0.5752893106713888\n",
            "0.5752903125990976\n",
            "0.5752913145258027\n",
            "0.5752923164515042\n",
            "0.5752933183762021\n",
            "0.5752943202998964\n",
            "0.5752953222225852\n",
            "0.5752963241442703\n",
            "0.5752973260649519\n",
            "0.5752983279846298\n",
            "0.575299329903304\n",
            "0.5753003318209746\n",
            "0.5753013337376416\n",
            "0.5753023356533049\n",
            "0.5753033375679646\n",
            "0.5753043394816189\n",
            "0.5753053413942695\n",
            "0.5753063433059165\n",
            "0.5753073452165598\n",
            "0.5753083471261995\n",
            "0.5753093490348355\n",
            "0.575310350942468\n",
            "0.5753113528490967\n",
            "0.5753123547547219\n",
            "0.5753133566593434\n",
            "0.5753143585629594\n",
            "0.5753153604655719\n",
            "0.5753163623671806\n",
            "0.5753173642677858\n",
            "0.5753183661673873\n",
            "0.5753193680659852\n",
            "0.5753203699635794\n",
            "0.57532137186017\n",
            "0.5753223737557569\n",
            "0.5753233756503402\n",
            "0.5753243775439199\n",
            "0.5753253794364941\n",
            "0.5753263813280647\n",
            "0.5753273832186316\n",
            "0.575328385108195\n",
            "0.5753293869967546\n",
            "0.5753303888843107\n",
            "0.575331390770863\n",
            "0.5753323926564118\n",
            "0.5753333945409569\n",
            "0.5753343964244984\n",
            "0.5753353983070362\n",
            "0.5753364001885704\n",
            "0.5753374020691009\n",
            "0.575338403948626\n",
            "0.5753394058271475\n",
            "0.5753404077046653\n",
            "0.5753414095811795\n",
            "0.5753424114566901\n",
            "0.575343413331197\n",
            "0.5753444152047003\n",
            "0.5753454170771999\n",
            "0.5753464189486959\n",
            "0.5753474208191882\n",
            "0.5753484226886769\n",
            "0.575349424557162\n",
            "0.5753504264246434\n",
            "0.5753514282911212\n",
            "0.5753524301565953\n",
            "0.5753534320210658\n",
            "0.5753544338845327\n",
            "0.5753554357469941\n",
            "0.5753564376084519\n",
            "0.575357439468906\n",
            "0.5753584413283566\n",
            "0.5753594431868034\n",
            "0.5753604450442467\n",
            "0.5753614469006862\n",
            "0.5753624487561222\n",
            "0.5753634506105545\n",
            "0.5753644524639832\n",
            "0.5753654543164082\n",
            "0.5753664561678296\n",
            "0.5753674580182473\n",
            "0.5753684598676614\n",
            "0.5753694617160718\n",
            "0.5753704635634787\n",
            "0.5753714654098818\n",
            "0.5753724672552814\n",
            "0.5753734690996772\n",
            "0.5753744709430695\n",
            "0.5753754727854581\n",
            "0.575376474626843\n",
            "0.5753774764672244\n",
            "0.575378478306602\n",
            "0.5753794801449761\n",
            "0.5753804819823465\n",
            "0.5753814838187132\n",
            "0.5753824856540763\n",
            "0.5753834874884358\n",
            "0.5753844893217916\n",
            "0.5753854911541438\n",
            "0.5753864929854924\n",
            "0.5753874948158373\n",
            "0.5753884966451785\n",
            "0.5753894984735144\n",
            "0.5753905003008466\n",
            "0.5753915021271752\n",
            "0.5753925039525001\n",
            "0.5753935057768214\n",
            "0.575394507600139\n",
            "0.575395509422453\n",
            "0.5753965112437633\n",
            "0.57539751306407\n",
            "0.5753985148833731\n",
            "0.5753995167016726\n",
            "0.5754005185189683\n",
            "0.5754015203352605\n",
            "0.575402522150549\n",
            "0.5754035239648339\n",
            "0.5754045257781151\n",
            "0.5754055275903927\n",
            "0.5754065294016666\n",
            "0.5754075312119369\n",
            "0.5754085330212035\n",
            "0.5754095348294683\n",
            "0.5754105366367295\n",
            "0.575411538442987\n",
            "0.5754125402482408\n",
            "0.5754135420524911\n",
            "0.5754145438557376\n",
            "0.5754155456579806\n",
            "0.5754165474592199\n",
            "0.5754175492594555\n",
            "0.5754185510586876\n",
            "0.5754195528569159\n",
            "0.5754205546541407\n",
            "0.5754215564503617\n",
            "0.5754225582455792\n",
            "0.575423560039793\n",
            "0.5754245618330032\n",
            "0.5754255636252097\n",
            "0.5754265654164126\n",
            "0.5754275672066118\n",
            "0.5754285689958074\n",
            "0.5754295707839994\n",
            "0.5754305725711877\n",
            "0.5754315743573724\n",
            "0.5754325761425534\n",
            "0.5754335779267308\n",
            "0.5754345797099045\n",
            "0.5754355814920746\n",
            "0.5754365832732411\n",
            "0.5754375850534039\n",
            "0.5754385868325631\n",
            "0.5754395886107186\n",
            "0.5754405903878705\n",
            "0.5754415921640188\n",
            "0.5754425939391652\n",
            "0.5754435957133079\n",
            "0.575444597486447\n",
            "0.5754455992585825\n",
            "0.5754466010297143\n",
            "0.5754476027998425\n",
            "0.5754486045689671\n",
            "0.575449606337088\n",
            "0.5754506081042052\n",
            "0.5754516098703188\n",
            "0.5754526116354288\n",
            "0.5754536133995352\n",
            "0.5754546151626379\n",
            "0.5754556169247369\n",
            "0.5754566186858323\n",
            "0.5754576204459241\n",
            "0.5754586222050122\n",
            "0.5754596239630985\n",
            "0.5754606257201811\n",
            "0.5754616274762601\n",
            "0.5754626292313354\n",
            "0.5754636309854071\n",
            "0.5754646327384751\n",
            "0.5754656344905396\n",
            "0.5754666362416003\n",
            "0.5754676379916575\n",
            "0.5754686397407109\n",
            "0.5754696414887608\n",
            "0.575470643235807\n",
            "0.5754716449818496\n",
            "0.5754726467268902\n",
            "0.5754736484709273\n",
            "0.5754746502139607\n",
            "0.5754756519559905\n",
            "0.5754766536970166\n",
            "0.5754776554370391\n",
            "0.575478657176058\n",
            "0.5754796589140732\n",
            "0.5754806606510847\n",
            "0.5754816623870926\n",
            "0.5754826641220969\n",
            "0.5754836658560993\n",
            "0.5754846675890981\n",
            "0.5754856693210932\n",
            "0.5754866710520847\n",
            "0.5754876727820726\n",
            "0.5754886745110568\n",
            "0.5754896762390374\n",
            "0.5754906779660143\n",
            "0.5754916796919876\n",
            "0.5754926814169572\n",
            "0.575493683140925\n",
            "0.5754946848638891\n",
            "0.5754956865858496\n",
            "0.5754966883068064\n",
            "0.5754976900267597\n",
            "0.5754986917457092\n",
            "0.5754996934636551\n",
            "0.5755006951805974\n",
            "0.5755016968965361\n",
            "0.5755026986114729\n",
            "0.575503700325406\n",
            "0.5755047020383355\n",
            "0.5755057037502613\n",
            "0.5755067054611835\n",
            "0.5755077071711021\n",
            "0.575508708880017\n",
            "0.5755097105879283\n",
            "0.5755107122948377\n",
            "0.5755117140007435\n",
            "0.5755127157056457\n",
            "0.5755137174095442\n",
            "0.575514719112439\n",
            "0.5755157208143302\n",
            "0.5755167225152178\n",
            "0.5755177242151017\n",
            "0.5755187259139838\n",
            "0.5755197276118622\n",
            "0.575520729308737\n",
            "0.5755217310046081\n",
            "0.5755227326994756\n",
            "0.5755237343933395\n",
            "0.5755247360861997\n",
            "0.575525737778058\n",
            "0.5755267394689128\n",
            "0.5755277411587638\n",
            "0.5755287428476112\n",
            "0.575529744535455\n",
            "0.5755307462222952\n",
            "0.5755317479081317\n",
            "0.5755327495929663\n",
            "0.5755337512767973\n",
            "0.5755347529596246\n",
            "0.5755357546414483\n",
            "0.5755367563222684\n",
            "0.5755377580020848\n",
            "0.5755387596808994\n",
            "0.5755397613587103\n",
            "0.5755407630355176\n",
            "0.5755417647113212\n",
            "0.5755427663861212\n",
            "0.5755437680599176\n",
            "0.5755447697327103\n",
            "0.5755457714045011\n",
            "0.5755467730752883\n",
            "0.5755477747450719\n",
            "0.5755487764138518\n",
            "0.5755497780816281\n",
            "0.5755507797484007\n",
            "0.5755517814141715\n",
            "0.5755527830789386\n",
            "0.5755537847427021\n",
            "0.575554786405462\n",
            "0.5755557880672182\n",
            "0.5755567897279725\n",
            "0.5755577913877232\n",
            "0.5755587930464703\n",
            "0.5755597947042137\n",
            "0.5755607963609535\n",
            "0.5755617980166896\n",
            "0.5755627996714239\n",
            "0.5755638013251545\n",
            "0.5755648029778815\n",
            "0.5755658046296048\n",
            "0.5755668062803245\n",
            "0.5755678079300424\n",
            "0.5755688095787566\n",
            "0.5755698112264671\n",
            "0.575570812873174\n",
            "0.5755718145188773\n",
            "0.5755728161635787\n",
            "0.5755738178072765\n",
            "0.5755748194499706\n",
            "0.575575821091661\n",
            "0.5755768227323479\n",
            "0.5755778243720329\n",
            "0.5755788260107142\n",
            "0.5755798276483919\n",
            "0.5755808292850659\n",
            "0.5755818309207363\n",
            "0.5755828325554049\n",
            "0.5755838341890698\n",
            "0.575584835821731\n",
            "0.5755858374533886\n",
            "0.5755868390840426\n",
            "0.5755878407136947\n",
            "0.5755888423423432\n",
            "0.575589843969988\n",
            "0.5755908455966292\n",
            "0.5755918472222668\n",
            "0.5755928488469024\n",
            "0.5755938504705345\n",
            "0.5755948520931629\n",
            "0.5755958537147876\n",
            "0.5755968553354105\n",
            "0.5755978569550297\n",
            "0.5755988585736453\n",
            "0.5755998601912573\n",
            "0.5756008618078656\n",
            "0.5756018634234721\n",
            "0.5756028650380749\n",
            "0.5756038666516741\n",
            "0.5756048682642696\n",
            "0.5756058698758633\n",
            "0.5756068714864533\n",
            "0.5756078730960397\n",
            "0.5756088747046224\n",
            "0.5756098763122033\n",
            "0.5756108779187805\n",
            "0.5756118795243541\n",
            "0.5756128811289241\n",
            "0.5756138827324921\n",
            "0.5756148843350566\n",
            "0.5756158859366174\n",
            "0.5756168875371745\n",
            "0.5756178891367298\n",
            "0.5756188907352815\n",
            "0.5756198923328295\n",
            "0.5756208939293739\n",
            "0.5756218955249164\n",
            "0.5756228971194552\n",
            "0.5756238987129905\n",
            "0.575624900305522\n",
            "0.5756259018970518\n",
            "0.5756269034875778\n",
            "0.5756279050771003\n",
            "0.5756289066656191\n",
            "0.575629908253136\n",
            "0.5756309098396493\n",
            "0.5756319114251589\n",
            "0.5756329130096649\n",
            "0.575633914593169\n",
            "0.5756349161756695\n",
            "0.5756359177571664\n",
            "0.5756369193376596\n",
            "0.5756379209171509\n",
            "0.5756389224956386\n",
            "0.5756399240731227\n",
            "0.5756409256496049\n",
            "0.5756419272250834\n",
            "0.5756429287995584\n",
            "0.5756439303730296\n",
            "0.575644931945499\n",
            "0.5756459335169648\n",
            "0.5756469350874269\n",
            "0.5756479366568854\n",
            "0.575648938225342\n",
            "0.575649939792795\n",
            "0.5756509413592443\n",
            "0.5756519429246918\n",
            "0.5756529444891356\n",
            "0.5756539460525758\n",
            "0.5756549476150123\n",
            "0.575655949176447\n",
            "0.5756569507368781\n",
            "0.5756579522963055\n",
            "0.575658953854731\n",
            "0.5756599554121529\n",
            "0.5756609569685711\n",
            "0.5756619585239875\n",
            "0.5756629600784002\n",
            "0.5756639616318093\n",
            "0.5756649631842148\n",
            "0.5756659647356184\n",
            "0.5756669662860183\n",
            "0.5756679678354146\n",
            "0.5756689693838091\n",
            "0.5756699709311999\n",
            "0.575670972477587\n",
            "0.5756719740229723\n",
            "0.575672975567354\n",
            "0.575673977110732\n",
            "0.5756749786531081\n",
            "0.5756759801944806\n",
            "0.5756769817348495\n",
            "0.5756779832742147\n",
            "0.5756789848125781\n",
            "0.5756799863499378\n",
            "0.5756809878862938\n",
            "0.575681989421648\n",
            "0.5756829909559986\n",
            "0.5756839924893455\n",
            "0.5756849940216906\n",
            "0.575685995553032\n",
            "0.5756869970833698\n",
            "0.5756879986127057\n",
            "0.575689000141038\n",
            "0.5756900016683666\n",
            "0.5756910031946934\n",
            "0.5756920047200165\n",
            "0.575693006244336\n",
            "0.5756940077676536\n",
            "0.5756950092899675\n",
            "0.5756960108112779\n",
            "0.5756970123315863\n",
            "0.5756980138508911\n",
            "0.5756990153691923\n",
            "0.5757000168864916\n",
            "0.5757010184027873\n",
            "0.5757020199180793\n",
            "0.5757030214323695\n",
            "0.575704022945656\n",
            "0.5757050244579389\n",
            "0.5757060259692199\n",
            "0.5757070274794973\n",
            "0.575708028988771\n",
            "0.5757090304970429\n",
            "0.5757100320043111\n",
            "0.5757110335105757\n",
            "0.5757120350158385\n",
            "0.5757130365200975\n",
            "0.5757140380233547\n",
            "0.5757150395256083\n",
            "0.5757160410268582\n",
            "0.5757170425271063\n",
            "0.5757180440263507\n",
            "0.5757190455245915\n",
            "0.5757200470218304\n",
            "0.5757210485180657\n",
            "0.5757220500132973\n",
            "0.5757230515075271\n",
            "0.5757240530007532\n",
            "0.5757250544929775\n",
            "0.5757260559841981\n",
            "0.5757270574744151\n",
            "0.5757280589636302\n",
            "0.5757290604518417\n",
            "0.5757300619390495\n",
            "0.5757310634252555\n",
            "0.5757320649104578\n",
            "0.5757330663946583\n",
            "0.5757340678778551\n",
            "0.5757350693600483\n",
            "0.5757360708412396\n",
            "0.5757370723214272\n",
            "0.5757380738006113\n",
            "0.5757390752787934\n",
            "0.5757400767559719\n",
            "0.5757410782321486\n",
            "0.5757420797073216\n",
            "0.575743081181491\n",
            "0.5757440826546585\n",
            "0.5757450841268223\n",
            "0.5757460855979843\n",
            "0.5757470870681427\n",
            "0.5757480885372974\n",
            "0.5757490900054503\n",
            "0.5757500914725995\n",
            "0.575751092938745\n",
            "0.5757520944038887\n",
            "0.5757530958680288\n",
            "0.575754097331167\n",
            "0.5757550987933016\n",
            "0.5757561002544325\n",
            "0.5757571017145615\n",
            "0.5757581031736869\n",
            "0.5757591046318105\n",
            "0.5757601060889304\n",
            "0.5757611075450484\n",
            "0.5757621090001628\n",
            "0.5757631104542735\n",
            "0.5757641119073824\n",
            "0.5757651133594877\n",
            "0.575766114810591\n",
            "0.5757671162606908\n",
            "0.5757681177097869\n",
            "0.5757691191578811\n",
            "0.5757701206049717\n",
            "0.5757711220510604\n",
            "0.5757721234961455\n",
            "0.5757731249402287\n",
            "0.5757741263833083\n",
            "0.5757751278253842\n",
            "0.5757761292664583\n",
            "0.5757771307065287\n",
            "0.5757781321455973\n",
            "0.5757791335836622\n",
            "0.5757801350207252\n",
            "0.5757811364567846\n",
            "0.5757821378918404\n",
            "0.5757831393258943\n",
            "0.5757841407589446\n",
            "0.575785142190993\n",
            "0.5757861436220377\n",
            "0.5757871450520806\n",
            "0.5757881464811199\n",
            "0.5757891479091555\n",
            "0.5757901493361892\n",
            "0.5757911507622193\n",
            "0.5757921521872476\n",
            "0.5757931536112721\n",
            "0.5757941550342949\n",
            "0.575795156456314\n",
            "0.5757961578773312\n",
            "0.5757971592973448\n",
            "0.5757981607163547\n",
            "0.5757991621343628\n",
            "0.5758001635513672\n",
            "0.5758011649673698\n",
            "0.5758021663823687\n",
            "0.5758031677963658\n",
            "0.5758041692093592\n",
            "0.5758051706213507\n",
            "0.5758061720323386\n",
            "0.5758071734423247\n",
            "0.5758081748513071\n",
            "0.5758091762592858\n",
            "0.5758101776662627\n",
            "0.575811179072236\n",
            "0.5758121804772074\n",
            "0.5758131818811751\n",
            "0.575814183284141\n",
            "0.5758151846861033\n",
            "0.5758161860870636\n",
            "0.5758171874870204\n",
            "0.5758181888859752\n",
            "0.5758191902839265\n",
            "0.5758201916808758\n",
            "0.5758211930768216\n",
            "0.5758221944717654\n",
            "0.5758231958657056\n",
            "0.575824197258644\n",
            "0.5758251986505787\n",
            "0.5758262000415115\n",
            "0.5758272014314407\n",
            "0.5758282028203663\n",
            "0.57582920420829\n",
            "0.57583020559521\n",
            "0.5758312069811282\n",
            "0.5758322083660428\n",
            "0.5758332097499554\n",
            "0.5758342111328645\n",
            "0.5758352125147717\n",
            "0.5758362138956752\n",
            "0.5758372152755769\n",
            "0.5758382166544749\n",
            "0.575839218032371\n",
            "0.5758402194092636\n",
            "0.5758412207851542\n",
            "0.5758422221600412\n",
            "0.5758432235339264\n",
            "0.5758442249068079\n",
            "0.5758452262786875\n",
            "0.5758462276495635\n",
            "0.5758472290194376\n",
            "0.5758482303883081\n",
            "0.5758492317561767\n",
            "0.5758502331230417\n",
            "0.5758512344889049\n",
            "0.5758522358537643\n",
            "0.5758532372176219\n",
            "0.5758542385804759\n",
            "0.575855239942328\n",
            "0.5758562413031783\n",
            "0.5758572426630248\n",
            "0.5758582440218696\n",
            "0.5758592453797107\n",
            "0.5758602467365499\n",
            "0.5758612480923855\n",
            "0.5758622494472192\n",
            "0.5758632508010493\n",
            "0.5758642521538775\n",
            "0.5758652535057021\n",
            "0.5758662548565248\n",
            "0.5758672562063438\n",
            "0.575868257555161\n",
            "0.5758692589029746\n",
            "0.5758702602497863\n",
            "0.5758712615955943\n",
            "0.5758722629404005\n",
            "0.575873264284203\n",
            "0.5758742656270037\n",
            "0.5758752669688025\n",
            "0.5758762683095977\n",
            "0.575877269649391\n",
            "0.5758782709881807\n",
            "0.5758792723259685\n",
            "0.5758802736627526\n",
            "0.5758812749985349\n",
            "0.5758822763333136\n",
            "0.5758832776670904\n",
            "0.5758842789998635\n",
            "0.5758852803316348\n",
            "0.5758862816624042\n",
            "0.57588728299217\n",
            "0.5758882843209339\n",
            "0.5758892856486941\n",
            "0.5758902869754525\n",
            "0.5758912883012073\n",
            "0.5758922896259602\n",
            "0.5758932909497094\n",
            "0.5758942922724568\n",
            "0.5758952935942023\n",
            "0.5758962949149442\n",
            "0.5758972962346842\n",
            "0.5758982975534206\n",
            "0.5758992988711551\n",
            "0.575900300187886\n",
            "0.575901301503615\n",
            "0.5759023028183403\n",
            "0.5759033041320638\n",
            "0.5759043054447854\n",
            "0.5759053067565034\n",
            "0.5759063080672195\n",
            "0.575907309376932\n",
            "0.5759083106856426\n",
            "0.5759093119933514\n",
            "0.5759103133000565\n",
            "0.5759113146057597\n",
            "0.5759123159104593\n",
            "0.5759133172141571\n",
            "0.5759143185168512\n",
            "0.5759153198185434\n",
            "0.5759163211192337\n",
            "0.5759173224189205\n",
            "0.5759183237176053\n",
            "0.5759193250152865\n",
            "0.5759203263119659\n",
            "0.5759213276076434\n",
            "0.5759223289023172\n",
            "0.5759233301959892\n",
            "0.5759243314886575\n",
            "0.575925332780324\n",
            "0.5759263340709868\n",
            "0.5759273353606478\n",
            "0.5759283366493069\n",
            "0.5759293379369623\n",
            "0.5759303392236159\n",
            "0.5759313405092659\n",
            "0.575932341793914\n",
            "0.5759333430775602\n",
            "0.5759343443602027\n",
            "0.5759353456418435\n",
            "0.5759363469224805\n",
            "0.5759373482021157\n",
            "0.5759383494807491\n",
            "0.5759393507583788\n",
            "0.5759403520350066\n",
            "0.5759413533106326\n",
            "0.5759423545852549\n",
            "0.5759433558588753\n",
            "0.5759443571314922\n",
            "0.5759453584031071\n",
            "0.5759463596737202\n",
            "0.5759473609433297\n",
            "0.5759483622119372\n",
            "0.5759493634795412\n",
            "0.5759503647461433\n",
            "0.5759513660117435\n",
            "0.57595236727634\n",
            "0.5759533685399347\n",
            "0.5759543698025276\n",
            "0.5759553710641168\n",
            "0.5759563723247041\n",
            "0.5759573735842878\n",
            "0.5759583748428696\n",
            "0.5759593761004496\n",
            "0.5759603773570259\n",
            "0.5759613786126003\n",
            "0.5759623798671729\n",
            "0.5759633811207419\n",
            "0.5759643823733089\n",
            "0.5759653836248741\n",
            "0.5759663848754357\n",
            "0.5759673861249954\n",
            "0.5759683873735515\n",
            "0.5759693886211057\n",
            "0.575970389867658\n",
            "0.5759713911132067\n",
            "0.5759723923577535\n",
            "0.5759733936012985\n",
            "0.5759743948438398\n",
            "0.5759753960853793\n",
            "0.5759763973259169\n",
            "0.5759773985654508\n",
            "0.5759783998039829\n",
            "0.5759794010415131\n",
            "0.5759804022780397\n",
            "0.5759814035135644\n",
            "0.5759824047480873\n",
            "0.5759834059816065\n",
            "0.5759844072141238\n",
            "0.5759854084456393\n",
            "0.5759864096761511\n",
            "0.5759874109056611\n",
            "0.5759884121341692\n",
            "0.5759894133616736\n",
            "0.5759904145881762\n",
            "0.575991415813677\n",
            "0.575992417038174\n",
            "0.5759934182616693\n",
            "0.5759944194841626\n",
            "0.5759954207056524\n",
            "0.5759964219261402\n",
            "0.5759974231456262\n",
            "0.5759984243641085\n",
            "0.575999425581589\n",
            "0.5760004267980676\n",
            "0.5760014280135426\n",
            "0.5760024292280157\n",
            "0.5760034304414869\n",
            "0.5760044316539545\n",
            "0.5760054328654203\n",
            "0.5760064340758841\n",
            "0.5760074352853444\n",
            "0.5760084364938027\n",
            "0.5760094377012592\n",
            "0.5760104389077139\n",
            "0.5760114401131649\n",
            "0.576012441317614\n",
            "0.5760134425210612\n",
            "0.5760144437235049\n",
            "0.5760154449249466\n",
            "0.5760164461253865\n",
            "0.5760174473248227\n",
            "0.5760184485232571\n",
            "0.5760194497206896\n",
            "0.5760204509171185\n",
            "0.5760214521125455\n",
            "0.5760224533069707\n",
            "0.5760234545003939\n",
            "0.5760244556928136\n",
            "0.5760254568842313\n",
            "0.5760264580746473\n",
            "0.5760274592640595\n",
            "0.5760284604524699\n",
            "0.5760294616398784\n",
            "0.5760304628262851\n",
            "0.5760314640116881\n",
            "0.5760324651960893\n",
            "0.5760334663794886\n",
            "0.5760344675618843\n",
            "0.576035468743278\n",
            "0.57603646992367\n",
            "0.57603747110306\n",
            "0.5760384722814464\n",
            "0.576039473458831\n",
            "0.5760404746352137\n",
            "0.5760414758105927\n",
            "0.5760424769849699\n",
            "0.5760434781583452\n",
            "0.5760444793307187\n",
            "0.5760454805020885\n",
            "0.5760464816724564\n",
            "0.5760474828418225\n",
            "0.5760484840101867\n",
            "0.5760494851775473\n",
            "0.576050486343906\n",
            "0.5760514875092628\n",
            "0.5760524886736178\n",
            "0.5760534898369691\n",
            "0.5760544909993186\n",
            "0.5760554921606662\n",
            "0.5760564933210102\n",
            "0.5760574944803523\n",
            "0.5760584956386925\n",
            "0.5760594967960309\n",
            "0.5760604979523656\n",
            "0.5760614991076984\n",
            "0.5760625002620294\n",
            "0.5760635014153586\n",
            "0.576064502567684\n",
            "0.5760655037190077\n",
            "0.5760665048693294\n",
            "0.5760675060186493\n",
            "0.5760685071669656\n",
            "0.5760695083142799\n",
            "0.5760705094605925\n",
            "0.5760715106059031\n",
            "0.5760725117502119\n",
            "0.576073512893517\n",
            "0.5760745140358203\n",
            "0.5760755151771217\n",
            "0.5760765163174213\n",
            "0.5760775174567172\n",
            "0.5760785185950112\n",
            "0.5760795197323034\n",
            "0.5760805208685937\n",
            "0.5760815220038804\n",
            "0.5760825231381652\n",
            "0.5760835242714482\n",
            "0.5760845254037292\n",
            "0.5760855265350084\n",
            "0.576086527665284\n",
            "0.5760875287945577\n",
            "0.5760885299228296\n",
            "0.5760895310500995\n",
            "0.5760905321763659\n",
            "0.5760915333016303\n",
            "0.5760925344258929\n",
            "0.5760935355491537\n",
            "0.5760945366714125\n",
            "0.5760955377926678\n",
            "0.5760965389129211\n",
            "0.5760975400321726\n",
            "0.5760985411504222\n",
            "0.5760995422676682\n",
            "0.5761005433839124\n",
            "0.5761015444991546\n",
            "0.576102545613395\n",
            "0.5761035467266336\n",
            "0.5761045478388684\n",
            "0.5761055489501015\n",
            "0.5761065500603326\n",
            "0.5761075511695619\n",
            "0.5761085522777893\n",
            "0.5761095533850131\n",
            "0.576110554491235\n",
            "0.5761115555964551\n",
            "0.5761125567006733\n",
            "0.5761135578038896\n",
            "0.5761145589061023\n",
            "0.5761155600073131\n",
            "0.5761165611075221\n",
            "0.5761175622067292\n",
            "0.5761185633049344\n",
            "0.5761195644021377\n",
            "0.5761205654983375\n",
            "0.5761215665935353\n",
            "0.5761225676877313\n",
            "0.5761235687809254\n",
            "0.5761245698731177\n",
            "0.5761255709643063\n",
            "0.576126572054493\n",
            "0.5761275731436779\n",
            "0.5761285742318609\n",
            "0.5761295753190421\n",
            "0.5761305764052214\n",
            "0.576131577490397\n",
            "0.5761325785745708\n",
            "0.5761335796577427\n",
            "0.5761345807399127\n",
            "0.5761355818210809\n",
            "0.5761365829012473\n",
            "0.5761375839804099\n",
            "0.5761385850585707\n",
            "0.5761395861357297\n",
            "0.5761405872118868\n",
            "0.576141588287042\n",
            "0.5761425893611953\n",
            "0.576143590434345\n",
            "0.5761445915064929\n",
            "0.5761455925776389\n",
            "0.576146593647783\n",
            "0.5761475947169252\n",
            "0.5761485957850656\n",
            "0.5761495968522024\n",
            "0.5761505979183372\n",
            "0.5761515989834702\n",
            "0.5761526000476014\n",
            "0.5761536011107307\n",
            "0.5761546021728581\n",
            "0.5761556032339836\n",
            "0.5761566042941055\n",
            "0.5761576053532256\n",
            "0.5761586064113438\n",
            "0.5761596074684601\n",
            "0.5761606085245745\n",
            "0.5761616095796871\n",
            "0.5761626106337978\n",
            "0.5761636116869049\n",
            "0.5761646127390101\n",
            "0.5761656137901134\n",
            "0.5761666148402149\n",
            "0.5761676158893145\n",
            "0.5761686169374123\n",
            "0.5761696179845082\n",
            "0.5761706190306022\n",
            "0.5761716200756926\n",
            "0.5761726211197811\n",
            "0.5761736221628677\n",
            "0.5761746232049525\n",
            "0.5761756242460354\n",
            "0.5761766252861165\n",
            "0.5761776263251956\n",
            "0.576178627363273\n",
            "0.5761796284003466\n",
            "0.5761806294364185\n",
            "0.5761816304714884\n",
            "0.5761826315055565\n",
            "0.5761836325386227\n",
            "0.576184633570687\n",
            "0.5761856346017495\n",
            "0.5761866356318102\n",
            "0.5761876366608689\n",
            "0.576188637688924\n",
            "0.5761896387159773\n",
            "0.5761906397420287\n",
            "0.5761916407670782\n",
            "0.5761926417911258\n",
            "0.5761936428141716\n",
            "0.5761946438362155\n",
            "0.5761956448572576\n",
            "0.5761966458772978\n",
            "0.5761976468963343\n",
            "0.576198647914369\n",
            "0.5761996489314019\n",
            "0.5762006499474328\n",
            "0.5762016509624619\n",
            "0.5762026519764891\n",
            "0.5762036529895145\n",
            "0.576204654001538\n",
            "0.5762056550125596\n",
            "0.5762066560225794\n",
            "0.5762076570315973\n",
            "0.5762086580396115\n",
            "0.5762096590466239\n",
            "0.5762106600526344\n",
            "0.5762116610576431\n",
            "0.5762126620616499\n",
            "0.5762136630646548\n",
            "0.5762146640666579\n",
            "0.5762156650676591\n",
            "0.5762166660676584\n",
            "0.5762176670666559\n",
            "0.5762186680646515\n",
            "0.5762196690616452\n",
            "0.5762206700576371\n",
            "0.5762216710526253\n",
            "0.5762226720466117\n",
            "0.5762236730395962\n",
            "0.5762246740315788\n",
            "0.5762256750225596\n",
            "0.5762266760125385\n",
            "0.5762276770015156\n",
            "0.5762286779894907\n",
            "0.576229678976464\n",
            "0.5762306799624355\n",
            "0.5762316809474051\n",
            "0.5762326819313728\n",
            "0.5762336829143386\n",
            "0.5762346838963026\n",
            "0.5762356848772647\n",
            "0.576236685857225\n",
            "0.5762376868361816\n",
            "0.5762386878141363\n",
            "0.5762396887910892\n",
            "0.5762406897670402\n",
            "0.5762416907419894\n",
            "0.5762426917159367\n",
            "0.5762436926888821\n",
            "0.5762446936608256\n",
            "0.5762456946317673\n",
            "0.5762466956017072\n",
            "0.5762476965706451\n",
            "0.5762486975385812\n",
            "0.5762496985055154\n",
            "0.5762506994714478\n",
            "0.5762517004363783\n",
            "0.5762527014003069\n",
            "0.5762537023632337\n",
            "0.5762547033251586\n",
            "0.5762557042860816\n",
            "0.5762567052460028\n",
            "0.5762577062049221\n",
            "0.5762587071628396\n",
            "0.5762597081197551\n",
            "0.5762607090756688\n",
            "0.5762617100305807\n",
            "0.5762627109844889\n",
            "0.5762637119373952\n",
            "0.5762647128892997\n",
            "0.5762657138402023\n",
            "0.576266714790103\n",
            "0.5762677157390019\n",
            "0.5762687166868989\n",
            "0.5762697176337941\n",
            "0.5762707185796874\n",
            "0.5762717195245788\n",
            "0.5762727204684683\n",
            "0.576273721411356\n",
            "0.5762747223532418\n",
            "0.5762757232941258\n",
            "0.5762767242340079\n",
            "0.5762777251728881\n",
            "0.5762787261107665\n",
            "0.576279727047643\n",
            "0.5762807279835176\n",
            "0.5762817289183904\n",
            "0.5762827298522613\n",
            "0.5762837307851303\n",
            "0.5762847317169975\n",
            "0.5762857326478628\n",
            "0.5762867335777262\n",
            "0.5762877345065878\n",
            "0.5762887354344475\n",
            "0.5762897363613053\n",
            "0.5762907372871613\n",
            "0.5762917382120154\n",
            "0.5762927391358676\n",
            "0.576293740058718\n",
            "0.5762947409805665\n",
            "0.5762957419014132\n",
            "0.576296742821258\n",
            "0.5762977437401009\n",
            "0.576298744657942\n",
            "0.5762997455747811\n",
            "0.5763007464906185\n",
            "0.5763017474054539\n",
            "0.5763027483192875\n",
            "0.5763037492321192\n",
            "0.5763047501439491\n",
            "0.5763057510547771\n",
            "0.576306751964605\n",
            "0.5763077528734311\n",
            "0.5763087537812552\n",
            "0.5763097546880775\n",
            "0.576310755593898\n",
            "0.5763117564987166\n",
            "0.5763127574025333\n",
            "0.5763137583053481\n",
            "0.5763147592071611\n",
            "0.5763157601079723\n",
            "0.5763167610077815\n",
            "0.5763177619065889\n",
            "0.5763187628043944\n",
            "0.5763197637011981\n",
            "0.5763207645969999\n",
            "0.5763217654917998\n",
            "0.5763227663855979\n",
            "0.5763237672783941\n",
            "0.5763247681701884\n",
            "0.5763257690609809\n",
            "0.5763267699507715\n",
            "0.5763277708395602\n",
            "0.5763287717273471\n",
            "0.5763297726141321\n",
            "0.5763307734999152\n",
            "0.5763317743846965\n",
            "0.5763327752684777\n",
            "0.576333776151257\n",
            "0.5763347770330345\n",
            "0.5763357779138101\n",
            "0.5763367787935838\n",
            "0.5763377796723557\n",
            "0.5763387805501257\n",
            "0.5763397814268938\n",
            "0.5763407823026601\n",
            "0.5763417831774245\n",
            "0.576342784051187\n",
            "0.5763437849239477\n",
            "0.5763447857957065\n",
            "0.5763457866664634\n",
            "0.5763467875362185\n",
            "0.5763477884049717\n",
            "0.5763487892727248\n",
            "0.5763497901394761\n",
            "0.5763507910052255\n",
            "0.576351791869973\n",
            "0.5763527927337186\n",
            "0.5763537935964624\n",
            "0.5763547944582044\n",
            "0.5763557953189444\n",
            "0.5763567961786826\n",
            "0.576357797037419\n",
            "0.5763587978951534\n",
            "0.576359798751886\n",
            "0.5763607996076185\n",
            "0.5763618004623492\n",
            "0.576362801316078\n",
            "0.5763638021688049\n",
            "0.57636480302053\n",
            "0.5763658038712531\n",
            "0.5763668047209745\n",
            "0.5763678055696939\n",
            "0.5763688064174115\n",
            "0.5763698072641272\n",
            "0.5763708081098411\n",
            "0.5763718089545549\n",
            "0.5763728097982668\n",
            "0.5763738106409768\n",
            "0.576374811482685\n",
            "0.5763758123233913\n",
            "0.5763768131630957\n",
            "0.5763778140017983\n",
            "0.576378814839499\n",
            "0.5763798156761979\n",
            "0.5763808165118949\n",
            "0.5763818173465918\n",
            "0.5763828181802868\n",
            "0.57638381901298\n",
            "0.5763848198446713\n",
            "0.5763858206753607\n",
            "0.5763868215050483\n",
            "0.576387822333734\n",
            "0.5763888231614178\n",
            "0.5763898239880998\n",
            "0.5763908248137817\n",
            "0.5763918256384617\n",
            "0.5763928264621399\n",
            "0.5763938272848161\n",
            "0.5763948281064906\n",
            "0.5763958289271631\n",
            "0.5763968297468338\n",
            "0.5763978305655026\n",
            "0.5763988313831714\n",
            "0.5763998321998383\n",
            "0.5764008330155033\n",
            "0.5764018338301664\n",
            "0.5764028346438277\n",
            "0.5764038354564871\n",
            "0.5764048362681446\n",
            "0.5764058370788021\n",
            "0.5764068378884577\n",
            "0.5764078386971114\n",
            "0.5764088395047633\n",
            "0.5764098403114133\n",
            "0.5764108411170614\n",
            "0.5764118419217077\n",
            "0.5764128427253539\n",
            "0.5764138435279982\n",
            "0.5764148443296406\n",
            "0.5764158451302812\n",
            "0.5764168459299199\n",
            "0.5764178467285568\n",
            "0.5764188475261918\n",
            "0.5764198483228267\n",
            "0.5764208491184597\n",
            "0.5764218499130909\n",
            "0.5764228507067202\n",
            "0.5764238514993476\n",
            "0.5764248522909732\n",
            "0.5764258530815969\n",
            "0.5764268538712205\n",
            "0.5764278546598423\n",
            "0.5764288554474621\n",
            "0.5764298562340802\n",
            "0.5764308570196963\n",
            "0.5764318578043106\n",
            "0.5764328585879248\n",
            "0.5764338593705371\n",
            "0.5764348601521476\n",
            "0.5764358609327562\n",
            "0.576436861712363\n",
            "0.5764378624909678\n",
            "0.5764388632685726\n",
            "0.5764398640451756\n",
            "0.5764408648207766\n",
            "0.5764418655953758\n",
            "0.5764428663689731\n",
            "0.5764438671415704\n",
            "0.5764448679131657\n",
            "0.5764458686837592\n",
            "0.5764468694533509\n",
            "0.5764478702219407\n",
            "0.5764488709895286\n",
            "0.5764498717561164\n",
            "0.5764508725217024\n",
            "0.5764518732862864\n",
            "0.5764528740498687\n",
            "0.576453874812449\n",
            "0.5764548755740293\n",
            "0.5764558763346077\n",
            "0.5764568770941843\n",
            "0.5764578778527589\n",
            "0.5764588786103317\n",
            "0.5764598793669045\n",
            "0.5764608801224753\n",
            "0.5764618808770443\n",
            "0.5764628816306114\n",
            "0.5764638823831767\n",
            "0.5764648831347419\n",
            "0.5764658838853052\n",
            "0.5764668846348666\n",
            "0.5764678853834262\n",
            "0.5764688861309839\n",
            "0.5764698868775415\n",
            "0.5764708876230973\n",
            "0.5764718883676512\n",
            "0.5764728891112032\n",
            "0.5764738898537534\n",
            "0.5764748905953034\n",
            "0.5764758913358516\n",
            "0.576476892075398\n",
            "0.5764778928139425\n",
            "0.5764788935514868\n",
            "0.5764798942880294\n",
            "0.57648089502357\n",
            "0.5764818957581088\n",
            "0.5764828964916457\n",
            "0.5764838972241826\n",
            "0.5764848979557176\n",
            "0.5764858986862507\n",
            "0.5764868994157819\n",
            "0.5764879001443131\n",
            "0.5764889008718423\n",
            "0.5764899015983698\n",
            "0.5764909023238953\n",
            "0.576491903048419\n",
            "0.5764929037719426\n",
            "0.5764939044944644\n",
            "0.5764949052159842\n",
            "0.5764959059365022\n",
            "0.5764969066560202\n",
            "0.5764979073745362\n",
            "0.5764989080920504\n",
            "0.5764999088085627\n",
            "0.576500909524075\n",
            "0.5765019102385853\n",
            "0.5765029109520938\n",
            "0.5765039116646005\n",
            "0.576504912376107\n",
            "0.5765059130866117\n",
            "0.5765069137961145\n",
            "0.5765079145046155\n",
            "0.5765089152121163\n",
            "0.5765099159186153\n",
            "0.5765109166241125\n",
            "0.5765119173286077\n",
            "0.5765129180321029\n",
            "0.5765139187345962\n",
            "0.5765149194360877\n",
            "0.5765159201365773\n",
            "0.5765169208360668\n",
            "0.5765179215345544\n",
            "0.5765189222320402\n",
            "0.576519922928524\n",
            "0.5765209236240079\n",
            "0.5765219243184898\n",
            "0.5765229250119699\n",
            "0.5765239257044499\n",
            "0.576524926395928\n",
            "0.5765259270864043\n",
            "0.5765269277758787\n",
            "0.576527928464353\n",
            "0.5765289291518254\n",
            "0.576529929838296\n",
            "0.5765309305237647\n",
            "0.5765319312082333\n",
            "0.5765329318917001\n",
            "0.576533932574165\n",
            "0.5765349332556298\n",
            "0.5765359339360927\n",
            "0.5765369346155538\n",
            "0.576537935294013\n",
            "0.5765389359714721\n",
            "0.5765399366479294\n",
            "0.5765409373233847\n",
            "0.57654193799784\n",
            "0.5765429386712935\n",
            "0.576543939343745\n",
            "0.5765449400151947\n",
            "0.5765459406856444\n",
            "0.5765469413550921\n",
            "0.576547942023538\n",
            "0.5765489426909838\n",
            "0.5765499433574277\n",
            "0.5765509440228698\n",
            "0.5765519446873117\n",
            "0.5765529453507519\n",
            "0.5765539460131901\n",
            "0.5765549466746265\n",
            "0.5765559473350628\n",
            "0.5765569479944972\n",
            "0.5765579486529298\n",
            "0.5765589493103622\n",
            "0.5765599499667928\n",
            "0.5765609506222216\n",
            "0.5765619512766502\n",
            "0.576562951930077\n",
            "0.5765639525825019\n",
            "0.5765649532339268\n",
            "0.5765659538843497\n",
            "0.5765669545337708\n",
            "0.5765679551821918\n",
            "0.576568955829611\n",
            "0.5765699564760283\n",
            "0.5765709571214437\n",
            "0.576571957765859\n",
            "0.5765729584092725\n",
            "0.5765739590516841\n",
            "0.5765749596930956\n",
            "0.5765759603335052\n",
            "0.576576960972913\n",
            "0.5765779616113207\n",
            "0.5765789622487265\n",
            "0.5765799628851305\n",
            "0.5765809635205343\n",
            "0.5765819641549363\n",
            "0.5765829647883365\n",
            "0.5765839654207365\n",
            "0.5765849660521347\n",
            "0.576585966682531\n",
            "0.5765869673119273\n",
            "0.5765879679403216\n",
            "0.5765889685677141\n",
            "0.5765899691941065\n",
            "0.5765909698194971\n",
            "0.5765919704438875\n",
            "0.5765929710672761\n",
            "0.5765939716896629\n",
            "0.5765949723110495\n",
            "0.5765959729314343\n",
            "0.5765969735508172\n",
            "0.5765979741692\n",
            "0.576598974786581\n",
            "0.57659997540296\n",
            "0.576600976018339\n",
            "0.5766019766327162\n",
            "0.5766029772460914\n",
            "0.5766039778584666\n",
            "0.5766049784698399\n",
            "0.5766059790802114\n",
            "0.5766069796895827\n",
            "0.5766079802979522\n",
            "0.5766089809053216\n",
            "0.5766099815116892\n",
            "0.5766109821170549\n",
            "0.5766119827214204\n",
            "0.5766129833247842\n",
            "0.576613983927146\n",
            "0.5766149845285078\n",
            "0.5766159851288677\n",
            "0.5766169857282275\n",
            "0.5766179863265855\n",
            "0.5766189869239415\n",
            "0.5766199875202975\n",
            "0.5766209881156517\n",
            "0.5766219887100039\n",
            "0.5766229893033561\n",
            "0.5766239898957064\n",
            "0.5766249904870566\n",
            "0.576625991077405\n",
            "0.5766269916667515\n",
            "0.5766279922550979\n",
            "0.5766289928424424\n",
            "0.5766299934287868\n",
            "0.5766309940141294\n",
            "0.5766319945984701\n",
            "0.5766329951818108\n",
            "0.5766339957641495\n",
            "0.5766349963454864\n",
            "0.5766359969258232\n",
            "0.5766369975051582\n",
            "0.576637998083493\n",
            "0.576638998660826\n",
            "0.5766399992371571\n",
            "0.5766409998124882\n",
            "0.5766420003868173\n",
            "0.5766430009601464\n",
            "0.5766440015324736\n",
            "0.576645002103799\n",
            "0.5766460026741242\n",
            "0.5766470032434476\n",
            "0.576648003811771\n",
            "0.5766490043790924\n",
            "0.5766500049454137\n",
            "0.5766510055107332\n",
            "0.5766520060750508\n",
            "0.5766530066383684\n",
            "0.576654007200684\n",
            "0.5766550077619996\n",
            "0.5766560083223133\n",
            "0.5766570088816252\n",
            "0.576658009439937\n",
            "0.5766590099972468\n",
            "0.5766600105535566\n",
            "0.5766610111088646\n",
            "0.5766620116631724\n",
            "0.5766630122164784\n",
            "0.5766640127687825\n",
            "0.5766650133200866\n",
            "0.5766660138703887\n",
            "0.5766670144196908\n",
            "0.576668014967991\n",
            "0.5766690155152912\n",
            "0.5766700160615894\n",
            "0.5766710166068858\n",
            "0.5766720171511821\n",
            "0.5766730176944765\n",
            "0.5766740182367709\n",
            "0.5766750187780634\n",
            "0.5766760193183558\n",
            "0.5766770198576463\n",
            "0.5766780203959367\n",
            "0.5766790209332253\n",
            "0.576680021469512\n",
            "0.5766810220047986\n",
            "0.5766820225390834\n",
            "0.5766830230723681\n",
            "0.5766840236046509\n",
            "0.5766850241359336\n",
            "0.5766860246662144\n",
            "0.5766870251954952\n",
            "0.5766880257237741\n",
            "0.5766890262510511\n",
            "0.5766900267773281\n",
            "0.5766910273026031\n",
            "0.5766920278268781\n",
            "0.5766930283501512\n",
            "0.5766940288724243\n",
            "0.5766950293936954\n",
            "0.5766960299139665\n",
            "0.5766970304332357\n",
            "0.5766980309515048\n",
            "0.5766990314687721\n",
            "0.5767000319850393\n",
            "0.5767010325003046\n",
            "0.5767020330145698\n",
            "0.5767030335278331\n",
            "0.5767040340400946\n",
            "0.576705034551356\n",
            "0.5767060350616156\n",
            "0.576707035570875\n",
            "0.5767080360791326\n",
            "0.5767090365863901\n",
            "0.5767100370926457\n",
            "0.5767110375979012\n",
            "0.5767120381021549\n",
            "0.5767130386054085\n",
            "0.5767140391076602\n",
            "0.5767150396089118\n",
            "0.5767160401091616\n",
            "0.5767170406084112\n",
            "0.576718041106659\n",
            "0.5767190416039067\n",
            "0.5767200421001526\n",
            "0.5767210425953984\n",
            "0.5767220430896423\n",
            "0.5767230435828861\n",
            "0.576724044075128\n",
            "0.5767250445663699\n",
            "0.5767260450566098\n",
            "0.5767270455458497\n",
            "0.5767280460340878\n",
            "0.5767290465213257\n",
            "0.5767300470075618\n",
            "0.5767310474927978\n",
            "0.5767320479770319\n",
            "0.576733048460266\n",
            "0.5767340489424981\n",
            "0.5767350494237302\n",
            "0.5767360499039604\n",
            "0.5767370503831906\n",
            "0.5767380508614188\n",
            "0.576739051338647\n",
            "0.5767400518148733\n",
            "0.5767410522900995\n",
            "0.5767420527643239\n",
            "0.5767430532375482\n",
            "0.5767440537097706\n",
            "0.5767450541809929\n",
            "0.5767460546512133\n",
            "0.5767470551204337\n",
            "0.5767480555886522\n",
            "0.5767490560558706\n",
            "0.5767500565220871\n",
            "0.5767510569873036\n",
            "0.5767520574515181\n",
            "0.5767530579147326\n",
            "0.576754058376947\n",
            "0.5767550588381596\n",
            "0.576756059298372\n",
            "0.5767570597575826\n",
            "0.5767580602157931\n",
            "0.5767590606730018\n",
            "0.5767600611292103\n",
            "0.576761061584417\n",
            "0.5767620620386236\n",
            "0.5767630624918283\n",
            "0.5767640629440329\n",
            "0.5767650633952357\n",
            "0.5767660638454384\n",
            "0.5767670642946392\n",
            "0.5767680647428399\n",
            "0.5767690651900406\n",
            "0.5767700656362393\n",
            "0.576771066081438\n",
            "0.5767720665256348\n",
            "0.5767730669688316\n",
            "0.5767740674110264\n",
            "0.5767750678522212\n",
            "0.5767760682924141\n",
            "0.576777068731607\n",
            "0.5767780691697997\n",
            "0.5767790696069905\n",
            "0.5767800700431813\n",
            "0.5767810704783702\n",
            "0.5767820709125591\n",
            "0.576783071345746\n",
            "0.5767840717779329\n",
            "0.5767850722091179\n",
            "0.5767860726393028\n",
            "0.5767870730684876\n",
            "0.5767880734966706\n",
            "0.5767890739238535\n",
            "0.5767900743500345\n",
            "0.5767910747752154\n",
            "0.5767920751993945\n",
            "0.5767930756225734\n",
            "0.5767940760447523\n",
            "0.5767950764659293\n",
            "0.5767960768861062\n",
            "0.5767970773052813\n",
            "0.5767980777234563\n",
            "0.5767990781406294\n",
            "0.5768000785568024\n",
            "0.5768010789719753\n",
            "0.5768020793861464\n",
            "0.5768030797993173\n",
            "0.5768040802114864\n",
            "0.5768050806226555\n",
            "0.5768060810328244\n",
            "0.5768070814419914\n",
            "0.5768080818501584\n",
            "0.5768090822573235\n",
            "0.5768100826634885\n",
            "0.5768110830686535\n",
            "0.5768120834728165\n",
            "0.5768130838759795\n",
            "0.5768140842781406\n",
            "0.5768150846793016\n",
            "0.5768160850794626\n",
            "0.5768170854786216\n",
            "0.5768180858767806\n",
            "0.5768190862739377\n",
            "0.5768200866700948\n",
            "0.5768210870652517\n",
            "0.5768220874594068\n",
            "0.5768230878525618\n",
            "0.5768240882447149\n",
            "0.5768250886358679\n",
            "0.5768260890260208\n",
            "0.5768270894151719\n",
            "0.5768280898033229\n",
            "0.576829090190472\n",
            "0.576830090576621\n",
            "0.57683109096177\n",
            "0.5768320913459171\n",
            "0.576833091729064\n",
            "0.5768340921112092\n",
            "0.5768350924923542\n",
            "0.5768360928724992\n",
            "0.5768370932516422\n",
            "0.5768380936297852\n",
            "0.5768390940069281\n",
            "0.5768400943830692\n",
            "0.5768410947582101\n",
            "0.5768420951323492\n",
            "0.5768430955054882\n",
            "0.5768440958776271\n",
            "0.5768450962487641\n",
            "0.5768460966189011\n",
            "0.5768470969880379\n",
            "0.5768480973561729\n",
            "0.5768490977233078\n",
            "0.5768500980894427\n",
            "0.5768510984545756\n",
            "0.5768520988187085\n",
            "0.5768530991818395\n",
            "0.5768540995439704\n",
            "0.5768550999051012\n",
            "0.5768561002652302\n",
            "0.576857100624359\n",
            "0.5768581009824878\n",
            "0.5768591013396147\n",
            "0.5768601016957415\n",
            "0.5768611020508683\n",
            "0.5768621024049931\n",
            "0.5768631027581179\n",
            "0.5768641031102426\n",
            "0.5768651034613654\n",
            "0.5768661038114882\n",
            "0.5768671041606108\n",
            "0.5768681045087316\n",
            "0.5768691048558523\n",
            "0.5768701052019729\n",
            "0.5768711055470916\n",
            "0.5768721058912103\n",
            "0.5768731062343289\n",
            "0.5768741065764456\n",
            "0.5768751069175622\n",
            "0.5768761072576787\n",
            "0.5768771075967933\n",
            "0.5768781079349079\n",
            "0.5768791082720224\n",
            "0.576880108608135\n",
            "0.5768811089432475\n",
            "0.57688210927736\n",
            "0.5768831096104705\n",
            "0.576884109942581\n",
            "0.5768851102736914\n",
            "0.5768861106037999\n",
            "0.5768871109329083\n",
            "0.5768881112610167\n",
            "0.5768891115881232\n",
            "0.5768901119142296\n",
            "0.5768911122393359\n",
            "0.5768921125634403\n",
            "0.5768931128865447\n",
            "0.5768941132086489\n",
            "0.5768951135297513\n",
            "0.5768961138498536\n",
            "0.5768971141689558\n",
            "0.5768981144870562\n",
            "0.5768991148041565\n",
            "0.5769001151202566\n",
            "0.5769011154353567\n",
            "0.5769021157494549\n",
            "0.5769031160625531\n",
            "0.5769041163746511\n",
            "0.5769051166857473\n",
            "0.5769061169958434\n",
            "0.5769071173049394\n",
            "0.5769081176130335\n",
            "0.5769091179201276\n",
            "0.5769101182262215\n",
            "0.5769111185313154\n",
            "0.5769121188354074\n",
            "0.5769131191384993\n",
            "0.5769141194405911\n",
            "0.5769151197416811\n",
            "0.576916120041771\n",
            "0.5769171203408607\n",
            "0.5769181206389504\n",
            "0.5769191209360383\n",
            "0.576920121232126\n",
            "0.5769211215272136\n",
            "0.5769221218212994\n",
            "0.5769231221143851\n",
            "0.5769241224064707\n",
            "0.5769251226975562\n",
            "0.5769261229876399\n",
            "0.5769271232767235\n",
            "0.5769281235648069\n",
            "0.5769291238518885\n",
            "0.5769301241379701\n",
            "0.5769311244230515\n",
            "0.5769321247071328\n",
            "0.5769331249902123\n",
            "0.5769341252722917\n",
            "0.576935125553371\n",
            "0.5769361258334502\n",
            "0.5769371261125276\n",
            "0.5769381263906048\n",
            "0.576939126667682\n",
            "0.5769401269437591\n",
            "0.5769411272188343\n",
            "0.5769421274929094\n",
            "0.5769431277659844\n",
            "0.5769441280380576\n",
            "0.5769451283091307\n",
            "0.5769461285792037\n",
            "0.5769471288482766\n",
            "0.5769481291163476\n",
            "0.5769491293834186\n",
            "0.5769501296494894\n",
            "0.5769511299145602\n",
            "0.5769521301786291\n",
            "0.5769531304416979\n",
            "0.5769541307037667\n",
            "0.5769551309648353\n",
            "0.5769561312249021\n",
            "0.5769571314839688\n",
            "0.5769581317420354\n",
            "0.5769591319991019\n",
            "0.5769601322551683\n",
            "0.5769611325102328\n",
            "0.5769621327642973\n",
            "0.5769631330173617\n",
            "0.576964133269426\n",
            "0.5769651335204884\n",
            "0.5769661337705507\n",
            "0.576967134019613\n",
            "0.5769681342676751\n",
            "0.5769691345147354\n",
            "0.5769701347607956\n",
            "0.5769711350058557\n",
            "0.5769721352499158\n",
            "0.5769731354929757\n",
            "0.5769741357350338\n",
            "0.5769751359760917\n",
            "0.5769761362161496\n",
            "0.5769771364552074\n",
            "0.5769781366932634\n",
            "0.5769791369303192\n",
            "0.576980137166375\n",
            "0.5769811374014306\n",
            "0.5769821376354862\n",
            "0.5769831378685399\n",
            "0.5769841381005936\n",
            "0.5769851383316471\n",
            "0.5769861385617006\n",
            "0.5769871387907521\n",
            "0.5769881390188036\n",
            "0.576989139245855\n",
            "0.5769901394719064\n",
            "0.5769911396969576\n",
            "0.576992139921007\n",
            "0.5769931401440562\n",
            "0.5769941403661054\n",
            "0.5769951405871545\n",
            "0.5769961408072035\n",
            "0.5769971410262507\n",
            "0.5769981412442977\n",
            "0.5769991414613447\n",
            "0.5770001416773916\n",
            "0.5770011418924383\n",
            "0.5770021421064833\n",
            "0.5770031423195281\n",
            "0.5770041425315728\n",
            "0.5770051427426175\n",
            "0.5770061429526621\n",
            "0.5770071431617065\n",
            "0.5770081433697491\n",
            "0.5770091435767917\n",
            "0.5770101437828341\n",
            "0.5770111439878765\n",
            "0.5770121441919187\n",
            "0.5770131443949591\n",
            "0.5770141445969994\n",
            "0.5770151447980396\n",
            "0.5770161449980797\n",
            "0.5770171451971198\n",
            "0.5770181453951597\n",
            "0.5770191455921978\n",
            "0.5770201457882358\n",
            "0.5770211459832737\n",
            "0.5770221461773115\n",
            "0.5770231463703492\n",
            "0.5770241465623869\n",
            "0.5770251467534226\n",
            "0.5770261469434583\n",
            "0.5770271471324939\n",
            "0.5770281473205294\n",
            "0.5770291475075648\n",
            "0.5770301476936002\n",
            "0.5770311478786336\n",
            "0.577032148062667\n",
            "0.5770331482457003\n",
            "0.5770341484277335\n",
            "0.5770351486087666\n",
            "0.5770361487887996\n",
            "0.5770371489678325\n",
            "0.5770381491458636\n",
            "0.5770391493228946\n",
            "0.5770401494989255\n",
            "0.5770411496739563\n",
            "0.577042149847987\n",
            "0.5770431500210176\n",
            "0.5770441501930463\n",
            "0.577045150364075\n",
            "0.5770461505341036\n",
            "0.5770471507031321\n",
            "0.5770481508711605\n",
            "0.5770491510381888\n",
            "0.577050151204217\n",
            "0.5770511513692433\n",
            "0.5770521515332696\n",
            "0.5770531516962958\n",
            "0.5770541518583219\n",
            "0.5770551520193479\n",
            "0.5770561521793738\n",
            "0.5770571523383996\n",
            "0.5770581524964253\n",
            "0.5770591526534492\n",
            "0.577060152809473\n",
            "0.5770611529644967\n",
            "0.5770621531185203\n",
            "0.5770631532715438\n",
            "0.5770641534235672\n",
            "0.5770651535745905\n",
            "0.5770661537246138\n",
            "0.5770671538736352\n",
            "0.5770681540216565\n",
            "0.5770691541686777\n",
            "0.5770701543146988\n",
            "0.5770711544597198\n",
            "0.5770721546037407\n",
            "0.5770731547467616\n",
            "0.5770741548887823\n",
            "0.577075155029803\n",
            "0.5770761551698218\n",
            "0.5770771553088405\n",
            "0.5770781554468591\n",
            "0.5770791555838777\n",
            "0.5770801557198961\n",
            "0.5770811558549145\n",
            "0.5770821559889328\n",
            "0.5770831561219509\n",
            "0.577084156253969\n",
            "0.577085156384987\n",
            "0.5770861565150032\n",
            "0.5770871566440192\n",
            "0.5770881567720352\n",
            "0.577089156899051\n",
            "0.5770901570250668\n",
            "0.5770911571500825\n",
            "0.5770921572740981\n",
            "0.5770931573971136\n",
            "0.5770941575191291\n",
            "0.5770951576401444\n",
            "0.5770961577601597\n",
            "0.577097157879173\n",
            "0.5770981579971863\n",
            "0.5770991581141995\n",
            "0.5771001582302127\n",
            "0.5771011583452257\n",
            "0.5771021584592386\n",
            "0.5771031585722515\n",
            "0.5771041586842642\n",
            "0.5771051587952769\n",
            "0.5771061589052895\n",
            "0.577107159014302\n",
            "0.5771081591223144\n",
            "0.5771091592293267\n",
            "0.5771101593353372\n",
            "0.5771111594403475\n",
            "0.5771121595443578\n",
            "0.577113159647368\n",
            "0.5771141597493781\n",
            "0.5771151598503881\n",
            "0.577116159950398\n",
            "0.5771171600494078\n",
            "0.5771181601474176\n",
            "0.5771191602444272\n",
            "0.5771201603404368\n",
            "0.5771211604354463\n",
            "0.5771221605294556\n",
            "0.5771231606224649\n",
            "0.5771241607144741\n",
            "0.5771251608054833\n",
            "0.5771261608954905\n",
            "0.5771271609844977\n",
            "0.5771281610725048\n",
            "0.5771291611595117\n",
            "0.5771301612455186\n",
            "0.5771311613305254\n",
            "0.5771321614145322\n",
            "0.5771331614975388\n",
            "0.5771341615795453\n",
            "0.5771351616605518\n",
            "0.5771361617405582\n",
            "0.5771371618195644\n",
            "0.5771381618975706\n",
            "0.5771391619745767\n",
            "0.5771401620505827\n",
            "0.5771411621255886\n",
            "0.5771421621995945\n",
            "0.5771431622726002\n",
            "0.5771441623446059\n",
            "0.5771451624156114\n",
            "0.5771461624856169\n",
            "0.5771471625546223\n",
            "0.5771481626226276\n",
            "0.5771491626896328\n",
            "0.5771501627556379\n",
            "0.5771511628206429\n",
            "0.5771521628846479\n",
            "0.5771531629476527\n",
            "0.5771541630096557\n",
            "0.5771551630706586\n",
            "0.5771561631306614\n",
            "0.5771571631896641\n",
            "0.5771581632476668\n",
            "0.5771591633046693\n",
            "0.5771601633606718\n",
            "0.5771611634156741\n",
            "0.5771621634696764\n",
            "0.5771631635226786\n",
            "0.5771641635746807\n",
            "0.5771651636256827\n",
            "0.5771661636756846\n",
            "0.5771671637246865\n",
            "0.5771681637726882\n",
            "0.5771691638196899\n",
            "0.5771701638656914\n",
            "0.5771711639106929\n",
            "0.5771721639546943\n",
            "0.5771731639976956\n",
            "0.5771741640396968\n",
            "0.5771751640806979\n",
            "0.5771761641206989\n",
            "0.5771771641596999\n",
            "0.5771781641977007\n",
            "0.5771791642347015\n",
            "0.5771801642707022\n",
            "0.5771811643057028\n",
            "0.5771821643397033\n",
            "0.5771831643727037\n",
            "0.577184164404704\n",
            "0.5771851644357042\n",
            "0.5771861644657044\n",
            "0.5771871644947044\n",
            "0.5771881645227044\n",
            "0.5771891645497043\n",
            "0.5771901645757058\n",
            "0.5771911646007073\n",
            "0.5771921646247087\n",
            "0.57719316464771\n",
            "0.5771941646697112\n",
            "0.5771951646907123\n",
            "0.5771961647107133\n",
            "0.5771971647297143\n",
            "0.5771981647477151\n",
            "0.5771991647647159\n",
            "0.5772001647807166\n",
            "0.5772011647957171\n",
            "0.5772021648097176\n",
            "0.577203164822718\n",
            "0.5772041648347184\n",
            "0.5772051648457186\n",
            "0.5772061648557187\n",
            "0.5772071648647188\n",
            "0.5772081648727188\n",
            "0.5772091648797186\n",
            "0.5772101648857184\n",
            "0.5772111648907181\n",
            "0.5772121648947177\n",
            "0.5772131648977172\n",
            "0.5772141648997167\n",
            "0.577215164900716\n",
            "0.5772161649007153\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.5772161649007153"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 504
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "A6ocLfNyWTdg"
      },
      "source": [
        "In order to get five digits of precision on this limit, $n$ has to be as large as 999,993. At n=999999, gamma(999999)=0.5772161649007153, and does not change anymore. Therefore, the limit $\\lim_{n \\rightarrow \\infty} \\gamma(n)$ exists.\n",
        "\n",
        "\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "aojvLt0YuXds"
      },
      "source": [
        "## Handling errors by raising exceptions.\n",
        "\n",
        "In the previous batch of exercises, we tried to modify functions to be a bit more intelligent -- identifying when numbers were \"too big\" for example.  There's a professional way to handle these situations, by raising *exceptions*.  Here is the [official documentation on errors and exceptions](https://docs.python.org/3/tutorial/errors.html).  We will focus on raising exceptions to catch \"bad inputs\" to functions.  Let's revisit our `is_even` function."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8-pN2piIuXds"
      },
      "source": [
        "def is_even(n):\n",
        "    return (n%2 == 0)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "9N-eMKduuXds",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "d676baa0-6598-4b2b-e27c-bf2de1e392fe"
      },
      "source": [
        "is_even(3.14)  # What will this do?"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "False"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "rmVWWIM9uXds",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "50485af6-4452-4921-e503-73a9138560ed"
      },
      "source": [
        "3.14%2  # Well, this explains it!"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1.1400000000000001"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "PvqMgEecuXds"
      },
      "source": [
        "Although the output of `is_even(3.14)` might be what you want, a smarter function might let the user know that 3.14 should not be input into `is_even`.  We commonly ask whether *integers* are even or odd; if a non-integer ends up input to `is_even`, it might be a sign of a bug elsewhere.  One possibility is to modify the function by manually printing an error message."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "huFP5FyeuXds"
      },
      "source": [
        "def is_even(n):\n",
        "    if type(n) == int:\n",
        "        return (n%2 == 0)\n",
        "    else:\n",
        "        print(\"Bad input!  Please input integers only.\")\n",
        "        return None"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2KZBZWcHuXdt",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "fea99c20-786b-4ca6-a456-eefb0a95ddd2"
      },
      "source": [
        "is_even(4)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "True"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Mm0Hn7LWuXdt",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "126aab6f-03b6-42db-e1fd-3143cec64612"
      },
      "source": [
        "is_even(3.14)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Bad input!  Please input integers only.\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "NBOviOZruXdt",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "f79d618f-d793-46fb-cfcb-e11e2cc211e6"
      },
      "source": [
        "print(is_even(3.14))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Bad input!  Please input integers only.\n",
            "None\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "mAXQeQhyuXdt"
      },
      "source": [
        "This behavior is a bit better.  The output of the function is neither True nor False, when a non-integer is input.  Instead, the smarter function outputs `None`, which is exactly what it sounds like."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bYi3Vy4duXdt",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "67bb3afb-5462-4fb9-ea29-f7f59d1c6857"
      },
      "source": [
        "type(None) # A zen command."
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "NoneType"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 23
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "u1VJVIs8uXdt"
      },
      "source": [
        "Instead of manually using a print command and returning None, we can use Python's built-in `exception` class.  Raising exceptions is the Pythonic way of catching errors, and this will make things smoother in the long term.  Here's a new and safe `is_even` function."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "zaktPSqXuXdt"
      },
      "source": [
        "def is_even(n):\n",
        "    if type(n) == int:\n",
        "        return (n%2 == 0)\n",
        "    else:\n",
        "        raise TypeError('Only integers can be even or odd.')"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "49h2r4O3uXdt",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "93fc73f1-1a3f-4ab9-8a78-cb66cadd018d"
      },
      "source": [
        "is_even(3)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "False"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 28
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "iOw7QU5DuXdt",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 253
        },
        "outputId": "e8de0e9c-3e88-4033-91cc-7ebc67aaf0ca"
      },
      "source": [
        "is_even(3.14)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "TypeError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-29-24ec50760f46>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mis_even\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m3.14\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;32m<ipython-input-27-965faba9098f>\u001b[0m in \u001b[0;36mis_even\u001b[0;34m(n)\u001b[0m\n\u001b[1;32m      3\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mn\u001b[0m\u001b[0;34m%\u001b[0m\u001b[0;36m2\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m     \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 5\u001b[0;31m         \u001b[0;32mraise\u001b[0m \u001b[0mTypeError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Only integers can be even or odd.'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;31mTypeError\u001b[0m: Only integers can be even or odd."
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "W-Ns1RSDuXdt"
      },
      "source": [
        "Instead of manually printing the error message and returning `None`, we have raised a `TypeError`.  This gives information about the kind of error, and a custom error message is displayed at the end.  Type errors are meant for situations where a variable belongs to the wrong type.  `TypeError` is just one kind of \"exception\" -- the full built-in hierarchy of exceptions can be found in the [official Python documentation](https://docs.python.org/3/library/exceptions.html#exception-hierarchy).\n",
        "\n",
        "Another kind of exception is the `ValueError`.  It seems similar to `TypeError` at first, but `ValueError` is meant to catch an input that has a \"bad\" value, even if it is the right type.  For example, here is a square root function that only works with positive input.  It should raise an exception (error message) when a negative number is input.  Both positive and negative numbers can be represented as floats, so the error doesn't represent the *wrong type*.  The error represents a *bad value*.  "
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "YC762YAjuXdu"
      },
      "source": [
        "def sqrt(x):\n",
        "    '''\n",
        "    Estimates the square root of a positive number x.\n",
        "    '''\n",
        "    if x < 0:\n",
        "        raise ValueError('Cannot approximate square root of negative numbers.')\n",
        "    guess= x/2 # A decent place to start\n",
        "    while True: # A dangerous loop!  See next section...\n",
        "        new_guess = 0.5 * (guess + x/guess)\n",
        "        if abs(new_guess - guess) < .000000001: # close enough!\n",
        "            return new_guess\n",
        "        guess = new_guess"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "0uwvsrDNuXdu",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "677c654d-b995-42f7-f93e-9fb7ee76204a"
      },
      "source": [
        "sqrt(3) # This should be ok."
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1.7320508075688772"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 32
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "scrolled": true,
        "id": "DpBaST5WuXdu",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 287
        },
        "outputId": "de11d7fb-b91b-415d-a3db-53763b91fba6"
      },
      "source": [
        "sqrt(-3)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "ValueError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-33-8be5c01c52c0>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0msqrt\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0;36m3\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;32m<ipython-input-31-39991b3bf836>\u001b[0m in \u001b[0;36msqrt\u001b[0;34m(x)\u001b[0m\n\u001b[1;32m      4\u001b[0m     '''\n\u001b[1;32m      5\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mx\u001b[0m \u001b[0;34m<\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 6\u001b[0;31m         \u001b[0;32mraise\u001b[0m \u001b[0mValueError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Cannot approximate square root of negative numbers.'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      7\u001b[0m     \u001b[0mguess\u001b[0m\u001b[0;34m=\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m/\u001b[0m\u001b[0;36m2\u001b[0m \u001b[0;31m# A decent place to start\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      8\u001b[0m     \u001b[0;32mwhile\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;31m# A dangerous loop!  See next section...\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mValueError\u001b[0m: Cannot approximate square root of negative numbers."
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "aUzsimjyuXdu"
      },
      "source": [
        "By raising the `ValueError`, we have avoided an endless loop... the sort of problem that crashes computers!  If you know that your function is only meant for certain kinds of inputs, it is best to catch errors by raising exceptions."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "mXFJBMEAuXdu"
      },
      "source": [
        "###Exercises\n",
        "\n",
        "1.  There's a special exception called `ZeroDivisionError`.  When do you think this occurs?  Try to make it occur!  Can you think of a time when you might want to raise this exception yourself?\n",
        "\n",
        "2.  Make the `is_prime` function safer by raising a `TypeError` or a `ValueError` when a \"bad\" input occurs."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "hNB_oDAyCQFQ"
      },
      "source": [
        "ZeroDivisionError should occur when a number is divided by zero."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "yqQ_3oVTuXdu",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 183
        },
        "outputId": "2105dab2-827e-441c-afaa-24bc52066816"
      },
      "source": [
        "#1.\n",
        "3/0\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "ZeroDivisionError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mZeroDivisionError\u001b[0m                         Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-39-f11602c3299b>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m#1.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0;36m3\u001b[0m\u001b[0;34m/\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;31mZeroDivisionError\u001b[0m: division by zero"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "T-W6LljjCcBS"
      },
      "source": [
        "1. One might want to raise this exception when the sum of two fractions has a denominator of zero because the resulting fraction is undefined and should not output a result."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "A8naW7BNCG4Z"
      },
      "source": [
        "#2.\n",
        "def is_prime(n):\n",
        "  for j in range(2,n): # the list of numbers 2,3,...,n-1.\n",
        "    if n > 1000000:\n",
        "      raise ValueError(\"Number too big.\")\n",
        "      return None\n",
        "    if n%j == 0: # is n divisible by j?\n",
        "      print(\"{} is a factor of {}.\".format(j,n))\n",
        "      return False\n",
        "  return True"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "8RP84fPOuXdu"
      },
      "source": [
        "## While loops and implementation of the Eucidean algorithm"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "imB-GVzNuXdu"
      },
      "source": [
        "We *almost* have all the tools we need to implement the Euclidean algorithm.  The last tool we will need is the **while loop**.  We have seen the *for loop* already, which is very useful for iterating over a range of numbers.  The Euclidean algorithm involves repetition, but there is no way to know in advance how many steps it will take.  The while loop allows us to repeat a process as long as a boolean value (sometimes called a **flag**) is True.  The following countdown example illustrates the structure of a while loop."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "iIA-U8KouXdw"
      },
      "source": [
        "def countdown(n):\n",
        "    current_value = n\n",
        "    while current_value > 0:  # The condition (current_value > 0) is checked before every instance of the scope!\n",
        "        print(current_value)\n",
        "        current_value = current_value - 1\n",
        "    print(\"Blastoff!\")"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "vqtBFRjYuXdw",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "8d45789f-9b83-4641-875d-9a63842e89d8"
      },
      "source": [
        "countdown(10)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "10\n",
            "9\n",
            "8\n",
            "7\n",
            "6\n",
            "5\n",
            "4\n",
            "3\n",
            "2\n",
            "1\n",
            "Blastoff!\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "UyatsGmduXdw"
      },
      "source": [
        "The while loop syntax begins with `while <boolean>:` and the following indented lines comprise the scope of the loop.  If the boolean is `True`, then the scope of the loop is executed.  If the boolean is `True` again afterwards, then the scope of the loop is executed again.  And again and again and so on.\n",
        "\n",
        "This can be a **dangerous process**!  For example, what would happen if you made a little typo and the last line of the while loop read `current_value = current_value + 1`?  The numbers would increase and increase... and the boolean `current_value > 0` would **always** be `True`.  Therefore the loop would never end.  Bigger and bigger numbers would scroll down your computer screen.  \n",
        "\n",
        "You might panic under such a circumstance, and maybe turn your computer off to stop the loop.  Here is some advice for when you get stuck in such a neverending loop, and you're using Google Colab.\n",
        "\n",
        "1.  Back up your work often.  When you're programming, make sure everything else is saved just in case.\n",
        "2.  Save your programming work (use \"Save a copy in GitHub\" and/or \"Save a copy in Drive\") often, especially before running a cell with a loop for the first time.\n",
        "3.  If you *do* get stuck in a neverending loop, click on \"Runtime... Interrupt execution\".  This will often unstick the loop and allow you to pick up where you left off.  \n",
        "\n",
        "Now, if you're feeling brave, save your work, change the while loop so that it never ends, and try to recover where you left off.  But be aware that this could cause your computer to freeze or behave erratically, crashing your browser, etc.  Don't panic... it probably won't break your computer permanently.\n",
        "\n",
        "The neverending loop causes two problems here.  One is with the computer processor, which will be essentially spinning its wheels.  This is called [busy waiting](https://en.wikipedia.org/wiki/Busy_waiting), and the computer will essentially be busy waiting forever.  The other problem is that your loop is printing more and more lines of text into the notebook.  This could easily crash your web browser, which is trying to store and display zillions of lines of numbers.  So be ready for problems!  "
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Wsxd991k0nJH"
      },
      "source": [
        "def countdown(n):\n",
        "    current_value = n\n",
        "    while current_value > 0:  # The condition (current_value > 0) is checked before every instance of the scope!\n",
        "      print(current_value)\n",
        "      current_value = current_value + 1\n",
        "    print(\"Blastoff!\")"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "IV_dE4Bv0qio",
        "outputId": "0ea4f546-b634-4f17-b9ab-f3d1f263f466"
      },
      "source": [
        "countdown(3)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "\u001b[1;30;43mStreaming output truncated to the last 5000 lines.\u001b[0m\n",
            "313161\n",
            "313162\n",
            "313163\n",
            "313164\n",
            "313165\n",
            "313166\n",
            "313167\n",
            "313168\n",
            "313169\n",
            "313170\n",
            "313171\n",
            "313172\n",
            "313173\n",
            "313174\n",
            "313175\n",
            "313176\n",
            "313177\n",
            "313178\n",
            "313179\n",
            "313180\n",
            "313181\n",
            "313182\n",
            "313183\n",
            "313184\n",
            "313185\n",
            "313186\n",
            "313187\n",
            "313188\n",
            "313189\n",
            "313190\n",
            "313191\n",
            "313192\n",
            "313193\n",
            "313194\n",
            "313195\n",
            "313196\n",
            "313197\n",
            "313198\n",
            "313199\n",
            "313200\n",
            "313201\n",
            "313202\n",
            "313203\n",
            "313204\n",
            "313205\n",
            "313206\n",
            "313207\n",
            "313208\n",
            "313209\n",
            "313210\n",
            "313211\n",
            "313212\n",
            "313213\n",
            "313214\n",
            "313215\n",
            "313216\n",
            "313217\n",
            "313218\n",
            "313219\n",
            "313220\n",
            "313221\n",
            "313222\n",
            "313223\n",
            "313224\n",
            "313225\n",
            "313226\n",
            "313227\n",
            "313228\n",
            "313229\n",
            "313230\n",
            "313231\n",
            "313232\n",
            "313233\n",
            "313234\n",
            "313235\n",
            "313236\n",
            "313237\n",
            "313238\n",
            "313239\n",
            "313240\n",
            "313241\n",
            "313242\n",
            "313243\n",
            "313244\n",
            "313245\n",
            "313246\n",
            "313247\n",
            "313248\n",
            "313249\n",
            "313250\n",
            "313251\n",
            "313252\n",
            "313253\n",
            "313254\n",
            "313255\n",
            "313256\n",
            "313257\n",
            "313258\n",
            "313259\n",
            "313260\n",
            "313261\n",
            "313262\n",
            "313263\n",
            "313264\n",
            "313265\n",
            "313266\n",
            "313267\n",
            "313268\n",
            "313269\n",
            "313270\n",
            "313271\n",
            "313272\n",
            "313273\n",
            "313274\n",
            "313275\n",
            "313276\n",
            "313277\n",
            "313278\n",
            "313279\n",
            "313280\n",
            "313281\n",
            "313282\n",
            "313283\n",
            "313284\n",
            "313285\n",
            "313286\n",
            "313287\n",
            "313288\n",
            "313289\n",
            "313290\n",
            "313291\n",
            "313292\n",
            "313293\n",
            "313294\n",
            "313295\n",
            "313296\n",
            "313297\n",
            "313298\n",
            "313299\n",
            "313300\n",
            "313301\n",
            "313302\n",
            "313303\n",
            "313304\n",
            "313305\n",
            "313306\n",
            "313307\n",
            "313308\n",
            "313309\n",
            "313310\n",
            "313311\n",
            "313312\n",
            "313313\n",
            "313314\n",
            "313315\n",
            "313316\n",
            "313317\n",
            "313318\n",
            "313319\n",
            "313320\n",
            "313321\n",
            "313322\n",
            "313323\n",
            "313324\n",
            "313325\n",
            "313326\n",
            "313327\n",
            "313328\n",
            "313329\n",
            "313330\n",
            "313331\n",
            "313332\n",
            "313333\n",
            "313334\n",
            "313335\n",
            "313336\n",
            "313337\n",
            "313338\n",
            "313339\n",
            "313340\n",
            "313341\n",
            "313342\n",
            "313343\n",
            "313344\n",
            "313345\n",
            "313346\n",
            "313347\n",
            "313348\n",
            "313349\n",
            "313350\n",
            "313351\n",
            "313352\n",
            "313353\n",
            "313354\n",
            "313355\n",
            "313356\n",
            "313357\n",
            "313358\n",
            "313359\n",
            "313360\n",
            "313361\n",
            "313362\n",
            "313363\n",
            "313364\n",
            "313365\n",
            "313366\n",
            "313367\n",
            "313368\n",
            "313369\n",
            "313370\n",
            "313371\n",
            "313372\n",
            "313373\n",
            "313374\n",
            "313375\n",
            "313376\n",
            "313377\n",
            "313378\n",
            "313379\n",
            "313380\n",
            "313381\n",
            "313382\n",
            "313383\n",
            "313384\n",
            "313385\n",
            "313386\n",
            "313387\n",
            "313388\n",
            "313389\n",
            "313390\n",
            "313391\n",
            "313392\n",
            "313393\n",
            "313394\n",
            "313395\n",
            "313396\n",
            "313397\n",
            "313398\n",
            "313399\n",
            "313400\n",
            "313401\n",
            "313402\n",
            "313403\n",
            "313404\n",
            "313405\n",
            "313406\n",
            "313407\n",
            "313408\n",
            "313409\n",
            "313410\n",
            "313411\n",
            "313412\n",
            "313413\n",
            "313414\n",
            "313415\n",
            "313416\n",
            "313417\n",
            "313418\n",
            "313419\n",
            "313420\n",
            "313421\n",
            "313422\n",
            "313423\n",
            "313424\n",
            "313425\n",
            "313426\n",
            "313427\n",
            "313428\n",
            "313429\n",
            "313430\n",
            "313431\n",
            "313432\n",
            "313433\n",
            "313434\n",
            "313435\n",
            "313436\n",
            "313437\n",
            "313438\n",
            "313439\n",
            "313440\n",
            "313441\n",
            "313442\n",
            "313443\n",
            "313444\n",
            "313445\n",
            "313446\n",
            "313447\n",
            "313448\n",
            "313449\n",
            "313450\n",
            "313451\n",
            "313452\n",
            "313453\n",
            "313454\n",
            "313455\n",
            "313456\n",
            "313457\n",
            "313458\n",
            "313459\n",
            "313460\n",
            "313461\n",
            "313462\n",
            "313463\n",
            "313464\n",
            "313465\n",
            "313466\n",
            "313467\n",
            "313468\n",
            "313469\n",
            "313470\n",
            "313471\n",
            "313472\n",
            "313473\n",
            "313474\n",
            "313475\n",
            "313476\n",
            "313477\n",
            "313478\n",
            "313479\n",
            "313480\n",
            "313481\n",
            "313482\n",
            "313483\n",
            "313484\n",
            "313485\n",
            "313486\n",
            "313487\n",
            "313488\n",
            "313489\n",
            "313490\n",
            "313491\n",
            "313492\n",
            "313493\n",
            "313494\n",
            "313495\n",
            "313496\n",
            "313497\n",
            "313498\n",
            "313499\n",
            "313500\n",
            "313501\n",
            "313502\n",
            "313503\n",
            "313504\n",
            "313505\n",
            "313506\n",
            "313507\n",
            "313508\n",
            "313509\n",
            "313510\n",
            "313511\n",
            "313512\n",
            "313513\n",
            "313514\n",
            "313515\n",
            "313516\n",
            "313517\n",
            "313518\n",
            "313519\n",
            "313520\n",
            "313521\n",
            "313522\n",
            "313523\n",
            "313524\n",
            "313525\n",
            "313526\n",
            "313527\n",
            "313528\n",
            "313529\n",
            "313530\n",
            "313531\n",
            "313532\n",
            "313533\n",
            "313534\n",
            "313535\n",
            "313536\n",
            "313537\n",
            "313538\n",
            "313539\n",
            "313540\n",
            "313541\n",
            "313542\n",
            "313543\n",
            "313544\n",
            "313545\n",
            "313546\n",
            "313547\n",
            "313548\n",
            "313549\n",
            "313550\n",
            "313551\n",
            "313552\n",
            "313553\n",
            "313554\n",
            "313555\n",
            "313556\n",
            "313557\n",
            "313558\n",
            "313559\n",
            "313560\n",
            "313561\n",
            "313562\n",
            "313563\n",
            "313564\n",
            "313565\n",
            "313566\n",
            "313567\n",
            "313568\n",
            "313569\n",
            "313570\n",
            "313571\n",
            "313572\n",
            "313573\n",
            "313574\n",
            "313575\n",
            "313576\n",
            "313577\n",
            "313578\n",
            "313579\n",
            "313580\n",
            "313581\n",
            "313582\n",
            "313583\n",
            "313584\n",
            "313585\n",
            "313586\n",
            "313587\n",
            "313588\n",
            "313589\n",
            "313590\n",
            "313591\n",
            "313592\n",
            "313593\n",
            "313594\n",
            "313595\n",
            "313596\n",
            "313597\n",
            "313598\n",
            "313599\n",
            "313600\n",
            "313601\n",
            "313602\n",
            "313603\n",
            "313604\n",
            "313605\n",
            "313606\n",
            "313607\n",
            "313608\n",
            "313609\n",
            "313610\n",
            "313611\n",
            "313612\n",
            "313613\n",
            "313614\n",
            "313615\n",
            "313616\n",
            "313617\n",
            "313618\n",
            "313619\n",
            "313620\n",
            "313621\n",
            "313622\n",
            "313623\n",
            "313624\n",
            "313625\n",
            "313626\n",
            "313627\n",
            "313628\n",
            "313629\n",
            "313630\n",
            "313631\n",
            "313632\n",
            "313633\n",
            "313634\n",
            "313635\n",
            "313636\n",
            "313637\n",
            "313638\n",
            "313639\n",
            "313640\n",
            "313641\n",
            "313642\n",
            "313643\n",
            "313644\n",
            "313645\n",
            "313646\n",
            "313647\n",
            "313648\n",
            "313649\n",
            "313650\n",
            "313651\n",
            "313652\n",
            "313653\n",
            "313654\n",
            "313655\n",
            "313656\n",
            "313657\n",
            "313658\n",
            "313659\n",
            "313660\n",
            "313661\n",
            "313662\n",
            "313663\n",
            "313664\n",
            "313665\n",
            "313666\n",
            "313667\n",
            "313668\n",
            "313669\n",
            "313670\n",
            "313671\n",
            "313672\n",
            "313673\n",
            "313674\n",
            "313675\n",
            "313676\n",
            "313677\n",
            "313678\n",
            "313679\n",
            "313680\n",
            "313681\n",
            "313682\n",
            "313683\n",
            "313684\n",
            "313685\n",
            "313686\n",
            "313687\n",
            "313688\n",
            "313689\n",
            "313690\n",
            "313691\n",
            "313692\n",
            "313693\n",
            "313694\n",
            "313695\n",
            "313696\n",
            "313697\n",
            "313698\n",
            "313699\n",
            "313700\n",
            "313701\n",
            "313702\n",
            "313703\n",
            "313704\n",
            "313705\n",
            "313706\n",
            "313707\n",
            "313708\n",
            "313709\n",
            "313710\n",
            "313711\n",
            "313712\n",
            "313713\n",
            "313714\n",
            "313715\n",
            "313716\n",
            "313717\n",
            "313718\n",
            "313719\n",
            "313720\n",
            "313721\n",
            "313722\n",
            "313723\n",
            "313724\n",
            "313725\n",
            "313726\n",
            "313727\n",
            "313728\n",
            "313729\n",
            "313730\n",
            "313731\n",
            "313732\n",
            "313733\n",
            "313734\n",
            "313735\n",
            "313736\n",
            "313737\n",
            "313738\n",
            "313739\n",
            "313740\n",
            "313741\n",
            "313742\n",
            "313743\n",
            "313744\n",
            "313745\n",
            "313746\n",
            "313747\n",
            "313748\n",
            "313749\n",
            "313750\n",
            "313751\n",
            "313752\n",
            "313753\n",
            "313754\n",
            "313755\n",
            "313756\n",
            "313757\n",
            "313758\n",
            "313759\n",
            "313760\n",
            "313761\n",
            "313762\n",
            "313763\n",
            "313764\n",
            "313765\n",
            "313766\n",
            "313767\n",
            "313768\n",
            "313769\n",
            "313770\n",
            "313771\n",
            "313772\n",
            "313773\n",
            "313774\n",
            "313775\n",
            "313776\n",
            "313777\n",
            "313778\n",
            "313779\n",
            "313780\n",
            "313781\n",
            "313782\n",
            "313783\n",
            "313784\n",
            "313785\n",
            "313786\n",
            "313787\n",
            "313788\n",
            "313789\n",
            "313790\n",
            "313791\n",
            "313792\n",
            "313793\n",
            "313794\n",
            "313795\n",
            "313796\n",
            "313797\n",
            "313798\n",
            "313799\n",
            "313800\n",
            "313801\n",
            "313802\n",
            "313803\n",
            "313804\n",
            "313805\n",
            "313806\n",
            "313807\n",
            "313808\n",
            "313809\n",
            "313810\n",
            "313811\n",
            "313812\n",
            "313813\n",
            "313814\n",
            "313815\n",
            "313816\n",
            "313817\n",
            "313818\n",
            "313819\n",
            "313820\n",
            "313821\n",
            "313822\n",
            "313823\n",
            "313824\n",
            "313825\n",
            "313826\n",
            "313827\n",
            "313828\n",
            "313829\n",
            "313830\n",
            "313831\n",
            "313832\n",
            "313833\n",
            "313834\n",
            "313835\n",
            "313836\n",
            "313837\n",
            "313838\n",
            "313839\n",
            "313840\n",
            "313841\n",
            "313842\n",
            "313843\n",
            "313844\n",
            "313845\n",
            "313846\n",
            "313847\n",
            "313848\n",
            "313849\n",
            "313850\n",
            "313851\n",
            "313852\n",
            "313853\n",
            "313854\n",
            "313855\n",
            "313856\n",
            "313857\n",
            "313858\n",
            "313859\n",
            "313860\n",
            "313861\n",
            "313862\n",
            "313863\n",
            "313864\n",
            "313865\n",
            "313866\n",
            "313867\n",
            "313868\n",
            "313869\n",
            "313870\n",
            "313871\n",
            "313872\n",
            "313873\n",
            "313874\n",
            "313875\n",
            "313876\n",
            "313877\n",
            "313878\n",
            "313879\n",
            "313880\n",
            "313881\n",
            "313882\n",
            "313883\n",
            "313884\n",
            "313885\n",
            "313886\n",
            "313887\n",
            "313888\n",
            "313889\n",
            "313890\n",
            "313891\n",
            "313892\n",
            "313893\n",
            "313894\n",
            "313895\n",
            "313896\n",
            "313897\n",
            "313898\n",
            "313899\n",
            "313900\n",
            "313901\n",
            "313902\n",
            "313903\n",
            "313904\n",
            "313905\n",
            "313906\n",
            "313907\n",
            "313908\n",
            "313909\n",
            "313910\n",
            "313911\n",
            "313912\n",
            "313913\n",
            "313914\n",
            "313915\n",
            "313916\n",
            "313917\n",
            "313918\n",
            "313919\n",
            "313920\n",
            "313921\n",
            "313922\n",
            "313923\n",
            "313924\n",
            "313925\n",
            "313926\n",
            "313927\n",
            "313928\n",
            "313929\n",
            "313930\n",
            "313931\n",
            "313932\n",
            "313933\n",
            "313934\n",
            "313935\n",
            "313936\n",
            "313937\n",
            "313938\n",
            "313939\n",
            "313940\n",
            "313941\n",
            "313942\n",
            "313943\n",
            "313944\n",
            "313945\n",
            "313946\n",
            "313947\n",
            "313948\n",
            "313949\n",
            "313950\n",
            "313951\n",
            "313952\n",
            "313953\n",
            "313954\n",
            "313955\n",
            "313956\n",
            "313957\n",
            "313958\n",
            "313959\n",
            "313960\n",
            "313961\n",
            "313962\n",
            "313963\n",
            "313964\n",
            "313965\n",
            "313966\n",
            "313967\n",
            "313968\n",
            "313969\n",
            "313970\n",
            "313971\n",
            "313972\n",
            "313973\n",
            "313974\n",
            "313975\n",
            "313976\n",
            "313977\n",
            "313978\n",
            "313979\n",
            "313980\n",
            "313981\n",
            "313982\n",
            "313983\n",
            "313984\n",
            "313985\n",
            "313986\n",
            "313987\n",
            "313988\n",
            "313989\n",
            "313990\n",
            "313991\n",
            "313992\n",
            "313993\n",
            "313994\n",
            "313995\n",
            "313996\n",
            "313997\n",
            "313998\n",
            "313999\n",
            "314000\n",
            "314001\n",
            "314002\n",
            "314003\n",
            "314004\n",
            "314005\n",
            "314006\n",
            "314007\n",
            "314008\n",
            "314009\n",
            "314010\n",
            "314011\n",
            "314012\n",
            "314013\n",
            "314014\n",
            "314015\n",
            "314016\n",
            "314017\n",
            "314018\n",
            "314019\n",
            "314020\n",
            "314021\n",
            "314022\n",
            "314023\n",
            "314024\n",
            "314025\n",
            "314026\n",
            "314027\n",
            "314028\n",
            "314029\n",
            "314030\n",
            "314031\n",
            "314032\n",
            "314033\n",
            "314034\n",
            "314035\n",
            "314036\n",
            "314037\n",
            "314038\n",
            "314039\n",
            "314040\n",
            "314041\n",
            "314042\n",
            "314043\n",
            "314044\n",
            "314045\n",
            "314046\n",
            "314047\n",
            "314048\n",
            "314049\n",
            "314050\n",
            "314051\n",
            "314052\n",
            "314053\n",
            "314054\n",
            "314055\n",
            "314056\n",
            "314057\n",
            "314058\n",
            "314059\n",
            "314060\n",
            "314061\n",
            "314062\n",
            "314063\n",
            "314064\n",
            "314065\n",
            "314066\n",
            "314067\n",
            "314068\n",
            "314069\n",
            "314070\n",
            "314071\n",
            "314072\n",
            "314073\n",
            "314074\n",
            "314075\n",
            "314076\n",
            "314077\n",
            "314078\n",
            "314079\n",
            "314080\n",
            "314081\n",
            "314082\n",
            "314083\n",
            "314084\n",
            "314085\n",
            "314086\n",
            "314087\n",
            "314088\n",
            "314089\n",
            "314090\n",
            "314091\n",
            "314092\n",
            "314093\n",
            "314094\n",
            "314095\n",
            "314096\n",
            "314097\n",
            "314098\n",
            "314099\n",
            "314100\n",
            "314101\n",
            "314102\n",
            "314103\n",
            "314104\n",
            "314105\n",
            "314106\n",
            "314107\n",
            "314108\n",
            "314109\n",
            "314110\n",
            "314111\n",
            "314112\n",
            "314113\n",
            "314114\n",
            "314115\n",
            "314116\n",
            "314117\n",
            "314118\n",
            "314119\n",
            "314120\n",
            "314121\n",
            "314122\n",
            "314123\n",
            "314124\n",
            "314125\n",
            "314126\n",
            "314127\n",
            "314128\n",
            "314129\n",
            "314130\n",
            "314131\n",
            "314132\n",
            "314133\n",
            "314134\n",
            "314135\n",
            "314136\n",
            "314137\n",
            "314138\n",
            "314139\n",
            "314140\n",
            "314141\n",
            "314142\n",
            "314143\n",
            "314144\n",
            "314145\n",
            "314146\n",
            "314147\n",
            "314148\n",
            "314149\n",
            "314150\n",
            "314151\n",
            "314152\n",
            "314153\n",
            "314154\n",
            "314155\n",
            "314156\n",
            "314157\n",
            "314158\n",
            "314159\n",
            "314160\n",
            "314161\n",
            "314162\n",
            "314163\n",
            "314164\n",
            "314165\n",
            "314166\n",
            "314167\n",
            "314168\n",
            "314169\n",
            "314170\n",
            "314171\n",
            "314172\n",
            "314173\n",
            "314174\n",
            "314175\n",
            "314176\n",
            "314177\n",
            "314178\n",
            "314179\n",
            "314180\n",
            "314181\n",
            "314182\n",
            "314183\n",
            "314184\n",
            "314185\n",
            "314186\n",
            "314187\n",
            "314188\n",
            "314189\n",
            "314190\n",
            "314191\n",
            "314192\n",
            "314193\n",
            "314194\n",
            "314195\n",
            "314196\n",
            "314197\n",
            "314198\n",
            "314199\n",
            "314200\n",
            "314201\n",
            "314202\n",
            "314203\n",
            "314204\n",
            "314205\n",
            "314206\n",
            "314207\n",
            "314208\n",
            "314209\n",
            "314210\n",
            "314211\n",
            "314212\n",
            "314213\n",
            "314214\n",
            "314215\n",
            "314216\n",
            "314217\n",
            "314218\n",
            "314219\n",
            "314220\n",
            "314221\n",
            "314222\n",
            "314223\n",
            "314224\n",
            "314225\n",
            "314226\n",
            "314227\n",
            "314228\n",
            "314229\n",
            "314230\n",
            "314231\n",
            "314232\n",
            "314233\n",
            "314234\n",
            "314235\n",
            "314236\n",
            "314237\n",
            "314238\n",
            "314239\n",
            "314240\n",
            "314241\n",
            "314242\n",
            "314243\n",
            "314244\n",
            "314245\n",
            "314246\n",
            "314247\n",
            "314248\n",
            "314249\n",
            "314250\n",
            "314251\n",
            "314252\n",
            "314253\n",
            "314254\n",
            "314255\n",
            "314256\n",
            "314257\n",
            "314258\n",
            "314259\n",
            "314260\n",
            "314261\n",
            "314262\n",
            "314263\n",
            "314264\n",
            "314265\n",
            "314266\n",
            "314267\n",
            "314268\n",
            "314269\n",
            "314270\n",
            "314271\n",
            "314272\n",
            "314273\n",
            "314274\n",
            "314275\n",
            "314276\n",
            "314277\n",
            "314278\n",
            "314279\n",
            "314280\n",
            "314281\n",
            "314282\n",
            "314283\n",
            "314284\n",
            "314285\n",
            "314286\n",
            "314287\n",
            "314288\n",
            "314289\n",
            "314290\n",
            "314291\n",
            "314292\n",
            "314293\n",
            "314294\n",
            "314295\n",
            "314296\n",
            "314297\n",
            "314298\n",
            "314299\n",
            "314300\n",
            "314301\n",
            "314302\n",
            "314303\n",
            "314304\n",
            "314305\n",
            "314306\n",
            "314307\n",
            "314308\n",
            "314309\n",
            "314310\n",
            "314311\n",
            "314312\n",
            "314313\n",
            "314314\n",
            "314315\n",
            "314316\n",
            "314317\n",
            "314318\n",
            "314319\n",
            "314320\n",
            "314321\n",
            "314322\n",
            "314323\n",
            "314324\n",
            "314325\n",
            "314326\n",
            "314327\n",
            "314328\n",
            "314329\n",
            "314330\n",
            "314331\n",
            "314332\n",
            "314333\n",
            "314334\n",
            "314335\n",
            "314336\n",
            "314337\n",
            "314338\n",
            "314339\n",
            "314340\n",
            "314341\n",
            "314342\n",
            "314343\n",
            "314344\n",
            "314345\n",
            "314346\n",
            "314347\n",
            "314348\n",
            "314349\n",
            "314350\n",
            "314351\n",
            "314352\n",
            "314353\n",
            "314354\n",
            "314355\n",
            "314356\n",
            "314357\n",
            "314358\n",
            "314359\n",
            "314360\n",
            "314361\n",
            "314362\n",
            "314363\n",
            "314364\n",
            "314365\n",
            "314366\n",
            "314367\n",
            "314368\n",
            "314369\n",
            "314370\n",
            "314371\n",
            "314372\n",
            "314373\n",
            "314374\n",
            "314375\n",
            "314376\n",
            "314377\n",
            "314378\n",
            "314379\n",
            "314380\n",
            "314381\n",
            "314382\n",
            "314383\n",
            "314384\n",
            "314385\n",
            "314386\n",
            "314387\n",
            "314388\n",
            "314389\n",
            "314390\n",
            "314391\n",
            "314392\n",
            "314393\n",
            "314394\n",
            "314395\n",
            "314396\n",
            "314397\n",
            "314398\n",
            "314399\n",
            "314400\n",
            "314401\n",
            "314402\n",
            "314403\n",
            "314404\n",
            "314405\n",
            "314406\n",
            "314407\n",
            "314408\n",
            "314409\n",
            "314410\n",
            "314411\n",
            "314412\n",
            "314413\n",
            "314414\n",
            "314415\n",
            "314416\n",
            "314417\n",
            "314418\n",
            "314419\n",
            "314420\n",
            "314421\n",
            "314422\n",
            "314423\n",
            "314424\n",
            "314425\n",
            "314426\n",
            "314427\n",
            "314428\n",
            "314429\n",
            "314430\n",
            "314431\n",
            "314432\n",
            "314433\n",
            "314434\n",
            "314435\n",
            "314436\n",
            "314437\n",
            "314438\n",
            "314439\n",
            "314440\n",
            "314441\n",
            "314442\n",
            "314443\n",
            "314444\n",
            "314445\n",
            "314446\n",
            "314447\n",
            "314448\n",
            "314449\n",
            "314450\n",
            "314451\n",
            "314452\n",
            "314453\n",
            "314454\n",
            "314455\n",
            "314456\n",
            "314457\n",
            "314458\n",
            "314459\n",
            "314460\n",
            "314461\n",
            "314462\n",
            "314463\n",
            "314464\n",
            "314465\n",
            "314466\n",
            "314467\n",
            "314468\n",
            "314469\n",
            "314470\n",
            "314471\n",
            "314472\n",
            "314473\n",
            "314474\n",
            "314475\n",
            "314476\n",
            "314477\n",
            "314478\n",
            "314479\n",
            "314480\n",
            "314481\n",
            "314482\n",
            "314483\n",
            "314484\n",
            "314485\n",
            "314486\n",
            "314487\n",
            "314488\n",
            "314489\n",
            "314490\n",
            "314491\n",
            "314492\n",
            "314493\n",
            "314494\n",
            "314495\n",
            "314496\n",
            "314497\n",
            "314498\n",
            "314499\n",
            "314500\n",
            "314501\n",
            "314502\n",
            "314503\n",
            "314504\n",
            "314505\n",
            "314506\n",
            "314507\n",
            "314508\n",
            "314509\n",
            "314510\n",
            "314511\n",
            "314512\n",
            "314513\n",
            "314514\n",
            "314515\n",
            "314516\n",
            "314517\n",
            "314518\n",
            "314519\n",
            "314520\n",
            "314521\n",
            "314522\n",
            "314523\n",
            "314524\n",
            "314525\n",
            "314526\n",
            "314527\n",
            "314528\n",
            "314529\n",
            "314530\n",
            "314531\n",
            "314532\n",
            "314533\n",
            "314534\n",
            "314535\n",
            "314536\n",
            "314537\n",
            "314538\n",
            "314539\n",
            "314540\n",
            "314541\n",
            "314542\n",
            "314543\n",
            "314544\n",
            "314545\n",
            "314546\n",
            "314547\n",
            "314548\n",
            "314549\n",
            "314550\n",
            "314551\n",
            "314552\n",
            "314553\n",
            "314554\n",
            "314555\n",
            "314556\n",
            "314557\n",
            "314558\n",
            "314559\n",
            "314560\n",
            "314561\n",
            "314562\n",
            "314563\n",
            "314564\n",
            "314565\n",
            "314566\n",
            "314567\n",
            "314568\n",
            "314569\n",
            "314570\n",
            "314571\n",
            "314572\n",
            "314573\n",
            "314574\n",
            "314575\n",
            "314576\n",
            "314577\n",
            "314578\n",
            "314579\n",
            "314580\n",
            "314581\n",
            "314582\n",
            "314583\n",
            "314584\n",
            "314585\n",
            "314586\n",
            "314587\n",
            "314588\n",
            "314589\n",
            "314590\n",
            "314591\n",
            "314592\n",
            "314593\n",
            "314594\n",
            "314595\n",
            "314596\n",
            "314597\n",
            "314598\n",
            "314599\n",
            "314600\n",
            "314601\n",
            "314602\n",
            "314603\n",
            "314604\n",
            "314605\n",
            "314606\n",
            "314607\n",
            "314608\n",
            "314609\n",
            "314610\n",
            "314611\n",
            "314612\n",
            "314613\n",
            "314614\n",
            "314615\n",
            "314616\n",
            "314617\n",
            "314618\n",
            "314619\n",
            "314620\n",
            "314621\n",
            "314622\n",
            "314623\n",
            "314624\n",
            "314625\n",
            "314626\n",
            "314627\n",
            "314628\n",
            "314629\n",
            "314630\n",
            "314631\n",
            "314632\n",
            "314633\n",
            "314634\n",
            "314635\n",
            "314636\n",
            "314637\n",
            "314638\n",
            "314639\n",
            "314640\n",
            "314641\n",
            "314642\n",
            "314643\n",
            "314644\n",
            "314645\n",
            "314646\n",
            "314647\n",
            "314648\n",
            "314649\n",
            "314650\n",
            "314651\n",
            "314652\n",
            "314653\n",
            "314654\n",
            "314655\n",
            "314656\n",
            "314657\n",
            "314658\n",
            "314659\n",
            "314660\n",
            "314661\n",
            "314662\n",
            "314663\n",
            "314664\n",
            "314665\n",
            "314666\n",
            "314667\n",
            "314668\n",
            "314669\n",
            "314670\n",
            "314671\n",
            "314672\n",
            "314673\n",
            "314674\n",
            "314675\n",
            "314676\n",
            "314677\n",
            "314678\n",
            "314679\n",
            "314680\n",
            "314681\n",
            "314682\n",
            "314683\n",
            "314684\n",
            "314685\n",
            "314686\n",
            "314687\n",
            "314688\n",
            "314689\n",
            "314690\n",
            "314691\n",
            "314692\n",
            "314693\n",
            "314694\n",
            "314695\n",
            "314696\n",
            "314697\n",
            "314698\n",
            "314699\n",
            "314700\n",
            "314701\n",
            "314702\n",
            "314703\n",
            "314704\n",
            "314705\n",
            "314706\n",
            "314707\n",
            "314708\n",
            "314709\n",
            "314710\n",
            "314711\n",
            "314712\n",
            "314713\n",
            "314714\n",
            "314715\n",
            "314716\n",
            "314717\n",
            "314718\n",
            "314719\n",
            "314720\n",
            "314721\n",
            "314722\n",
            "314723\n",
            "314724\n",
            "314725\n",
            "314726\n",
            "314727\n",
            "314728\n",
            "314729\n",
            "314730\n",
            "314731\n",
            "314732\n",
            "314733\n",
            "314734\n",
            "314735\n",
            "314736\n",
            "314737\n",
            "314738\n",
            "314739\n",
            "314740\n",
            "314741\n",
            "314742\n",
            "314743\n",
            "314744\n",
            "314745\n",
            "314746\n",
            "314747\n",
            "314748\n",
            "314749\n",
            "314750\n",
            "314751\n",
            "314752\n",
            "314753\n",
            "314754\n",
            "314755\n",
            "314756\n",
            "314757\n",
            "314758\n",
            "314759\n",
            "314760\n",
            "314761\n",
            "314762\n",
            "314763\n",
            "314764\n",
            "314765\n",
            "314766\n",
            "314767\n",
            "314768\n",
            "314769\n",
            "314770\n",
            "314771\n",
            "314772\n",
            "314773\n",
            "314774\n",
            "314775\n",
            "314776\n",
            "314777\n",
            "314778\n",
            "314779\n",
            "314780\n",
            "314781\n",
            "314782\n",
            "314783\n",
            "314784\n",
            "314785\n",
            "314786\n",
            "314787\n",
            "314788\n",
            "314789\n",
            "314790\n",
            "314791\n",
            "314792\n",
            "314793\n",
            "314794\n",
            "314795\n",
            "314796\n",
            "314797\n",
            "314798\n",
            "314799\n",
            "314800\n",
            "314801\n",
            "314802\n",
            "314803\n",
            "314804\n",
            "314805\n",
            "314806\n",
            "314807\n",
            "314808\n",
            "314809\n",
            "314810\n",
            "314811\n",
            "314812\n",
            "314813\n",
            "314814\n",
            "314815\n",
            "314816\n",
            "314817\n",
            "314818\n",
            "314819\n",
            "314820\n",
            "314821\n",
            "314822\n",
            "314823\n",
            "314824\n",
            "314825\n",
            "314826\n",
            "314827\n",
            "314828\n",
            "314829\n",
            "314830\n",
            "314831\n",
            "314832\n",
            "314833\n",
            "314834\n",
            "314835\n",
            "314836\n",
            "314837\n",
            "314838\n",
            "314839\n",
            "314840\n",
            "314841\n",
            "314842\n",
            "314843\n",
            "314844\n",
            "314845\n",
            "314846\n",
            "314847\n",
            "314848\n",
            "314849\n",
            "314850\n",
            "314851\n",
            "314852\n",
            "314853\n",
            "314854\n",
            "314855\n",
            "314856\n",
            "314857\n",
            "314858\n",
            "314859\n",
            "314860\n",
            "314861\n",
            "314862\n",
            "314863\n",
            "314864\n",
            "314865\n",
            "314866\n",
            "314867\n",
            "314868\n",
            "314869\n",
            "314870\n",
            "314871\n",
            "314872\n",
            "314873\n",
            "314874\n",
            "314875\n",
            "314876\n",
            "314877\n",
            "314878\n",
            "314879\n",
            "314880\n",
            "314881\n",
            "314882\n",
            "314883\n",
            "314884\n",
            "314885\n",
            "314886\n",
            "314887\n",
            "314888\n",
            "314889\n",
            "314890\n",
            "314891\n",
            "314892\n",
            "314893\n",
            "314894\n",
            "314895\n",
            "314896\n",
            "314897\n",
            "314898\n",
            "314899\n",
            "314900\n",
            "314901\n",
            "314902\n",
            "314903\n",
            "314904\n",
            "314905\n",
            "314906\n",
            "314907\n",
            "314908\n",
            "314909\n",
            "314910\n",
            "314911\n",
            "314912\n",
            "314913\n",
            "314914\n",
            "314915\n",
            "314916\n",
            "314917\n",
            "314918\n",
            "314919\n",
            "314920\n",
            "314921\n",
            "314922\n",
            "314923\n",
            "314924\n",
            "314925\n",
            "314926\n",
            "314927\n",
            "314928\n",
            "314929\n",
            "314930\n",
            "314931\n",
            "314932\n",
            "314933\n",
            "314934\n",
            "314935\n",
            "314936\n",
            "314937\n",
            "314938\n",
            "314939\n",
            "314940\n",
            "314941\n",
            "314942\n",
            "314943\n",
            "314944\n",
            "314945\n",
            "314946\n",
            "314947\n",
            "314948\n",
            "314949\n",
            "314950\n",
            "314951\n",
            "314952\n",
            "314953\n",
            "314954\n",
            "314955\n",
            "314956\n",
            "314957\n",
            "314958\n",
            "314959\n",
            "314960\n",
            "314961\n",
            "314962\n",
            "314963\n",
            "314964\n",
            "314965\n",
            "314966\n",
            "314967\n",
            "314968\n",
            "314969\n",
            "314970\n",
            "314971\n",
            "314972\n",
            "314973\n",
            "314974\n",
            "314975\n",
            "314976\n",
            "314977\n",
            "314978\n",
            "314979\n",
            "314980\n",
            "314981\n",
            "314982\n",
            "314983\n",
            "314984\n",
            "314985\n",
            "314986\n",
            "314987\n",
            "314988\n",
            "314989\n",
            "314990\n",
            "314991\n",
            "314992\n",
            "314993\n",
            "314994\n",
            "314995\n",
            "314996\n",
            "314997\n",
            "314998\n",
            "314999\n",
            "315000\n",
            "315001\n",
            "315002\n",
            "315003\n",
            "315004\n",
            "315005\n",
            "315006\n",
            "315007\n",
            "315008\n",
            "315009\n",
            "315010\n",
            "315011\n",
            "315012\n",
            "315013\n",
            "315014\n",
            "315015\n",
            "315016\n",
            "315017\n",
            "315018\n",
            "315019\n",
            "315020\n",
            "315021\n",
            "315022\n",
            "315023\n",
            "315024\n",
            "315025\n",
            "315026\n",
            "315027\n",
            "315028\n",
            "315029\n",
            "315030\n",
            "315031\n",
            "315032\n",
            "315033\n",
            "315034\n",
            "315035\n",
            "315036\n",
            "315037\n",
            "315038\n",
            "315039\n",
            "315040\n",
            "315041\n",
            "315042\n",
            "315043\n",
            "315044\n",
            "315045\n",
            "315046\n",
            "315047\n",
            "315048\n",
            "315049\n",
            "315050\n",
            "315051\n",
            "315052\n",
            "315053\n",
            "315054\n",
            "315055\n",
            "315056\n",
            "315057\n",
            "315058\n",
            "315059\n",
            "315060\n",
            "315061\n",
            "315062\n",
            "315063\n",
            "315064\n",
            "315065\n",
            "315066\n",
            "315067\n",
            "315068\n",
            "315069\n",
            "315070\n",
            "315071\n",
            "315072\n",
            "315073\n",
            "315074\n",
            "315075\n",
            "315076\n",
            "315077\n",
            "315078\n",
            "315079\n",
            "315080\n",
            "315081\n",
            "315082\n",
            "315083\n",
            "315084\n",
            "315085\n",
            "315086\n",
            "315087\n",
            "315088\n",
            "315089\n",
            "315090\n",
            "315091\n",
            "315092\n",
            "315093\n",
            "315094\n",
            "315095\n",
            "315096\n",
            "315097\n",
            "315098\n",
            "315099\n",
            "315100\n",
            "315101\n",
            "315102\n",
            "315103\n",
            "315104\n",
            "315105\n",
            "315106\n",
            "315107\n",
            "315108\n",
            "315109\n",
            "315110\n",
            "315111\n",
            "315112\n",
            "315113\n",
            "315114\n",
            "315115\n",
            "315116\n",
            "315117\n",
            "315118\n",
            "315119\n",
            "315120\n",
            "315121\n",
            "315122\n",
            "315123\n",
            "315124\n",
            "315125\n",
            "315126\n",
            "315127\n",
            "315128\n",
            "315129\n",
            "315130\n",
            "315131\n",
            "315132\n",
            "315133\n",
            "315134\n",
            "315135\n",
            "315136\n",
            "315137\n",
            "315138\n",
            "315139\n",
            "315140\n",
            "315141\n",
            "315142\n",
            "315143\n",
            "315144\n",
            "315145\n",
            "315146\n",
            "315147\n",
            "315148\n",
            "315149\n",
            "315150\n",
            "315151\n",
            "315152\n",
            "315153\n",
            "315154\n",
            "315155\n",
            "315156\n",
            "315157\n",
            "315158\n",
            "315159\n",
            "315160\n",
            "315161\n",
            "315162\n",
            "315163\n",
            "315164\n",
            "315165\n",
            "315166\n",
            "315167\n",
            "315168\n",
            "315169\n",
            "315170\n",
            "315171\n",
            "315172\n",
            "315173\n",
            "315174\n",
            "315175\n",
            "315176\n",
            "315177\n",
            "315178\n",
            "315179\n",
            "315180\n",
            "315181\n",
            "315182\n",
            "315183\n",
            "315184\n",
            "315185\n",
            "315186\n",
            "315187\n",
            "315188\n",
            "315189\n",
            "315190\n",
            "315191\n",
            "315192\n",
            "315193\n",
            "315194\n",
            "315195\n",
            "315196\n",
            "315197\n",
            "315198\n",
            "315199\n",
            "315200\n",
            "315201\n",
            "315202\n",
            "315203\n",
            "315204\n",
            "315205\n",
            "315206\n",
            "315207\n",
            "315208\n",
            "315209\n",
            "315210\n",
            "315211\n",
            "315212\n",
            "315213\n",
            "315214\n",
            "315215\n",
            "315216\n",
            "315217\n",
            "315218\n",
            "315219\n",
            "315220\n",
            "315221\n",
            "315222\n",
            "315223\n",
            "315224\n",
            "315225\n",
            "315226\n",
            "315227\n",
            "315228\n",
            "315229\n",
            "315230\n",
            "315231\n",
            "315232\n",
            "315233\n",
            "315234\n",
            "315235\n",
            "315236\n",
            "315237\n",
            "315238\n",
            "315239\n",
            "315240\n",
            "315241\n",
            "315242\n",
            "315243\n",
            "315244\n",
            "315245\n",
            "315246\n",
            "315247\n",
            "315248\n",
            "315249\n",
            "315250\n",
            "315251\n",
            "315252\n",
            "315253\n",
            "315254\n",
            "315255\n",
            "315256\n",
            "315257\n",
            "315258\n",
            "315259\n",
            "315260\n",
            "315261\n",
            "315262\n",
            "315263\n",
            "315264\n",
            "315265\n",
            "315266\n",
            "315267\n",
            "315268\n",
            "315269\n",
            "315270\n",
            "315271\n",
            "315272\n",
            "315273\n",
            "315274\n",
            "315275\n",
            "315276\n",
            "315277\n",
            "315278\n",
            "315279\n",
            "315280\n",
            "315281\n",
            "315282\n",
            "315283\n",
            "315284\n",
            "315285\n",
            "315286\n",
            "315287\n",
            "315288\n",
            "315289\n",
            "315290\n",
            "315291\n",
            "315292\n",
            "315293\n",
            "315294\n",
            "315295\n",
            "315296\n",
            "315297\n",
            "315298\n",
            "315299\n",
            "315300\n",
            "315301\n",
            "315302\n",
            "315303\n",
            "315304\n",
            "315305\n",
            "315306\n",
            "315307\n",
            "315308\n",
            "315309\n",
            "315310\n",
            "315311\n",
            "315312\n",
            "315313\n",
            "315314\n",
            "315315\n",
            "315316\n",
            "315317\n",
            "315318\n",
            "315319\n",
            "315320\n",
            "315321\n",
            "315322\n",
            "315323\n",
            "315324\n",
            "315325\n",
            "315326\n",
            "315327\n",
            "315328\n",
            "315329\n",
            "315330\n",
            "315331\n",
            "315332\n",
            "315333\n",
            "315334\n",
            "315335\n",
            "315336\n",
            "315337\n",
            "315338\n",
            "315339\n",
            "315340\n",
            "315341\n",
            "315342\n",
            "315343\n",
            "315344\n",
            "315345\n",
            "315346\n",
            "315347\n",
            "315348\n",
            "315349\n",
            "315350\n",
            "315351\n",
            "315352\n",
            "315353\n",
            "315354\n",
            "315355\n",
            "315356\n",
            "315357\n",
            "315358\n",
            "315359\n",
            "315360\n",
            "315361\n",
            "315362\n",
            "315363\n",
            "315364\n",
            "315365\n",
            "315366\n",
            "315367\n",
            "315368\n",
            "315369\n",
            "315370\n",
            "315371\n",
            "315372\n",
            "315373\n",
            "315374\n",
            "315375\n",
            "315376\n",
            "315377\n",
            "315378\n",
            "315379\n",
            "315380\n",
            "315381\n",
            "315382\n",
            "315383\n",
            "315384\n",
            "315385\n",
            "315386\n",
            "315387\n",
            "315388\n",
            "315389\n",
            "315390\n",
            "315391\n",
            "315392\n",
            "315393\n",
            "315394\n",
            "315395\n",
            "315396\n",
            "315397\n",
            "315398\n",
            "315399\n",
            "315400\n",
            "315401\n",
            "315402\n",
            "315403\n",
            "315404\n",
            "315405\n",
            "315406\n",
            "315407\n",
            "315408\n",
            "315409\n",
            "315410\n",
            "315411\n",
            "315412\n",
            "315413\n",
            "315414\n",
            "315415\n",
            "315416\n",
            "315417\n",
            "315418\n",
            "315419\n",
            "315420\n",
            "315421\n",
            "315422\n",
            "315423\n",
            "315424\n",
            "315425\n",
            "315426\n",
            "315427\n",
            "315428\n",
            "315429\n",
            "315430\n",
            "315431\n",
            "315432\n",
            "315433\n",
            "315434\n",
            "315435\n",
            "315436\n",
            "315437\n",
            "315438\n",
            "315439\n",
            "315440\n",
            "315441\n",
            "315442\n",
            "315443\n",
            "315444\n",
            "315445\n",
            "315446\n",
            "315447\n",
            "315448\n",
            "315449\n",
            "315450\n",
            "315451\n",
            "315452\n",
            "315453\n",
            "315454\n",
            "315455\n",
            "315456\n",
            "315457\n",
            "315458\n",
            "315459\n",
            "315460\n",
            "315461\n",
            "315462\n",
            "315463\n",
            "315464\n",
            "315465\n",
            "315466\n",
            "315467\n",
            "315468\n",
            "315469\n",
            "315470\n",
            "315471\n",
            "315472\n",
            "315473\n",
            "315474\n",
            "315475\n",
            "315476\n",
            "315477\n",
            "315478\n",
            "315479\n",
            "315480\n",
            "315481\n",
            "315482\n",
            "315483\n",
            "315484\n",
            "315485\n",
            "315486\n",
            "315487\n",
            "315488\n",
            "315489\n",
            "315490\n",
            "315491\n",
            "315492\n",
            "315493\n",
            "315494\n",
            "315495\n",
            "315496\n",
            "315497\n",
            "315498\n",
            "315499\n",
            "315500\n",
            "315501\n",
            "315502\n",
            "315503\n",
            "315504\n",
            "315505\n",
            "315506\n",
            "315507\n",
            "315508\n",
            "315509\n",
            "315510\n",
            "315511\n",
            "315512\n",
            "315513\n",
            "315514\n",
            "315515\n",
            "315516\n",
            "315517\n",
            "315518\n",
            "315519\n",
            "315520\n",
            "315521\n",
            "315522\n",
            "315523\n",
            "315524\n",
            "315525\n",
            "315526\n",
            "315527\n",
            "315528\n",
            "315529\n",
            "315530\n",
            "315531\n",
            "315532\n",
            "315533\n",
            "315534\n",
            "315535\n",
            "315536\n",
            "315537\n",
            "315538\n",
            "315539\n",
            "315540\n",
            "315541\n",
            "315542\n",
            "315543\n",
            "315544\n",
            "315545\n",
            "315546\n",
            "315547\n",
            "315548\n",
            "315549\n",
            "315550\n",
            "315551\n",
            "315552\n",
            "315553\n",
            "315554\n",
            "315555\n",
            "315556\n",
            "315557\n",
            "315558\n",
            "315559\n",
            "315560\n",
            "315561\n",
            "315562\n",
            "315563\n",
            "315564\n",
            "315565\n",
            "315566\n",
            "315567\n",
            "315568\n",
            "315569\n",
            "315570\n",
            "315571\n",
            "315572\n",
            "315573\n",
            "315574\n",
            "315575\n",
            "315576\n",
            "315577\n",
            "315578\n",
            "315579\n",
            "315580\n",
            "315581\n",
            "315582\n",
            "315583\n",
            "315584\n",
            "315585\n",
            "315586\n",
            "315587\n",
            "315588\n",
            "315589\n",
            "315590\n",
            "315591\n",
            "315592\n",
            "315593\n",
            "315594\n",
            "315595\n",
            "315596\n",
            "315597\n",
            "315598\n",
            "315599\n",
            "315600\n",
            "315601\n",
            "315602\n",
            "315603\n",
            "315604\n",
            "315605\n",
            "315606\n",
            "315607\n",
            "315608\n",
            "315609\n",
            "315610\n",
            "315611\n",
            "315612\n",
            "315613\n",
            "315614\n",
            "315615\n",
            "315616\n",
            "315617\n",
            "315618\n",
            "315619\n",
            "315620\n",
            "315621\n",
            "315622\n",
            "315623\n",
            "315624\n",
            "315625\n",
            "315626\n",
            "315627\n",
            "315628\n",
            "315629\n",
            "315630\n",
            "315631\n",
            "315632\n",
            "315633\n",
            "315634\n",
            "315635\n",
            "315636\n",
            "315637\n",
            "315638\n",
            "315639\n",
            "315640\n",
            "315641\n",
            "315642\n",
            "315643\n",
            "315644\n",
            "315645\n",
            "315646\n",
            "315647\n",
            "315648\n",
            "315649\n",
            "315650\n",
            "315651\n",
            "315652\n",
            "315653\n",
            "315654\n",
            "315655\n",
            "315656\n",
            "315657\n",
            "315658\n",
            "315659\n",
            "315660\n",
            "315661\n",
            "315662\n",
            "315663\n",
            "315664\n",
            "315665\n",
            "315666\n",
            "315667\n",
            "315668\n",
            "315669\n",
            "315670\n",
            "315671\n",
            "315672\n",
            "315673\n",
            "315674\n",
            "315675\n",
            "315676\n",
            "315677\n",
            "315678\n",
            "315679\n",
            "315680\n",
            "315681\n",
            "315682\n",
            "315683\n",
            "315684\n",
            "315685\n",
            "315686\n",
            "315687\n",
            "315688\n",
            "315689\n",
            "315690\n",
            "315691\n",
            "315692\n",
            "315693\n",
            "315694\n",
            "315695\n",
            "315696\n",
            "315697\n",
            "315698\n",
            "315699\n",
            "315700\n",
            "315701\n",
            "315702\n",
            "315703\n",
            "315704\n",
            "315705\n",
            "315706\n",
            "315707\n",
            "315708\n",
            "315709\n",
            "315710\n",
            "315711\n",
            "315712\n",
            "315713\n",
            "315714\n",
            "315715\n",
            "315716\n",
            "315717\n",
            "315718\n",
            "315719\n",
            "315720\n",
            "315721\n",
            "315722\n",
            "315723\n",
            "315724\n",
            "315725\n",
            "315726\n",
            "315727\n",
            "315728\n",
            "315729\n",
            "315730\n",
            "315731\n",
            "315732\n",
            "315733\n",
            "315734\n",
            "315735\n",
            "315736\n",
            "315737\n",
            "315738\n",
            "315739\n",
            "315740\n",
            "315741\n",
            "315742\n",
            "315743\n",
            "315744\n",
            "315745\n",
            "315746\n",
            "315747\n",
            "315748\n",
            "315749\n",
            "315750\n",
            "315751\n",
            "315752\n",
            "315753\n",
            "315754\n",
            "315755\n",
            "315756\n",
            "315757\n",
            "315758\n",
            "315759\n",
            "315760\n",
            "315761\n",
            "315762\n",
            "315763\n",
            "315764\n",
            "315765\n",
            "315766\n",
            "315767\n",
            "315768\n",
            "315769\n",
            "315770\n",
            "315771\n",
            "315772\n",
            "315773\n",
            "315774\n",
            "315775\n",
            "315776\n",
            "315777\n",
            "315778\n",
            "315779\n",
            "315780\n",
            "315781\n",
            "315782\n",
            "315783\n",
            "315784\n",
            "315785\n",
            "315786\n",
            "315787\n",
            "315788\n",
            "315789\n",
            "315790\n",
            "315791\n",
            "315792\n",
            "315793\n",
            "315794\n",
            "315795\n",
            "315796\n",
            "315797\n",
            "315798\n",
            "315799\n",
            "315800\n",
            "315801\n",
            "315802\n",
            "315803\n",
            "315804\n",
            "315805\n",
            "315806\n",
            "315807\n",
            "315808\n",
            "315809\n",
            "315810\n",
            "315811\n",
            "315812\n",
            "315813\n",
            "315814\n",
            "315815\n",
            "315816\n",
            "315817\n",
            "315818\n",
            "315819\n",
            "315820\n",
            "315821\n",
            "315822\n",
            "315823\n",
            "315824\n",
            "315825\n",
            "315826\n",
            "315827\n",
            "315828\n",
            "315829\n",
            "315830\n",
            "315831\n",
            "315832\n",
            "315833\n",
            "315834\n",
            "315835\n",
            "315836\n",
            "315837\n",
            "315838\n",
            "315839\n",
            "315840\n",
            "315841\n",
            "315842\n",
            "315843\n",
            "315844\n",
            "315845\n",
            "315846\n",
            "315847\n",
            "315848\n",
            "315849\n",
            "315850\n",
            "315851\n",
            "315852\n",
            "315853\n",
            "315854\n",
            "315855\n",
            "315856\n",
            "315857\n",
            "315858\n",
            "315859\n",
            "315860\n",
            "315861\n",
            "315862\n",
            "315863\n",
            "315864\n",
            "315865\n",
            "315866\n",
            "315867\n",
            "315868\n",
            "315869\n",
            "315870\n",
            "315871\n",
            "315872\n",
            "315873\n",
            "315874\n",
            "315875\n",
            "315876\n",
            "315877\n",
            "315878\n",
            "315879\n",
            "315880\n",
            "315881\n",
            "315882\n",
            "315883\n",
            "315884\n",
            "315885\n",
            "315886\n",
            "315887\n",
            "315888\n",
            "315889\n",
            "315890\n",
            "315891\n",
            "315892\n",
            "315893\n",
            "315894\n",
            "315895\n",
            "315896\n",
            "315897\n",
            "315898\n",
            "315899\n",
            "315900\n",
            "315901\n",
            "315902\n",
            "315903\n",
            "315904\n",
            "315905\n",
            "315906\n",
            "315907\n",
            "315908\n",
            "315909\n",
            "315910\n",
            "315911\n",
            "315912\n",
            "315913\n",
            "315914\n",
            "315915\n",
            "315916\n",
            "315917\n",
            "315918\n",
            "315919\n",
            "315920\n",
            "315921\n",
            "315922\n",
            "315923\n",
            "315924\n",
            "315925\n",
            "315926\n",
            "315927\n",
            "315928\n",
            "315929\n",
            "315930\n",
            "315931\n",
            "315932\n",
            "315933\n",
            "315934\n",
            "315935\n",
            "315936\n",
            "315937\n",
            "315938\n",
            "315939\n",
            "315940\n",
            "315941\n",
            "315942\n",
            "315943\n",
            "315944\n",
            "315945\n",
            "315946\n",
            "315947\n",
            "315948\n",
            "315949\n",
            "315950\n",
            "315951\n",
            "315952\n",
            "315953\n",
            "315954\n",
            "315955\n",
            "315956\n",
            "315957\n",
            "315958\n",
            "315959\n",
            "315960\n",
            "315961\n",
            "315962\n",
            "315963\n",
            "315964\n",
            "315965\n",
            "315966\n",
            "315967\n",
            "315968\n",
            "315969\n",
            "315970\n",
            "315971\n",
            "315972\n",
            "315973\n",
            "315974\n",
            "315975\n",
            "315976\n",
            "315977\n",
            "315978\n",
            "315979\n",
            "315980\n",
            "315981\n",
            "315982\n",
            "315983\n",
            "315984\n",
            "315985\n",
            "315986\n",
            "315987\n",
            "315988\n",
            "315989\n",
            "315990\n",
            "315991\n",
            "315992\n",
            "315993\n",
            "315994\n",
            "315995\n",
            "315996\n",
            "315997\n",
            "315998\n",
            "315999\n",
            "316000\n",
            "316001\n",
            "316002\n",
            "316003\n",
            "316004\n",
            "316005\n",
            "316006\n",
            "316007\n",
            "316008\n",
            "316009\n",
            "316010\n",
            "316011\n",
            "316012\n",
            "316013\n",
            "316014\n",
            "316015\n",
            "316016\n",
            "316017\n",
            "316018\n",
            "316019\n",
            "316020\n",
            "316021\n",
            "316022\n",
            "316023\n",
            "316024\n",
            "316025\n",
            "316026\n",
            "316027\n",
            "316028\n",
            "316029\n",
            "316030\n",
            "316031\n",
            "316032\n",
            "316033\n",
            "316034\n",
            "316035\n",
            "316036\n",
            "316037\n",
            "316038\n",
            "316039\n",
            "316040\n",
            "316041\n",
            "316042\n",
            "316043\n",
            "316044\n",
            "316045\n",
            "316046\n",
            "316047\n",
            "316048\n",
            "316049\n",
            "316050\n",
            "316051\n",
            "316052\n",
            "316053\n",
            "316054\n",
            "316055\n",
            "316056\n",
            "316057\n",
            "316058\n",
            "316059\n",
            "316060\n",
            "316061\n",
            "316062\n",
            "316063\n",
            "316064\n",
            "316065\n",
            "316066\n",
            "316067\n",
            "316068\n",
            "316069\n",
            "316070\n",
            "316071\n",
            "316072\n",
            "316073\n",
            "316074\n",
            "316075\n",
            "316076\n",
            "316077\n",
            "316078\n",
            "316079\n",
            "316080\n",
            "316081\n",
            "316082\n",
            "316083\n",
            "316084\n",
            "316085\n",
            "316086\n",
            "316087\n",
            "316088\n",
            "316089\n",
            "316090\n",
            "316091\n",
            "316092\n",
            "316093\n",
            "316094\n",
            "316095\n",
            "316096\n",
            "316097\n",
            "316098\n",
            "316099\n",
            "316100\n",
            "316101\n",
            "316102\n",
            "316103\n",
            "316104\n",
            "316105\n",
            "316106\n",
            "316107\n",
            "316108\n",
            "316109\n",
            "316110\n",
            "316111\n",
            "316112\n",
            "316113\n",
            "316114\n",
            "316115\n",
            "316116\n",
            "316117\n",
            "316118\n",
            "316119\n",
            "316120\n",
            "316121\n",
            "316122\n",
            "316123\n",
            "316124\n",
            "316125\n",
            "316126\n",
            "316127\n",
            "316128\n",
            "316129\n",
            "316130\n",
            "316131\n",
            "316132\n",
            "316133\n",
            "316134\n",
            "316135\n",
            "316136\n",
            "316137\n",
            "316138\n",
            "316139\n",
            "316140\n",
            "316141\n",
            "316142\n",
            "316143\n",
            "316144\n",
            "316145\n",
            "316146\n",
            "316147\n",
            "316148\n",
            "316149\n",
            "316150\n",
            "316151\n",
            "316152\n",
            "316153\n",
            "316154\n",
            "316155\n",
            "316156\n",
            "316157\n",
            "316158\n",
            "316159\n",
            "316160\n",
            "316161\n",
            "316162\n",
            "316163\n",
            "316164\n",
            "316165\n",
            "316166\n",
            "316167\n",
            "316168\n",
            "316169\n",
            "316170\n",
            "316171\n",
            "316172\n",
            "316173\n",
            "316174\n",
            "316175\n",
            "316176\n",
            "316177\n",
            "316178\n",
            "316179\n",
            "316180\n",
            "316181\n",
            "316182\n",
            "316183\n",
            "316184\n",
            "316185\n",
            "316186\n",
            "316187\n",
            "316188\n",
            "316189\n",
            "316190\n",
            "316191\n",
            "316192\n",
            "316193\n",
            "316194\n",
            "316195\n",
            "316196\n",
            "316197\n",
            "316198\n",
            "316199\n",
            "316200\n",
            "316201\n",
            "316202\n",
            "316203\n",
            "316204\n",
            "316205\n",
            "316206\n",
            "316207\n",
            "316208\n",
            "316209\n",
            "316210\n",
            "316211\n",
            "316212\n",
            "316213\n",
            "316214\n",
            "316215\n",
            "316216\n",
            "316217\n",
            "316218\n",
            "316219\n",
            "316220\n",
            "316221\n",
            "316222\n",
            "316223\n",
            "316224\n",
            "316225\n",
            "316226\n",
            "316227\n",
            "316228\n",
            "316229\n",
            "316230\n",
            "316231\n",
            "316232\n",
            "316233\n",
            "316234\n",
            "316235\n",
            "316236\n",
            "316237\n",
            "316238\n",
            "316239\n",
            "316240\n",
            "316241\n",
            "316242\n",
            "316243\n",
            "316244\n",
            "316245\n",
            "316246\n",
            "316247\n",
            "316248\n",
            "316249\n",
            "316250\n",
            "316251\n",
            "316252\n",
            "316253\n",
            "316254\n",
            "316255\n",
            "316256\n",
            "316257\n",
            "316258\n",
            "316259\n",
            "316260\n",
            "316261\n",
            "316262\n",
            "316263\n",
            "316264\n",
            "316265\n",
            "316266\n",
            "316267\n",
            "316268\n",
            "316269\n",
            "316270\n",
            "316271\n",
            "316272\n",
            "316273\n",
            "316274\n",
            "316275\n",
            "316276\n",
            "316277\n",
            "316278\n",
            "316279\n",
            "316280\n",
            "316281\n",
            "316282\n",
            "316283\n",
            "316284\n",
            "316285\n",
            "316286\n",
            "316287\n",
            "316288\n",
            "316289\n",
            "316290\n",
            "316291\n",
            "316292\n",
            "316293\n",
            "316294\n",
            "316295\n",
            "316296\n",
            "316297\n",
            "316298\n",
            "316299\n",
            "316300\n",
            "316301\n",
            "316302\n",
            "316303\n",
            "316304\n",
            "316305\n",
            "316306\n",
            "316307\n",
            "316308\n",
            "316309\n",
            "316310\n",
            "316311\n",
            "316312\n",
            "316313\n",
            "316314\n",
            "316315\n",
            "316316\n",
            "316317\n",
            "316318\n",
            "316319\n",
            "316320\n",
            "316321\n",
            "316322\n",
            "316323\n",
            "316324\n",
            "316325\n",
            "316326\n",
            "316327\n",
            "316328\n",
            "316329\n",
            "316330\n",
            "316331\n",
            "316332\n",
            "316333\n",
            "316334\n",
            "316335\n",
            "316336\n",
            "316337\n",
            "316338\n",
            "316339\n",
            "316340\n",
            "316341\n",
            "316342\n",
            "316343\n",
            "316344\n",
            "316345\n",
            "316346\n",
            "316347\n",
            "316348\n",
            "316349\n",
            "316350\n",
            "316351\n",
            "316352\n",
            "316353\n",
            "316354\n",
            "316355\n",
            "316356\n",
            "316357\n",
            "316358\n",
            "316359\n",
            "316360\n",
            "316361\n",
            "316362\n",
            "316363\n",
            "316364\n",
            "316365\n",
            "316366\n",
            "316367\n",
            "316368\n",
            "316369\n",
            "316370\n",
            "316371\n",
            "316372\n",
            "316373\n",
            "316374\n",
            "316375\n",
            "316376\n",
            "316377\n",
            "316378\n",
            "316379\n",
            "316380\n",
            "316381\n",
            "316382\n",
            "316383\n",
            "316384\n",
            "316385\n",
            "316386\n",
            "316387\n",
            "316388\n",
            "316389\n",
            "316390\n",
            "316391\n",
            "316392\n",
            "316393\n",
            "316394\n",
            "316395\n",
            "316396\n",
            "316397\n",
            "316398\n",
            "316399\n",
            "316400\n",
            "316401\n",
            "316402\n",
            "316403\n",
            "316404\n",
            "316405\n",
            "316406\n",
            "316407\n",
            "316408\n",
            "316409\n",
            "316410\n",
            "316411\n",
            "316412\n",
            "316413\n",
            "316414\n",
            "316415\n",
            "316416\n",
            "316417\n",
            "316418\n",
            "316419\n",
            "316420\n",
            "316421\n",
            "316422\n",
            "316423\n",
            "316424\n",
            "316425\n",
            "316426\n",
            "316427\n",
            "316428\n",
            "316429\n",
            "316430\n",
            "316431\n",
            "316432\n",
            "316433\n",
            "316434\n",
            "316435\n",
            "316436\n",
            "316437\n",
            "316438\n",
            "316439\n",
            "316440\n",
            "316441\n",
            "316442\n",
            "316443\n",
            "316444\n",
            "316445\n",
            "316446\n",
            "316447\n",
            "316448\n",
            "316449\n",
            "316450\n",
            "316451\n",
            "316452\n",
            "316453\n",
            "316454\n",
            "316455\n",
            "316456\n",
            "316457\n",
            "316458\n",
            "316459\n",
            "316460\n",
            "316461\n",
            "316462\n",
            "316463\n",
            "316464\n",
            "316465\n",
            "316466\n",
            "316467\n",
            "316468\n",
            "316469\n",
            "316470\n",
            "316471\n",
            "316472\n",
            "316473\n",
            "316474\n",
            "316475\n",
            "316476\n",
            "316477\n",
            "316478\n",
            "316479\n",
            "316480\n",
            "316481\n",
            "316482\n",
            "316483\n",
            "316484\n",
            "316485\n",
            "316486\n",
            "316487\n",
            "316488\n",
            "316489\n",
            "316490\n",
            "316491\n",
            "316492\n",
            "316493\n",
            "316494\n",
            "316495\n",
            "316496\n",
            "316497\n",
            "316498\n",
            "316499\n",
            "316500\n",
            "316501\n",
            "316502\n",
            "316503\n",
            "316504\n",
            "316505\n",
            "316506\n",
            "316507\n",
            "316508\n",
            "316509\n",
            "316510\n",
            "316511\n",
            "316512\n",
            "316513\n",
            "316514\n",
            "316515\n",
            "316516\n",
            "316517\n",
            "316518\n",
            "316519\n",
            "316520\n",
            "316521\n",
            "316522\n",
            "316523\n",
            "316524\n",
            "316525\n",
            "316526\n",
            "316527\n",
            "316528\n",
            "316529\n",
            "316530\n",
            "316531\n",
            "316532\n",
            "316533\n",
            "316534\n",
            "316535\n",
            "316536\n",
            "316537\n",
            "316538\n",
            "316539\n",
            "316540\n",
            "316541\n",
            "316542\n",
            "316543\n",
            "316544\n",
            "316545\n",
            "316546\n",
            "316547\n",
            "316548\n",
            "316549\n",
            "316550\n",
            "316551\n",
            "316552\n",
            "316553\n",
            "316554\n",
            "316555\n",
            "316556\n",
            "316557\n",
            "316558\n",
            "316559\n",
            "316560\n",
            "316561\n",
            "316562\n",
            "316563\n",
            "316564\n",
            "316565\n",
            "316566\n",
            "316567\n",
            "316568\n",
            "316569\n",
            "316570\n",
            "316571\n",
            "316572\n",
            "316573\n",
            "316574\n",
            "316575\n",
            "316576\n",
            "316577\n",
            "316578\n",
            "316579\n",
            "316580\n",
            "316581\n",
            "316582\n",
            "316583\n",
            "316584\n",
            "316585\n",
            "316586\n",
            "316587\n",
            "316588\n",
            "316589\n",
            "316590\n",
            "316591\n",
            "316592\n",
            "316593\n",
            "316594\n",
            "316595\n",
            "316596\n",
            "316597\n",
            "316598\n",
            "316599\n",
            "316600\n",
            "316601\n",
            "316602\n",
            "316603\n",
            "316604\n",
            "316605\n",
            "316606\n",
            "316607\n",
            "316608\n",
            "316609\n",
            "316610\n",
            "316611\n",
            "316612\n",
            "316613\n",
            "316614\n",
            "316615\n",
            "316616\n",
            "316617\n",
            "316618\n",
            "316619\n",
            "316620\n",
            "316621\n",
            "316622\n",
            "316623\n",
            "316624\n",
            "316625\n",
            "316626\n",
            "316627\n",
            "316628\n",
            "316629\n",
            "316630\n",
            "316631\n",
            "316632\n",
            "316633\n",
            "316634\n",
            "316635\n",
            "316636\n",
            "316637\n",
            "316638\n",
            "316639\n",
            "316640\n",
            "316641\n",
            "316642\n",
            "316643\n",
            "316644\n",
            "316645\n",
            "316646\n",
            "316647\n",
            "316648\n",
            "316649\n",
            "316650\n",
            "316651\n",
            "316652\n",
            "316653\n",
            "316654\n",
            "316655\n",
            "316656\n",
            "316657\n",
            "316658\n",
            "316659\n",
            "316660\n",
            "316661\n",
            "316662\n",
            "316663\n",
            "316664\n",
            "316665\n",
            "316666\n",
            "316667\n",
            "316668\n",
            "316669\n",
            "316670\n",
            "316671\n",
            "316672\n",
            "316673\n",
            "316674\n",
            "316675\n",
            "316676\n",
            "316677\n",
            "316678\n",
            "316679\n",
            "316680\n",
            "316681\n",
            "316682\n",
            "316683\n",
            "316684\n",
            "316685\n",
            "316686\n",
            "316687\n",
            "316688\n",
            "316689\n",
            "316690\n",
            "316691\n",
            "316692\n",
            "316693\n",
            "316694\n",
            "316695\n",
            "316696\n",
            "316697\n",
            "316698\n",
            "316699\n",
            "316700\n",
            "316701\n",
            "316702\n",
            "316703\n",
            "316704\n",
            "316705\n",
            "316706\n",
            "316707\n",
            "316708\n",
            "316709\n",
            "316710\n",
            "316711\n",
            "316712\n",
            "316713\n",
            "316714\n",
            "316715\n",
            "316716\n",
            "316717\n",
            "316718\n",
            "316719\n",
            "316720\n",
            "316721\n",
            "316722\n",
            "316723\n",
            "316724\n",
            "316725\n",
            "316726\n",
            "316727\n",
            "316728\n",
            "316729\n",
            "316730\n",
            "316731\n",
            "316732\n",
            "316733\n",
            "316734\n",
            "316735\n",
            "316736\n",
            "316737\n",
            "316738\n",
            "316739\n",
            "316740\n",
            "316741\n",
            "316742\n",
            "316743\n",
            "316744\n",
            "316745\n",
            "316746\n",
            "316747\n",
            "316748\n",
            "316749\n",
            "316750\n",
            "316751\n",
            "316752\n",
            "316753\n",
            "316754\n",
            "316755\n",
            "316756\n",
            "316757\n",
            "316758\n",
            "316759\n",
            "316760\n",
            "316761\n",
            "316762\n",
            "316763\n",
            "316764\n",
            "316765\n",
            "316766\n",
            "316767\n",
            "316768\n",
            "316769\n",
            "316770\n",
            "316771\n",
            "316772\n",
            "316773\n",
            "316774\n",
            "316775\n",
            "316776\n",
            "316777\n",
            "316778\n",
            "316779\n",
            "316780\n",
            "316781\n",
            "316782\n",
            "316783\n",
            "316784\n",
            "316785\n",
            "316786\n",
            "316787\n",
            "316788\n",
            "316789\n",
            "316790\n",
            "316791\n",
            "316792\n",
            "316793\n",
            "316794\n",
            "316795\n",
            "316796\n",
            "316797\n",
            "316798\n",
            "316799\n",
            "316800\n",
            "316801\n",
            "316802\n",
            "316803\n",
            "316804\n",
            "316805\n",
            "316806\n",
            "316807\n",
            "316808\n",
            "316809\n",
            "316810\n",
            "316811\n",
            "316812\n",
            "316813\n",
            "316814\n",
            "316815\n",
            "316816\n",
            "316817\n",
            "316818\n",
            "316819\n",
            "316820\n",
            "316821\n",
            "316822\n",
            "316823\n",
            "316824\n",
            "316825\n",
            "316826\n",
            "316827\n",
            "316828\n",
            "316829\n",
            "316830\n",
            "316831\n",
            "316832\n",
            "316833\n",
            "316834\n",
            "316835\n",
            "316836\n",
            "316837\n",
            "316838\n",
            "316839\n",
            "316840\n",
            "316841\n",
            "316842\n",
            "316843\n",
            "316844\n",
            "316845\n",
            "316846\n",
            "316847\n",
            "316848\n",
            "316849\n",
            "316850\n",
            "316851\n",
            "316852\n",
            "316853\n",
            "316854\n",
            "316855\n",
            "316856\n",
            "316857\n",
            "316858\n",
            "316859\n",
            "316860\n",
            "316861\n",
            "316862\n",
            "316863\n",
            "316864\n",
            "316865\n",
            "316866\n",
            "316867\n",
            "316868\n",
            "316869\n",
            "316870\n",
            "316871\n",
            "316872\n",
            "316873\n",
            "316874\n",
            "316875\n",
            "316876\n",
            "316877\n",
            "316878\n",
            "316879\n",
            "316880\n",
            "316881\n",
            "316882\n",
            "316883\n",
            "316884\n",
            "316885\n",
            "316886\n",
            "316887\n",
            "316888\n",
            "316889\n",
            "316890\n",
            "316891\n",
            "316892\n",
            "316893\n",
            "316894\n",
            "316895\n",
            "316896\n",
            "316897\n",
            "316898\n",
            "316899\n",
            "316900\n",
            "316901\n",
            "316902\n",
            "316903\n",
            "316904\n",
            "316905\n",
            "316906\n",
            "316907\n",
            "316908\n",
            "316909\n",
            "316910\n",
            "316911\n",
            "316912\n",
            "316913\n",
            "316914\n",
            "316915\n",
            "316916\n",
            "316917\n",
            "316918\n",
            "316919\n",
            "316920\n",
            "316921\n",
            "316922\n",
            "316923\n",
            "316924\n",
            "316925\n",
            "316926\n",
            "316927\n",
            "316928\n",
            "316929\n",
            "316930\n",
            "316931\n",
            "316932\n",
            "316933\n",
            "316934\n",
            "316935\n",
            "316936\n",
            "316937\n",
            "316938\n",
            "316939\n",
            "316940\n",
            "316941\n",
            "316942\n",
            "316943\n",
            "316944\n",
            "316945\n",
            "316946\n",
            "316947\n",
            "316948\n",
            "316949\n",
            "316950\n",
            "316951\n",
            "316952\n",
            "316953\n",
            "316954\n",
            "316955\n",
            "316956\n",
            "316957\n",
            "316958\n",
            "316959\n",
            "316960\n",
            "316961\n",
            "316962\n",
            "316963\n",
            "316964\n",
            "316965\n",
            "316966\n",
            "316967\n",
            "316968\n",
            "316969\n",
            "316970\n",
            "316971\n",
            "316972\n",
            "316973\n",
            "316974\n",
            "316975\n",
            "316976\n",
            "316977\n",
            "316978\n",
            "316979\n",
            "316980\n",
            "316981\n",
            "316982\n",
            "316983\n",
            "316984\n",
            "316985\n",
            "316986\n",
            "316987\n",
            "316988\n",
            "316989\n",
            "316990\n",
            "316991\n",
            "316992\n",
            "316993\n",
            "316994\n",
            "316995\n",
            "316996\n",
            "316997\n",
            "316998\n",
            "316999\n",
            "317000\n",
            "317001\n",
            "317002\n",
            "317003\n",
            "317004\n",
            "317005\n",
            "317006\n",
            "317007\n",
            "317008\n",
            "317009\n",
            "317010\n",
            "317011\n",
            "317012\n",
            "317013\n",
            "317014\n",
            "317015\n",
            "317016\n",
            "317017\n",
            "317018\n",
            "317019\n",
            "317020\n",
            "317021\n",
            "317022\n",
            "317023\n",
            "317024\n",
            "317025\n",
            "317026\n",
            "317027\n",
            "317028\n",
            "317029\n",
            "317030\n",
            "317031\n",
            "317032\n",
            "317033\n",
            "317034\n",
            "317035\n",
            "317036\n",
            "317037\n",
            "317038\n",
            "317039\n",
            "317040\n",
            "317041\n",
            "317042\n",
            "317043\n",
            "317044\n",
            "317045\n",
            "317046\n",
            "317047\n",
            "317048\n",
            "317049\n",
            "317050\n",
            "317051\n",
            "317052\n",
            "317053\n",
            "317054\n",
            "317055\n",
            "317056\n",
            "317057\n",
            "317058\n",
            "317059\n",
            "317060\n",
            "317061\n",
            "317062\n",
            "317063\n",
            "317064\n",
            "317065\n",
            "317066\n",
            "317067\n",
            "317068\n",
            "317069\n",
            "317070\n",
            "317071\n",
            "317072\n",
            "317073\n",
            "317074\n",
            "317075\n",
            "317076\n",
            "317077\n",
            "317078\n",
            "317079\n",
            "317080\n",
            "317081\n",
            "317082\n",
            "317083\n",
            "317084\n",
            "317085\n",
            "317086\n",
            "317087\n",
            "317088\n",
            "317089\n",
            "317090\n",
            "317091\n",
            "317092\n",
            "317093\n",
            "317094\n",
            "317095\n",
            "317096\n",
            "317097\n",
            "317098\n",
            "317099\n",
            "317100\n",
            "317101\n",
            "317102\n",
            "317103\n",
            "317104\n",
            "317105\n",
            "317106\n",
            "317107\n",
            "317108\n",
            "317109\n",
            "317110\n",
            "317111\n",
            "317112\n",
            "317113\n",
            "317114\n",
            "317115\n",
            "317116\n",
            "317117\n",
            "317118\n",
            "317119\n",
            "317120\n",
            "317121\n",
            "317122\n",
            "317123\n",
            "317124\n",
            "317125\n",
            "317126\n",
            "317127\n",
            "317128\n",
            "317129\n",
            "317130\n",
            "317131\n",
            "317132\n",
            "317133\n",
            "317134\n",
            "317135\n",
            "317136\n",
            "317137\n",
            "317138\n",
            "317139\n",
            "317140\n",
            "317141\n",
            "317142\n",
            "317143\n",
            "317144\n",
            "317145\n",
            "317146\n",
            "317147\n",
            "317148\n",
            "317149\n",
            "317150\n",
            "317151\n",
            "317152\n",
            "317153\n",
            "317154\n",
            "317155\n",
            "317156\n",
            "317157\n",
            "317158\n",
            "317159\n",
            "317160\n",
            "317161\n",
            "317162\n",
            "317163\n",
            "317164\n",
            "317165\n",
            "317166\n",
            "317167\n",
            "317168\n",
            "317169\n",
            "317170\n",
            "317171\n",
            "317172\n",
            "317173\n",
            "317174\n",
            "317175\n",
            "317176\n",
            "317177\n",
            "317178\n",
            "317179\n",
            "317180\n",
            "317181\n",
            "317182\n",
            "317183\n",
            "317184\n",
            "317185\n",
            "317186\n",
            "317187\n",
            "317188\n",
            "317189\n",
            "317190\n",
            "317191\n",
            "317192\n",
            "317193\n",
            "317194\n",
            "317195\n",
            "317196\n",
            "317197\n",
            "317198\n",
            "317199\n",
            "317200\n",
            "317201\n",
            "317202\n",
            "317203\n",
            "317204\n",
            "317205\n",
            "317206\n",
            "317207\n",
            "317208\n",
            "317209\n",
            "317210\n",
            "317211\n",
            "317212\n",
            "317213\n",
            "317214\n",
            "317215\n",
            "317216\n",
            "317217\n",
            "317218\n",
            "317219\n",
            "317220\n",
            "317221\n",
            "317222\n",
            "317223\n",
            "317224\n",
            "317225\n",
            "317226\n",
            "317227\n",
            "317228\n",
            "317229\n",
            "317230\n",
            "317231\n",
            "317232\n",
            "317233\n",
            "317234\n",
            "317235\n",
            "317236\n",
            "317237\n",
            "317238\n",
            "317239\n",
            "317240\n",
            "317241\n",
            "317242\n",
            "317243\n",
            "317244\n",
            "317245\n",
            "317246\n",
            "317247\n",
            "317248\n",
            "317249\n",
            "317250\n",
            "317251\n",
            "317252\n",
            "317253\n",
            "317254\n",
            "317255\n",
            "317256\n",
            "317257\n",
            "317258\n",
            "317259\n",
            "317260\n",
            "317261\n",
            "317262\n",
            "317263\n",
            "317264\n",
            "317265\n",
            "317266\n",
            "317267\n",
            "317268\n",
            "317269\n",
            "317270\n",
            "317271\n",
            "317272\n",
            "317273\n",
            "317274\n",
            "317275\n",
            "317276\n",
            "317277\n",
            "317278\n",
            "317279\n",
            "317280\n",
            "317281\n",
            "317282\n",
            "317283\n",
            "317284\n",
            "317285\n",
            "317286\n",
            "317287\n",
            "317288\n",
            "317289\n",
            "317290\n",
            "317291\n",
            "317292\n",
            "317293\n",
            "317294\n",
            "317295\n",
            "317296\n",
            "317297\n",
            "317298\n",
            "317299\n",
            "317300\n",
            "317301\n",
            "317302\n",
            "317303\n",
            "317304\n",
            "317305\n",
            "317306\n",
            "317307\n",
            "317308\n",
            "317309\n",
            "317310\n",
            "317311\n",
            "317312\n",
            "317313\n",
            "317314\n",
            "317315\n",
            "317316\n",
            "317317\n",
            "317318\n",
            "317319\n",
            "317320\n",
            "317321\n",
            "317322\n",
            "317323\n",
            "317324\n",
            "317325\n",
            "317326\n",
            "317327\n",
            "317328\n",
            "317329\n",
            "317330\n",
            "317331\n",
            "317332\n",
            "317333\n",
            "317334\n",
            "317335\n",
            "317336\n",
            "317337\n",
            "317338\n",
            "317339\n",
            "317340\n",
            "317341\n",
            "317342\n",
            "317343\n",
            "317344\n",
            "317345\n",
            "317346\n",
            "317347\n",
            "317348\n",
            "317349\n",
            "317350\n",
            "317351\n",
            "317352\n",
            "317353\n",
            "317354\n",
            "317355\n",
            "317356\n",
            "317357\n",
            "317358\n",
            "317359\n",
            "317360\n",
            "317361\n",
            "317362\n",
            "317363\n",
            "317364\n",
            "317365\n",
            "317366\n",
            "317367\n",
            "317368\n",
            "317369\n",
            "317370\n",
            "317371\n",
            "317372\n",
            "317373\n",
            "317374\n",
            "317375\n",
            "317376\n",
            "317377\n",
            "317378\n",
            "317379\n",
            "317380\n",
            "317381\n",
            "317382\n",
            "317383\n",
            "317384\n",
            "317385\n",
            "317386\n",
            "317387\n",
            "317388\n",
            "317389\n",
            "317390\n",
            "317391\n",
            "317392\n",
            "317393\n",
            "317394\n",
            "317395\n",
            "317396\n",
            "317397\n",
            "317398\n",
            "317399\n",
            "317400\n",
            "317401\n",
            "317402\n",
            "317403\n",
            "317404\n",
            "317405\n",
            "317406\n",
            "317407\n",
            "317408\n",
            "317409\n",
            "317410\n",
            "317411\n",
            "317412\n",
            "317413\n",
            "317414\n",
            "317415\n",
            "317416\n",
            "317417\n",
            "317418\n",
            "317419\n",
            "317420\n",
            "317421\n",
            "317422\n",
            "317423\n",
            "317424\n",
            "317425\n",
            "317426\n",
            "317427\n",
            "317428\n",
            "317429\n",
            "317430\n",
            "317431\n",
            "317432\n",
            "317433\n",
            "317434\n",
            "317435\n",
            "317436\n",
            "317437\n",
            "317438\n",
            "317439\n",
            "317440\n",
            "317441\n",
            "317442\n",
            "317443\n",
            "317444\n",
            "317445\n",
            "317446\n",
            "317447\n",
            "317448\n",
            "317449\n",
            "317450\n",
            "317451\n",
            "317452\n",
            "317453\n",
            "317454\n",
            "317455\n",
            "317456\n",
            "317457\n",
            "317458\n",
            "317459\n",
            "317460\n",
            "317461\n",
            "317462\n",
            "317463\n",
            "317464\n",
            "317465\n",
            "317466\n",
            "317467\n",
            "317468\n",
            "317469\n",
            "317470\n",
            "317471\n",
            "317472\n",
            "317473\n",
            "317474\n",
            "317475\n",
            "317476\n",
            "317477\n",
            "317478\n",
            "317479\n",
            "317480\n",
            "317481\n",
            "317482\n",
            "317483\n",
            "317484\n",
            "317485\n",
            "317486\n",
            "317487\n",
            "317488\n",
            "317489\n",
            "317490\n",
            "317491\n",
            "317492\n",
            "317493\n",
            "317494\n",
            "317495\n",
            "317496\n",
            "317497\n",
            "317498\n",
            "317499\n",
            "317500\n",
            "317501\n",
            "317502\n",
            "317503\n",
            "317504\n",
            "317505\n",
            "317506\n",
            "317507\n",
            "317508\n",
            "317509\n",
            "317510\n",
            "317511\n",
            "317512\n",
            "317513\n",
            "317514\n",
            "317515\n",
            "317516\n",
            "317517\n",
            "317518\n",
            "317519\n",
            "317520\n",
            "317521\n",
            "317522\n",
            "317523\n",
            "317524\n",
            "317525\n",
            "317526\n",
            "317527\n",
            "317528\n",
            "317529\n",
            "317530\n",
            "317531\n",
            "317532\n",
            "317533\n",
            "317534\n",
            "317535\n",
            "317536\n",
            "317537\n",
            "317538\n",
            "317539\n",
            "317540\n",
            "317541\n",
            "317542\n",
            "317543\n",
            "317544\n",
            "317545\n",
            "317546\n",
            "317547\n",
            "317548\n",
            "317549\n",
            "317550\n",
            "317551\n",
            "317552\n",
            "317553\n",
            "317554\n",
            "317555\n",
            "317556\n",
            "317557\n",
            "317558\n",
            "317559\n",
            "317560\n",
            "317561\n",
            "317562\n",
            "317563\n",
            "317564\n",
            "317565\n",
            "317566\n",
            "317567\n",
            "317568\n",
            "317569\n",
            "317570\n",
            "317571\n",
            "317572\n",
            "317573\n",
            "317574\n",
            "317575\n",
            "317576\n",
            "317577\n",
            "317578\n",
            "317579\n",
            "317580\n",
            "317581\n",
            "317582\n",
            "317583\n",
            "317584\n",
            "317585\n",
            "317586\n",
            "317587\n",
            "317588\n",
            "317589\n",
            "317590\n",
            "317591\n",
            "317592\n",
            "317593\n",
            "317594\n",
            "317595\n",
            "317596\n",
            "317597\n",
            "317598\n",
            "317599\n",
            "317600\n",
            "317601\n",
            "317602\n",
            "317603\n",
            "317604\n",
            "317605\n",
            "317606\n",
            "317607\n",
            "317608\n",
            "317609\n",
            "317610\n",
            "317611\n",
            "317612\n",
            "317613\n",
            "317614\n",
            "317615\n",
            "317616\n",
            "317617\n",
            "317618\n",
            "317619\n",
            "317620\n",
            "317621\n",
            "317622\n",
            "317623\n",
            "317624\n",
            "317625\n",
            "317626\n",
            "317627\n",
            "317628\n",
            "317629\n",
            "317630\n",
            "317631\n",
            "317632\n",
            "317633\n",
            "317634\n",
            "317635\n",
            "317636\n",
            "317637\n",
            "317638\n",
            "317639\n",
            "317640\n",
            "317641\n",
            "317642\n",
            "317643\n",
            "317644\n",
            "317645\n",
            "317646\n",
            "317647\n",
            "317648\n",
            "317649\n",
            "317650\n",
            "317651\n",
            "317652\n",
            "317653\n",
            "317654\n",
            "317655\n",
            "317656\n",
            "317657\n",
            "317658\n",
            "317659\n",
            "317660\n",
            "317661\n",
            "317662\n",
            "317663\n",
            "317664\n",
            "317665\n",
            "317666\n",
            "317667\n",
            "317668\n",
            "317669\n",
            "317670\n",
            "317671\n",
            "317672\n",
            "317673\n",
            "317674\n",
            "317675\n",
            "317676\n",
            "317677\n",
            "317678\n",
            "317679\n",
            "317680\n",
            "317681\n",
            "317682\n",
            "317683\n",
            "317684\n",
            "317685\n",
            "317686\n",
            "317687\n",
            "317688\n",
            "317689\n",
            "317690\n",
            "317691\n",
            "317692\n",
            "317693\n",
            "317694\n",
            "317695\n",
            "317696\n",
            "317697\n",
            "317698\n",
            "317699\n",
            "317700\n",
            "317701\n",
            "317702\n",
            "317703\n",
            "317704\n",
            "317705\n",
            "317706\n",
            "317707\n",
            "317708\n",
            "317709\n",
            "317710\n",
            "317711\n",
            "317712\n",
            "317713\n",
            "317714\n",
            "317715\n",
            "317716\n",
            "317717\n",
            "317718\n",
            "317719\n",
            "317720\n",
            "317721\n",
            "317722\n",
            "317723\n",
            "317724\n",
            "317725\n",
            "317726\n",
            "317727\n",
            "317728\n",
            "317729\n",
            "317730\n",
            "317731\n",
            "317732\n",
            "317733\n",
            "317734\n",
            "317735\n",
            "317736\n",
            "317737\n",
            "317738\n",
            "317739\n",
            "317740\n",
            "317741\n",
            "317742\n",
            "317743\n",
            "317744\n",
            "317745\n",
            "317746\n",
            "317747\n",
            "317748\n",
            "317749\n",
            "317750\n",
            "317751\n",
            "317752\n",
            "317753\n",
            "317754\n",
            "317755\n",
            "317756\n",
            "317757\n",
            "317758\n",
            "317759\n",
            "317760\n",
            "317761\n",
            "317762\n",
            "317763\n",
            "317764\n",
            "317765\n",
            "317766\n",
            "317767\n",
            "317768\n",
            "317769\n",
            "317770\n",
            "317771\n",
            "317772\n",
            "317773\n",
            "317774\n",
            "317775\n",
            "317776\n",
            "317777\n",
            "317778\n",
            "317779\n",
            "317780\n",
            "317781\n",
            "317782\n",
            "317783\n",
            "317784\n",
            "317785\n",
            "317786\n",
            "317787\n",
            "317788\n",
            "317789\n",
            "317790\n",
            "317791\n",
            "317792\n",
            "317793\n",
            "317794\n",
            "317795\n",
            "317796\n",
            "317797\n",
            "317798\n",
            "317799\n",
            "317800\n",
            "317801\n",
            "317802\n",
            "317803\n",
            "317804\n",
            "317805\n",
            "317806\n",
            "317807\n",
            "317808\n",
            "317809\n",
            "317810\n",
            "317811\n",
            "317812\n",
            "317813\n",
            "317814\n",
            "317815\n",
            "317816\n",
            "317817\n",
            "317818\n",
            "317819\n",
            "317820\n",
            "317821\n",
            "317822\n",
            "317823\n",
            "317824\n",
            "317825\n",
            "317826\n",
            "317827\n",
            "317828\n",
            "317829\n",
            "317830\n",
            "317831\n",
            "317832\n",
            "317833\n",
            "317834\n",
            "317835\n",
            "317836\n",
            "317837\n",
            "317838\n",
            "317839\n",
            "317840\n",
            "317841\n",
            "317842\n",
            "317843\n",
            "317844\n",
            "317845\n",
            "317846\n",
            "317847\n",
            "317848\n",
            "317849\n",
            "317850\n",
            "317851\n",
            "317852\n",
            "317853\n",
            "317854\n",
            "317855\n",
            "317856\n",
            "317857\n",
            "317858\n",
            "317859\n",
            "317860\n",
            "317861\n",
            "317862\n",
            "317863\n",
            "317864\n",
            "317865\n",
            "317866\n",
            "317867\n",
            "317868\n",
            "317869\n",
            "317870\n",
            "317871\n",
            "317872\n",
            "317873\n",
            "317874\n",
            "317875\n",
            "317876\n",
            "317877\n",
            "317878\n",
            "317879\n",
            "317880\n",
            "317881\n",
            "317882\n",
            "317883\n",
            "317884\n",
            "317885\n",
            "317886\n",
            "317887\n",
            "317888\n",
            "317889\n",
            "317890\n",
            "317891\n",
            "317892\n",
            "317893\n",
            "317894\n",
            "317895\n",
            "317896\n",
            "317897\n",
            "317898\n",
            "317899\n",
            "317900\n",
            "317901\n",
            "317902\n",
            "317903\n",
            "317904\n",
            "317905\n",
            "317906\n",
            "317907\n",
            "317908\n",
            "317909\n",
            "317910\n",
            "317911\n",
            "317912\n",
            "317913\n",
            "317914\n",
            "317915\n",
            "317916\n",
            "317917\n",
            "317918\n",
            "317919\n",
            "317920\n",
            "317921\n",
            "317922\n",
            "317923\n",
            "317924\n",
            "317925\n",
            "317926\n",
            "317927\n",
            "317928\n",
            "317929\n",
            "317930\n",
            "317931\n",
            "317932\n",
            "317933\n",
            "317934\n",
            "317935\n",
            "317936\n",
            "317937\n",
            "317938\n",
            "317939\n",
            "317940\n",
            "317941\n",
            "317942\n",
            "317943\n",
            "317944\n",
            "317945\n",
            "317946\n",
            "317947\n",
            "317948\n",
            "317949\n",
            "317950\n",
            "317951\n",
            "317952\n",
            "317953\n",
            "317954\n",
            "317955\n",
            "317956\n",
            "317957\n",
            "317958\n",
            "317959\n",
            "317960\n",
            "317961\n",
            "317962\n",
            "317963\n",
            "317964\n",
            "317965\n",
            "317966\n",
            "317967\n",
            "317968\n",
            "317969\n",
            "317970\n",
            "317971\n",
            "317972\n",
            "317973\n",
            "317974\n",
            "317975\n",
            "317976\n",
            "317977\n",
            "317978\n",
            "317979\n",
            "317980\n",
            "317981\n",
            "317982\n",
            "317983\n",
            "317984\n",
            "317985\n",
            "317986\n",
            "317987\n",
            "317988\n",
            "317989\n",
            "317990\n",
            "317991\n",
            "317992\n",
            "317993\n",
            "317994\n",
            "317995\n",
            "317996\n",
            "317997\n",
            "317998\n",
            "317999\n",
            "318000\n",
            "318001\n",
            "318002\n",
            "318003\n",
            "318004\n",
            "318005\n",
            "318006\n",
            "318007\n",
            "318008\n",
            "318009\n",
            "318010\n",
            "318011\n",
            "318012\n",
            "318013\n",
            "318014\n",
            "318015\n",
            "318016\n",
            "318017\n",
            "318018\n",
            "318019\n",
            "318020\n",
            "318021\n",
            "318022\n",
            "318023\n",
            "318024\n",
            "318025\n",
            "318026\n",
            "318027\n",
            "318028\n",
            "318029\n",
            "318030\n",
            "318031\n",
            "318032\n",
            "318033\n",
            "318034\n",
            "318035\n",
            "318036\n",
            "318037\n",
            "318038\n",
            "318039\n",
            "318040\n",
            "318041\n",
            "318042\n",
            "318043\n",
            "318044\n",
            "318045\n",
            "318046\n",
            "318047\n",
            "318048\n",
            "318049\n",
            "318050\n",
            "318051\n",
            "318052\n",
            "318053\n",
            "318054\n",
            "318055\n",
            "318056\n",
            "318057\n",
            "318058\n",
            "318059\n",
            "318060\n",
            "318061\n",
            "318062\n",
            "318063\n",
            "318064\n",
            "318065\n",
            "318066\n",
            "318067\n",
            "318068\n",
            "318069\n",
            "318070\n",
            "318071\n",
            "318072\n",
            "318073\n",
            "318074\n",
            "318075\n",
            "318076\n",
            "318077\n",
            "318078\n",
            "318079\n",
            "318080\n",
            "318081\n",
            "318082\n",
            "318083\n",
            "318084\n",
            "318085\n",
            "318086\n",
            "318087\n",
            "318088\n",
            "318089\n",
            "318090\n",
            "318091\n",
            "318092\n",
            "318093\n",
            "318094\n",
            "318095\n",
            "318096\n",
            "318097\n",
            "318098\n",
            "318099\n",
            "318100\n",
            "318101\n",
            "318102\n",
            "318103\n",
            "318104\n",
            "318105\n",
            "318106\n",
            "318107\n",
            "318108\n",
            "318109\n",
            "318110\n",
            "318111\n",
            "318112\n",
            "318113\n",
            "318114\n",
            "318115\n",
            "318116\n",
            "318117\n",
            "318118\n",
            "318119\n",
            "318120\n",
            "318121\n",
            "318122\n",
            "318123\n",
            "318124\n",
            "318125\n",
            "318126\n",
            "318127\n",
            "318128\n",
            "318129\n",
            "318130\n",
            "318131\n",
            "318132\n",
            "318133\n",
            "318134\n",
            "318135\n",
            "318136\n",
            "318137\n",
            "318138\n",
            "318139\n",
            "318140\n",
            "318141\n",
            "318142\n",
            "318143\n",
            "318144\n",
            "318145\n",
            "318146\n",
            "318147\n",
            "318148\n",
            "318149\n",
            "318150\n",
            "318151\n",
            "318152\n",
            "318153\n",
            "318154\n",
            "318155\n",
            "318156\n",
            "318157\n",
            "318158\n",
            "318159\n",
            "318160"
          ],
          "name": "stdout"
        },
        {
          "output_type": "error",
          "ename": "KeyboardInterrupt",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-258-31c2b026dab7>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mcountdown\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m3\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;32m<ipython-input-257-29a1ab329425>\u001b[0m in \u001b[0;36mcountdown\u001b[0;34m(n)\u001b[0m\n\u001b[1;32m      2\u001b[0m     \u001b[0mcurrent_value\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mn\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m     \u001b[0;32mwhile\u001b[0m \u001b[0mcurrent_value\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m:\u001b[0m  \u001b[0;31m# The condition (current_value > 0) is checked before every instance of the scope!\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m       \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcurrent_value\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      5\u001b[0m       \u001b[0mcurrent_value\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcurrent_value\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m     \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Blastoff!\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/ipykernel/iostream.py\u001b[0m in \u001b[0;36mwrite\u001b[0;34m(self, string)\u001b[0m\n\u001b[1;32m    398\u001b[0m             \u001b[0mis_child\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0;32mnot\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_is_master_process\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    399\u001b[0m             \u001b[0;31m# only touch the buffer in the IO thread to avoid races\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 400\u001b[0;31m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpub_thread\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mschedule\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;32mlambda\u001b[0m \u001b[0;34m:\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_buffer\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwrite\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mstring\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    401\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mis_child\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    402\u001b[0m                 \u001b[0;31m# newlines imply flush in subprocesses\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/ipykernel/iostream.py\u001b[0m in \u001b[0;36mschedule\u001b[0;34m(self, f)\u001b[0m\n\u001b[1;32m    201\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_events\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    202\u001b[0m             \u001b[0;31m# wake event thread (message content is ignored)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 203\u001b[0;31m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_event_pipe\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mb''\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    204\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    205\u001b[0m             \u001b[0mf\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/zmq/sugar/socket.py\u001b[0m in \u001b[0;36msend\u001b[0;34m(self, data, flags, copy, track, routing_id, group)\u001b[0m\n\u001b[1;32m    503\u001b[0m                 )\n\u001b[1;32m    504\u001b[0m             \u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgroup\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgroup\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 505\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0msuper\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mSocket\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mflags\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mflags\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtrack\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mtrack\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    506\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    507\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0msend_multipart\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmsg_parts\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mflags\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtrack\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32mzmq/backend/cython/socket.pyx\u001b[0m in \u001b[0;36mzmq.backend.cython.socket.Socket.send\u001b[0;34m()\u001b[0m\n",
            "\u001b[0;32mzmq/backend/cython/socket.pyx\u001b[0m in \u001b[0;36mzmq.backend.cython.socket.Socket.send\u001b[0;34m()\u001b[0m\n",
            "\u001b[0;32mzmq/backend/cython/socket.pyx\u001b[0m in \u001b[0;36mzmq.backend.cython.socket._send_copy\u001b[0;34m()\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/zmq/backend/cython/checkrc.pxd\u001b[0m in \u001b[0;36mzmq.backend.cython.checkrc._check_rc\u001b[0;34m()\u001b[0m\n",
            "\u001b[0;31mKeyboardInterrupt\u001b[0m: "
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "7qfo2YKSuXdw"
      },
      "source": [
        "### The Euclidean algorithm with a while loop"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "collapsed": true,
        "id": "_zC7y26QuXdw"
      },
      "source": [
        "The **Euclidean Algorithm** is a process of repeated division with remainder.  Beginning with two integers `a` (dividend) and `b` (divisor), one computes quotient `q` and remainder `q` to express `a = qb + r`.  Then `b` becomes the dividend and `r` becomes the divisor, and one repeats.  The repetition continues, and the **last nonzero** remainder is the greatest common divisor of `a` and `b`."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "D7v0mXjmuXdw"
      },
      "source": [
        "We implement the Euclidean algorithm in a few variations.  The first will be a verbose version, to show the user what happens at every step.  We use a while loop to take care of the repetition."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "pdc1E8U0uXdw"
      },
      "source": [
        "def Euclidean_algorithm(a,b):\n",
        "    dividend = a\n",
        "    divisor = b\n",
        "    while divisor != 0:   # Recall that != means \"is not equal to\".\n",
        "        quotient = dividend // divisor\n",
        "        remainder = dividend % divisor\n",
        "        print(\"{} = {} ({}) + {}\".format(dividend, quotient, divisor, remainder))\n",
        "        dividend = divisor\n",
        "        divisor = remainder"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "N1atLqX-uXdw",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "e347d4e0-1bae-4019-a8ef-09b37ac8013e"
      },
      "source": [
        "Euclidean_algorithm(133, 58)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "133 = 2 (58) + 17\n",
            "58 = 3 (17) + 7\n",
            "17 = 2 (7) + 3\n",
            "7 = 2 (3) + 1\n",
            "3 = 3 (1) + 0\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2Ha1idXQuXdw",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "5842c9a1-41f6-4eb5-990a-8febbb1feadd"
      },
      "source": [
        "Euclidean_algorithm(1312331323, 58123123)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "1312331323 = 22 (58123123) + 33622617\n",
            "58123123 = 1 (33622617) + 24500506\n",
            "33622617 = 1 (24500506) + 9122111\n",
            "24500506 = 2 (9122111) + 6256284\n",
            "9122111 = 1 (6256284) + 2865827\n",
            "6256284 = 2 (2865827) + 524630\n",
            "2865827 = 5 (524630) + 242677\n",
            "524630 = 2 (242677) + 39276\n",
            "242677 = 6 (39276) + 7021\n",
            "39276 = 5 (7021) + 4171\n",
            "7021 = 1 (4171) + 2850\n",
            "4171 = 1 (2850) + 1321\n",
            "2850 = 2 (1321) + 208\n",
            "1321 = 6 (208) + 73\n",
            "208 = 2 (73) + 62\n",
            "73 = 1 (62) + 11\n",
            "62 = 5 (11) + 7\n",
            "11 = 1 (7) + 4\n",
            "7 = 1 (4) + 3\n",
            "4 = 1 (3) + 1\n",
            "3 = 3 (1) + 0\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "rMeCKV5OuXdx"
      },
      "source": [
        "This is excellent if we want to know every step of the Euclidean algorithm.  If we just want to know the GCD of two numbers, we can be less verbose.  We carefully return the last nonzero remainder after the while loop is concluded.  This last nonzero remainder becomes the divisor when the remainder becomes zero, and then it would become the dividend in the next (unprinted) line.  That is why we return the (absolute value) of the dividend after the loop is concluded.  You might insert a line at the end of the loop, like `print(dividend, divisor, remainder)` to help you track the variables."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "vCVQMG-puXdx"
      },
      "source": [
        "def GCD(a,b):\n",
        "    dividend = a # The first dividend is a.\n",
        "    divisor = b # The first divisor is b.\n",
        "    while divisor != 0:   # Recall that != means \"not equal to\".\n",
        "        quotient = dividend // divisor\n",
        "        remainder = dividend % divisor\n",
        "        dividend = divisor\n",
        "        divisor = remainder\n",
        "    return abs(dividend)  #  abs() is used, since we like our GCDs to be positive."
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "9APX4vd1uXdx"
      },
      "source": [
        "Note that the `return dividend` statement occurs *after* the scope of the while loop.  So as soon as the *divisor* variable equals zero, the funtion `GCD` returns the *dividend* variable and terminates."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "3O3UOceWuXdx",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "b63b5afa-d4ad-48f4-a4a4-01630d27d214"
      },
      "source": [
        "GCD(111,27)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "3"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 50
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "trzxn7cvuXdx",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "871b9dee-6669-4601-ca3f-e04c87ce39d1"
      },
      "source": [
        "GCD(111,-27)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "3"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 51
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "8GZtAYjquXdx"
      },
      "source": [
        "We can refine our code in a few ways.  First, note that the `quotient` variable is never used!  It was nice in the verbose version of the Euclidean algorithm, but plays no role in finding the GCD.  Our refined code reads\n",
        "```python\n",
        "def GCD(a,b):\n",
        "    dividend = a  \n",
        "    divisor = b  \n",
        "    while divisor != 0:   # Recall that != means \"not equal to\".\n",
        "        remainder = dividend % divisor\n",
        "        dividend = divisor  \n",
        "        divisor = remainder\n",
        "    return abs(dividend)\n",
        "```"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "RCY3VVVquXdx"
      },
      "source": [
        "Now there are two slick Python tricks we can use to shorten the code.  The first is called **multiple assignment**.  It is possible to set the values of two variables in a single line of code, with a syntax like below."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "xShE8MpPuXdx"
      },
      "source": [
        "x,y = 2,3  # Sets x to 2 and y to 3."
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "0nDSIXkluXdx"
      },
      "source": [
        "This is particular useful for self-referential assignments, because as for ordinary assignment, the right side is evaluated first and then bound to the variables on the left side.  For example, after the line above, try the line below.  Use print statements to see what the values of the variables are afterwards!"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "_hrHKCYUuXdx"
      },
      "source": [
        "x,y = y,x #  Guess what this does!"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "mi80uo4uuXdx",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "572726bf-feee-4926-b6a1-f22b263a625e"
      },
      "source": [
        "print(\"x =\",x) # One could use \"x = {}\".format(x) too.\n",
        "print(\"y =\",y)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "x = 2\n",
            "y = 3\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Bl5eHRoYuXdy"
      },
      "source": [
        "Now we can use multiple assignment to turn three lines of code into one line of code.  For the `remainder` variable is only used temporarily before its value is given to the `divisor` variable.  Using multiple assignment, the three lines\n",
        "```python\n",
        "    remainder = dividend % divisor\n",
        "    dividend = divisor  \n",
        "    divisor = remainder\n",
        "```\n",
        "can be written in one line,\n",
        "```python\n",
        "    dividend, divisor = divisor, dividend % divisor # Evaluations on the right occur before any assignments!\n",
        "```"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "CFUjeCixuXdy"
      },
      "source": [
        "Our newly shortened GCD function looks like this.\n",
        "```python\n",
        "def GCD(a,b):\n",
        "    dividend = a  \n",
        "    divisor = b  \n",
        "    while divisor != 0:   # Recall that != means \"not equal to\".\n",
        "        dividend, divisor = divisor, dividend % divisor\n",
        "    return abs(dividend)\n",
        "```"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "IP0eZbSCuXdy"
      },
      "source": [
        "The next trick involves the while loop.  The usual syntax has the form `while <boolean>:`.  But if `while` is followed by a numerical type, e.g. `while <int>:`, then the scope of the while loop will execute as long as the number is nonzero!  Therefore, the line\n",
        "```python\n",
        "while divisor != 0:\n",
        "```\n",
        "can be replaced by the shorter line\n",
        "```python\n",
        "while divisor:\n",
        "```\n",
        "\n",
        "This is truly a trick.  It probably won't speed anything up, and it does not make your program easier to read for beginners.  So use it if you prefer communicating with experienced Python programmers!  Here is the whole function again.\n",
        "```python\n",
        "def GCD(a,b):\n",
        "    dividend = a  \n",
        "    divisor = b  \n",
        "    while divisor:   # Executes the scope if divisor is nonzero.\n",
        "        dividend, divisor = divisor, dividend % divisor\n",
        "    return abs(dividend)\n",
        "```"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "yKSoAfbUuXdy"
      },
      "source": [
        "The next optimization is a bit more dangerous for beginners, but it works here.  In general, it can be dangerous to operate directly on the arguments to a function.  But in this setting, it is safe, and makes no real difference to the Python interpreter.  Instead of creating new variables called `dividend` and `divisor`, one can manipulate `a` and `b` directly within the function.  If you do this, the GCD function can be shortened to the following."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ikac7v-8uXdy"
      },
      "source": [
        "def GCD(a,b):\n",
        "    while b:   # I.e., while b != 0.\n",
        "        a, b = b, a % b\n",
        "    return abs(a)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "SP8md911uXdy",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "49f0c93e-c6df-49c2-e397-48cc16844202"
      },
      "source": [
        "# Try it out.  Try it on some big numbers and see how quick it runs!\n",
        "GCD(10000000,6500000)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "500000"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 239
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "HChX9z8ZuXdy"
      },
      "source": [
        "This code is essentially optimal, if one wishes to execute the Euclidean algorithm to find the GCD of two integers.  It almost [matches the GCD code in a standard Python library](https://stackoverflow.com/a/18944210).  It might be slightly faster than our original code -- but there is a tradeoff here between execution speed and readability of code.  In this and the following lessons, we often optimize enough for everyday purposes, but not so much that readability is lost."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "t7NOYklsuXdy"
      },
      "source": [
        "### Exercises and explorations\n",
        "\n",
        "1.  Modify the `is_prime` function by using a while loop instead of `for j in range(2,n):`.  Hint:  the function should contain the lines `j = 2` and `while j < n:` and `j = j + 1` in various places.  Why might this be an improvement from the for loop?  Can you look for factors within a smaller range?\n",
        "\n",
        "2.  Modify the `Euclidean_algorithm` function to create a function which returns the *number of steps* that the Euclidean algorithm requires, i.e., the number of divisions-with-remainder.  How does the number of steps compare to the size of the input numbers?  \n",
        "\n",
        "3.  When $a$ and $b$ are integers, $GCD(a,b) \\cdot LCM(a,b) = ab$.  Use this fact to write an LCM-function.  Try to make your function output only integers (not floats) and behave in a good way even if $a,b$ are zero.\n",
        "\n",
        "4.  How does the `GCD(a,b)` function behave when `a` and/or `b` are zero or negative?  Is this good?\n",
        "\n",
        "5.  Challenge:  Write a function `approximate_e(n)` which approximates $e$ with a maximum error of $10^{-n}$.  (You can assume $n < 1000$ if necessary.)  Try a while loop and `import mpmath`.  Back up your work often!"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "XLVsDlQEuXdy"
      },
      "source": [
        "#1.\n",
        "def is_prime(n):\n",
        "  j=2\n",
        "  while j<n:\n",
        "    j=j+1\n",
        "    if n%j == 0:\n",
        "      print(\"{} is a factor of {}.\".format(j,n))\n",
        "      return False\n",
        "    if n%j != 0:\n",
        "      print(\"{} is a prime.\".format(n))\n",
        "      return True\n",
        "  print(\"Number too big.\")\n",
        "  return None"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dQd8noAoTppI",
        "outputId": "fd2603df-d838-4424-f2a1-a80aa808d642"
      },
      "source": [
        "is_prime(11)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "11 is a prime.\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "True"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 243
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "WuBcR07eSo4N"
      },
      "source": [
        "This is an improvement from the for loop because we may not know how many terms it takes to complete the function. It does what we told it to do until a certain condition, which is when $$j>=n$$. Once $$j=n$$, it should stop looking for a factor. We can look for factors with a smaller range by changing the starting number, $$j=2$$ to any $$j>2$$."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "aVT1bxmiO-F7"
      },
      "source": [
        "#2.\n",
        "def Euclidean_algorithm(a,b):\n",
        "    num_steps = 0\n",
        "    dividend = a\n",
        "    divisor = b\n",
        "    while divisor != 0:   # Recall that != means \"is not equal to\".\n",
        "      quotient = dividend // divisor\n",
        "      remainder = dividend % divisor\n",
        "      print(\"{} = {} ({}) + {}\".format(dividend, quotient, divisor, remainder))\n",
        "      dividend = divisor\n",
        "      divisor = remainder\n",
        "      num_steps = num_steps + 1\n",
        "    return num_steps"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "nW3z7Q0Q2mfX",
        "outputId": "ebd5c275-de47-4f03-a298-a97becabaf56"
      },
      "source": [
        "for i in range(100):\n",
        "  Euclidean_algorithm(i,100)\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "0 = 0 (100) + 0\n",
            "-1 = -1 (100) + 99\n",
            "100 = 1 (99) + 1\n",
            "99 = 99 (1) + 0\n",
            "-2 = -1 (100) + 98\n",
            "100 = 1 (98) + 2\n",
            "98 = 49 (2) + 0\n",
            "-3 = -1 (100) + 97\n",
            "100 = 1 (97) + 3\n",
            "97 = 32 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "-4 = -1 (100) + 96\n",
            "100 = 1 (96) + 4\n",
            "96 = 24 (4) + 0\n",
            "-5 = -1 (100) + 95\n",
            "100 = 1 (95) + 5\n",
            "95 = 19 (5) + 0\n",
            "-6 = -1 (100) + 94\n",
            "100 = 1 (94) + 6\n",
            "94 = 15 (6) + 4\n",
            "6 = 1 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "-7 = -1 (100) + 93\n",
            "100 = 1 (93) + 7\n",
            "93 = 13 (7) + 2\n",
            "7 = 3 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "-8 = -1 (100) + 92\n",
            "100 = 1 (92) + 8\n",
            "92 = 11 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "-9 = -1 (100) + 91\n",
            "100 = 1 (91) + 9\n",
            "91 = 10 (9) + 1\n",
            "9 = 9 (1) + 0\n",
            "-10 = -1 (100) + 90\n",
            "100 = 1 (90) + 10\n",
            "90 = 9 (10) + 0\n",
            "-11 = -1 (100) + 89\n",
            "100 = 1 (89) + 11\n",
            "89 = 8 (11) + 1\n",
            "11 = 11 (1) + 0\n",
            "-12 = -1 (100) + 88\n",
            "100 = 1 (88) + 12\n",
            "88 = 7 (12) + 4\n",
            "12 = 3 (4) + 0\n",
            "-13 = -1 (100) + 87\n",
            "100 = 1 (87) + 13\n",
            "87 = 6 (13) + 9\n",
            "13 = 1 (9) + 4\n",
            "9 = 2 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "-14 = -1 (100) + 86\n",
            "100 = 1 (86) + 14\n",
            "86 = 6 (14) + 2\n",
            "14 = 7 (2) + 0\n",
            "-15 = -1 (100) + 85\n",
            "100 = 1 (85) + 15\n",
            "85 = 5 (15) + 10\n",
            "15 = 1 (10) + 5\n",
            "10 = 2 (5) + 0\n",
            "-16 = -1 (100) + 84\n",
            "100 = 1 (84) + 16\n",
            "84 = 5 (16) + 4\n",
            "16 = 4 (4) + 0\n",
            "-17 = -1 (100) + 83\n",
            "100 = 1 (83) + 17\n",
            "83 = 4 (17) + 15\n",
            "17 = 1 (15) + 2\n",
            "15 = 7 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "-18 = -1 (100) + 82\n",
            "100 = 1 (82) + 18\n",
            "82 = 4 (18) + 10\n",
            "18 = 1 (10) + 8\n",
            "10 = 1 (8) + 2\n",
            "8 = 4 (2) + 0\n",
            "-19 = -1 (100) + 81\n",
            "100 = 1 (81) + 19\n",
            "81 = 4 (19) + 5\n",
            "19 = 3 (5) + 4\n",
            "5 = 1 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "-20 = -1 (100) + 80\n",
            "100 = 1 (80) + 20\n",
            "80 = 4 (20) + 0\n",
            "-21 = -1 (100) + 79\n",
            "100 = 1 (79) + 21\n",
            "79 = 3 (21) + 16\n",
            "21 = 1 (16) + 5\n",
            "16 = 3 (5) + 1\n",
            "5 = 5 (1) + 0\n",
            "-22 = -1 (100) + 78\n",
            "100 = 1 (78) + 22\n",
            "78 = 3 (22) + 12\n",
            "22 = 1 (12) + 10\n",
            "12 = 1 (10) + 2\n",
            "10 = 5 (2) + 0\n",
            "-23 = -1 (100) + 77\n",
            "100 = 1 (77) + 23\n",
            "77 = 3 (23) + 8\n",
            "23 = 2 (8) + 7\n",
            "8 = 1 (7) + 1\n",
            "7 = 7 (1) + 0\n",
            "-24 = -1 (100) + 76\n",
            "100 = 1 (76) + 24\n",
            "76 = 3 (24) + 4\n",
            "24 = 6 (4) + 0\n",
            "-25 = -1 (100) + 75\n",
            "100 = 1 (75) + 25\n",
            "75 = 3 (25) + 0\n",
            "-26 = -1 (100) + 74\n",
            "100 = 1 (74) + 26\n",
            "74 = 2 (26) + 22\n",
            "26 = 1 (22) + 4\n",
            "22 = 5 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "-27 = -1 (100) + 73\n",
            "100 = 1 (73) + 27\n",
            "73 = 2 (27) + 19\n",
            "27 = 1 (19) + 8\n",
            "19 = 2 (8) + 3\n",
            "8 = 2 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "-28 = -1 (100) + 72\n",
            "100 = 1 (72) + 28\n",
            "72 = 2 (28) + 16\n",
            "28 = 1 (16) + 12\n",
            "16 = 1 (12) + 4\n",
            "12 = 3 (4) + 0\n",
            "-29 = -1 (100) + 71\n",
            "100 = 1 (71) + 29\n",
            "71 = 2 (29) + 13\n",
            "29 = 2 (13) + 3\n",
            "13 = 4 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "-30 = -1 (100) + 70\n",
            "100 = 1 (70) + 30\n",
            "70 = 2 (30) + 10\n",
            "30 = 3 (10) + 0\n",
            "-31 = -1 (100) + 69\n",
            "100 = 1 (69) + 31\n",
            "69 = 2 (31) + 7\n",
            "31 = 4 (7) + 3\n",
            "7 = 2 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "-32 = -1 (100) + 68\n",
            "100 = 1 (68) + 32\n",
            "68 = 2 (32) + 4\n",
            "32 = 8 (4) + 0\n",
            "-33 = -1 (100) + 67\n",
            "100 = 1 (67) + 33\n",
            "67 = 2 (33) + 1\n",
            "33 = 33 (1) + 0\n",
            "-34 = -1 (100) + 66\n",
            "100 = 1 (66) + 34\n",
            "66 = 1 (34) + 32\n",
            "34 = 1 (32) + 2\n",
            "32 = 16 (2) + 0\n",
            "-35 = -1 (100) + 65\n",
            "100 = 1 (65) + 35\n",
            "65 = 1 (35) + 30\n",
            "35 = 1 (30) + 5\n",
            "30 = 6 (5) + 0\n",
            "-36 = -1 (100) + 64\n",
            "100 = 1 (64) + 36\n",
            "64 = 1 (36) + 28\n",
            "36 = 1 (28) + 8\n",
            "28 = 3 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "-37 = -1 (100) + 63\n",
            "100 = 1 (63) + 37\n",
            "63 = 1 (37) + 26\n",
            "37 = 1 (26) + 11\n",
            "26 = 2 (11) + 4\n",
            "11 = 2 (4) + 3\n",
            "4 = 1 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "-38 = -1 (100) + 62\n",
            "100 = 1 (62) + 38\n",
            "62 = 1 (38) + 24\n",
            "38 = 1 (24) + 14\n",
            "24 = 1 (14) + 10\n",
            "14 = 1 (10) + 4\n",
            "10 = 2 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "-39 = -1 (100) + 61\n",
            "100 = 1 (61) + 39\n",
            "61 = 1 (39) + 22\n",
            "39 = 1 (22) + 17\n",
            "22 = 1 (17) + 5\n",
            "17 = 3 (5) + 2\n",
            "5 = 2 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "-40 = -1 (100) + 60\n",
            "100 = 1 (60) + 40\n",
            "60 = 1 (40) + 20\n",
            "40 = 2 (20) + 0\n",
            "-41 = -1 (100) + 59\n",
            "100 = 1 (59) + 41\n",
            "59 = 1 (41) + 18\n",
            "41 = 2 (18) + 5\n",
            "18 = 3 (5) + 3\n",
            "5 = 1 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "-42 = -1 (100) + 58\n",
            "100 = 1 (58) + 42\n",
            "58 = 1 (42) + 16\n",
            "42 = 2 (16) + 10\n",
            "16 = 1 (10) + 6\n",
            "10 = 1 (6) + 4\n",
            "6 = 1 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "-43 = -1 (100) + 57\n",
            "100 = 1 (57) + 43\n",
            "57 = 1 (43) + 14\n",
            "43 = 3 (14) + 1\n",
            "14 = 14 (1) + 0\n",
            "-44 = -1 (100) + 56\n",
            "100 = 1 (56) + 44\n",
            "56 = 1 (44) + 12\n",
            "44 = 3 (12) + 8\n",
            "12 = 1 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "-45 = -1 (100) + 55\n",
            "100 = 1 (55) + 45\n",
            "55 = 1 (45) + 10\n",
            "45 = 4 (10) + 5\n",
            "10 = 2 (5) + 0\n",
            "-46 = -1 (100) + 54\n",
            "100 = 1 (54) + 46\n",
            "54 = 1 (46) + 8\n",
            "46 = 5 (8) + 6\n",
            "8 = 1 (6) + 2\n",
            "6 = 3 (2) + 0\n",
            "-47 = -1 (100) + 53\n",
            "100 = 1 (53) + 47\n",
            "53 = 1 (47) + 6\n",
            "47 = 7 (6) + 5\n",
            "6 = 1 (5) + 1\n",
            "5 = 5 (1) + 0\n",
            "-48 = -1 (100) + 52\n",
            "100 = 1 (52) + 48\n",
            "52 = 1 (48) + 4\n",
            "48 = 12 (4) + 0\n",
            "-49 = -1 (100) + 51\n",
            "100 = 1 (51) + 49\n",
            "51 = 1 (49) + 2\n",
            "49 = 24 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "-50 = -1 (100) + 50\n",
            "100 = 2 (50) + 0\n",
            "-51 = -1 (100) + 49\n",
            "100 = 2 (49) + 2\n",
            "49 = 24 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "-52 = -1 (100) + 48\n",
            "100 = 2 (48) + 4\n",
            "48 = 12 (4) + 0\n",
            "-53 = -1 (100) + 47\n",
            "100 = 2 (47) + 6\n",
            "47 = 7 (6) + 5\n",
            "6 = 1 (5) + 1\n",
            "5 = 5 (1) + 0\n",
            "-54 = -1 (100) + 46\n",
            "100 = 2 (46) + 8\n",
            "46 = 5 (8) + 6\n",
            "8 = 1 (6) + 2\n",
            "6 = 3 (2) + 0\n",
            "-55 = -1 (100) + 45\n",
            "100 = 2 (45) + 10\n",
            "45 = 4 (10) + 5\n",
            "10 = 2 (5) + 0\n",
            "-56 = -1 (100) + 44\n",
            "100 = 2 (44) + 12\n",
            "44 = 3 (12) + 8\n",
            "12 = 1 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "-57 = -1 (100) + 43\n",
            "100 = 2 (43) + 14\n",
            "43 = 3 (14) + 1\n",
            "14 = 14 (1) + 0\n",
            "-58 = -1 (100) + 42\n",
            "100 = 2 (42) + 16\n",
            "42 = 2 (16) + 10\n",
            "16 = 1 (10) + 6\n",
            "10 = 1 (6) + 4\n",
            "6 = 1 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "-59 = -1 (100) + 41\n",
            "100 = 2 (41) + 18\n",
            "41 = 2 (18) + 5\n",
            "18 = 3 (5) + 3\n",
            "5 = 1 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "-60 = -1 (100) + 40\n",
            "100 = 2 (40) + 20\n",
            "40 = 2 (20) + 0\n",
            "-61 = -1 (100) + 39\n",
            "100 = 2 (39) + 22\n",
            "39 = 1 (22) + 17\n",
            "22 = 1 (17) + 5\n",
            "17 = 3 (5) + 2\n",
            "5 = 2 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "-62 = -1 (100) + 38\n",
            "100 = 2 (38) + 24\n",
            "38 = 1 (24) + 14\n",
            "24 = 1 (14) + 10\n",
            "14 = 1 (10) + 4\n",
            "10 = 2 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "-63 = -1 (100) + 37\n",
            "100 = 2 (37) + 26\n",
            "37 = 1 (26) + 11\n",
            "26 = 2 (11) + 4\n",
            "11 = 2 (4) + 3\n",
            "4 = 1 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "-64 = -1 (100) + 36\n",
            "100 = 2 (36) + 28\n",
            "36 = 1 (28) + 8\n",
            "28 = 3 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "-65 = -1 (100) + 35\n",
            "100 = 2 (35) + 30\n",
            "35 = 1 (30) + 5\n",
            "30 = 6 (5) + 0\n",
            "-66 = -1 (100) + 34\n",
            "100 = 2 (34) + 32\n",
            "34 = 1 (32) + 2\n",
            "32 = 16 (2) + 0\n",
            "-67 = -1 (100) + 33\n",
            "100 = 3 (33) + 1\n",
            "33 = 33 (1) + 0\n",
            "-68 = -1 (100) + 32\n",
            "100 = 3 (32) + 4\n",
            "32 = 8 (4) + 0\n",
            "-69 = -1 (100) + 31\n",
            "100 = 3 (31) + 7\n",
            "31 = 4 (7) + 3\n",
            "7 = 2 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "-70 = -1 (100) + 30\n",
            "100 = 3 (30) + 10\n",
            "30 = 3 (10) + 0\n",
            "-71 = -1 (100) + 29\n",
            "100 = 3 (29) + 13\n",
            "29 = 2 (13) + 3\n",
            "13 = 4 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "-72 = -1 (100) + 28\n",
            "100 = 3 (28) + 16\n",
            "28 = 1 (16) + 12\n",
            "16 = 1 (12) + 4\n",
            "12 = 3 (4) + 0\n",
            "-73 = -1 (100) + 27\n",
            "100 = 3 (27) + 19\n",
            "27 = 1 (19) + 8\n",
            "19 = 2 (8) + 3\n",
            "8 = 2 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "-74 = -1 (100) + 26\n",
            "100 = 3 (26) + 22\n",
            "26 = 1 (22) + 4\n",
            "22 = 5 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "-75 = -1 (100) + 25\n",
            "100 = 4 (25) + 0\n",
            "-76 = -1 (100) + 24\n",
            "100 = 4 (24) + 4\n",
            "24 = 6 (4) + 0\n",
            "-77 = -1 (100) + 23\n",
            "100 = 4 (23) + 8\n",
            "23 = 2 (8) + 7\n",
            "8 = 1 (7) + 1\n",
            "7 = 7 (1) + 0\n",
            "-78 = -1 (100) + 22\n",
            "100 = 4 (22) + 12\n",
            "22 = 1 (12) + 10\n",
            "12 = 1 (10) + 2\n",
            "10 = 5 (2) + 0\n",
            "-79 = -1 (100) + 21\n",
            "100 = 4 (21) + 16\n",
            "21 = 1 (16) + 5\n",
            "16 = 3 (5) + 1\n",
            "5 = 5 (1) + 0\n",
            "-80 = -1 (100) + 20\n",
            "100 = 5 (20) + 0\n",
            "-81 = -1 (100) + 19\n",
            "100 = 5 (19) + 5\n",
            "19 = 3 (5) + 4\n",
            "5 = 1 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "-82 = -1 (100) + 18\n",
            "100 = 5 (18) + 10\n",
            "18 = 1 (10) + 8\n",
            "10 = 1 (8) + 2\n",
            "8 = 4 (2) + 0\n",
            "-83 = -1 (100) + 17\n",
            "100 = 5 (17) + 15\n",
            "17 = 1 (15) + 2\n",
            "15 = 7 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "-84 = -1 (100) + 16\n",
            "100 = 6 (16) + 4\n",
            "16 = 4 (4) + 0\n",
            "-85 = -1 (100) + 15\n",
            "100 = 6 (15) + 10\n",
            "15 = 1 (10) + 5\n",
            "10 = 2 (5) + 0\n",
            "-86 = -1 (100) + 14\n",
            "100 = 7 (14) + 2\n",
            "14 = 7 (2) + 0\n",
            "-87 = -1 (100) + 13\n",
            "100 = 7 (13) + 9\n",
            "13 = 1 (9) + 4\n",
            "9 = 2 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "-88 = -1 (100) + 12\n",
            "100 = 8 (12) + 4\n",
            "12 = 3 (4) + 0\n",
            "-89 = -1 (100) + 11\n",
            "100 = 9 (11) + 1\n",
            "11 = 11 (1) + 0\n",
            "-90 = -1 (100) + 10\n",
            "100 = 10 (10) + 0\n",
            "-91 = -1 (100) + 9\n",
            "100 = 11 (9) + 1\n",
            "9 = 9 (1) + 0\n",
            "-92 = -1 (100) + 8\n",
            "100 = 12 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "-93 = -1 (100) + 7\n",
            "100 = 14 (7) + 2\n",
            "7 = 3 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "-94 = -1 (100) + 6\n",
            "100 = 16 (6) + 4\n",
            "6 = 1 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "-95 = -1 (100) + 5\n",
            "100 = 20 (5) + 0\n",
            "-96 = -1 (100) + 4\n",
            "100 = 25 (4) + 0\n",
            "-97 = -1 (100) + 3\n",
            "100 = 33 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "-98 = -1 (100) + 2\n",
            "100 = 50 (2) + 0\n",
            "-99 = -1 (100) + 1\n",
            "100 = 100 (1) + 0\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "HtN6u7A_7924",
        "outputId": "c51445d9-f937-4723-b4aa-04d4912c2446"
      },
      "source": [
        "for i in range(1000):\n",
        "  Euclidean_algorithm(i,1000)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "\u001b[1;30;43mStreaming output truncated to the last 5000 lines.\u001b[0m\n",
            "52 = 17 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "264 = 0 (1000) + 264\n",
            "1000 = 3 (264) + 208\n",
            "264 = 1 (208) + 56\n",
            "208 = 3 (56) + 40\n",
            "56 = 1 (40) + 16\n",
            "40 = 2 (16) + 8\n",
            "16 = 2 (8) + 0\n",
            "265 = 0 (1000) + 265\n",
            "1000 = 3 (265) + 205\n",
            "265 = 1 (205) + 60\n",
            "205 = 3 (60) + 25\n",
            "60 = 2 (25) + 10\n",
            "25 = 2 (10) + 5\n",
            "10 = 2 (5) + 0\n",
            "266 = 0 (1000) + 266\n",
            "1000 = 3 (266) + 202\n",
            "266 = 1 (202) + 64\n",
            "202 = 3 (64) + 10\n",
            "64 = 6 (10) + 4\n",
            "10 = 2 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "267 = 0 (1000) + 267\n",
            "1000 = 3 (267) + 199\n",
            "267 = 1 (199) + 68\n",
            "199 = 2 (68) + 63\n",
            "68 = 1 (63) + 5\n",
            "63 = 12 (5) + 3\n",
            "5 = 1 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "268 = 0 (1000) + 268\n",
            "1000 = 3 (268) + 196\n",
            "268 = 1 (196) + 72\n",
            "196 = 2 (72) + 52\n",
            "72 = 1 (52) + 20\n",
            "52 = 2 (20) + 12\n",
            "20 = 1 (12) + 8\n",
            "12 = 1 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "269 = 0 (1000) + 269\n",
            "1000 = 3 (269) + 193\n",
            "269 = 1 (193) + 76\n",
            "193 = 2 (76) + 41\n",
            "76 = 1 (41) + 35\n",
            "41 = 1 (35) + 6\n",
            "35 = 5 (6) + 5\n",
            "6 = 1 (5) + 1\n",
            "5 = 5 (1) + 0\n",
            "270 = 0 (1000) + 270\n",
            "1000 = 3 (270) + 190\n",
            "270 = 1 (190) + 80\n",
            "190 = 2 (80) + 30\n",
            "80 = 2 (30) + 20\n",
            "30 = 1 (20) + 10\n",
            "20 = 2 (10) + 0\n",
            "271 = 0 (1000) + 271\n",
            "1000 = 3 (271) + 187\n",
            "271 = 1 (187) + 84\n",
            "187 = 2 (84) + 19\n",
            "84 = 4 (19) + 8\n",
            "19 = 2 (8) + 3\n",
            "8 = 2 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "272 = 0 (1000) + 272\n",
            "1000 = 3 (272) + 184\n",
            "272 = 1 (184) + 88\n",
            "184 = 2 (88) + 8\n",
            "88 = 11 (8) + 0\n",
            "273 = 0 (1000) + 273\n",
            "1000 = 3 (273) + 181\n",
            "273 = 1 (181) + 92\n",
            "181 = 1 (92) + 89\n",
            "92 = 1 (89) + 3\n",
            "89 = 29 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "274 = 0 (1000) + 274\n",
            "1000 = 3 (274) + 178\n",
            "274 = 1 (178) + 96\n",
            "178 = 1 (96) + 82\n",
            "96 = 1 (82) + 14\n",
            "82 = 5 (14) + 12\n",
            "14 = 1 (12) + 2\n",
            "12 = 6 (2) + 0\n",
            "275 = 0 (1000) + 275\n",
            "1000 = 3 (275) + 175\n",
            "275 = 1 (175) + 100\n",
            "175 = 1 (100) + 75\n",
            "100 = 1 (75) + 25\n",
            "75 = 3 (25) + 0\n",
            "276 = 0 (1000) + 276\n",
            "1000 = 3 (276) + 172\n",
            "276 = 1 (172) + 104\n",
            "172 = 1 (104) + 68\n",
            "104 = 1 (68) + 36\n",
            "68 = 1 (36) + 32\n",
            "36 = 1 (32) + 4\n",
            "32 = 8 (4) + 0\n",
            "277 = 0 (1000) + 277\n",
            "1000 = 3 (277) + 169\n",
            "277 = 1 (169) + 108\n",
            "169 = 1 (108) + 61\n",
            "108 = 1 (61) + 47\n",
            "61 = 1 (47) + 14\n",
            "47 = 3 (14) + 5\n",
            "14 = 2 (5) + 4\n",
            "5 = 1 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "278 = 0 (1000) + 278\n",
            "1000 = 3 (278) + 166\n",
            "278 = 1 (166) + 112\n",
            "166 = 1 (112) + 54\n",
            "112 = 2 (54) + 4\n",
            "54 = 13 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "279 = 0 (1000) + 279\n",
            "1000 = 3 (279) + 163\n",
            "279 = 1 (163) + 116\n",
            "163 = 1 (116) + 47\n",
            "116 = 2 (47) + 22\n",
            "47 = 2 (22) + 3\n",
            "22 = 7 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "280 = 0 (1000) + 280\n",
            "1000 = 3 (280) + 160\n",
            "280 = 1 (160) + 120\n",
            "160 = 1 (120) + 40\n",
            "120 = 3 (40) + 0\n",
            "281 = 0 (1000) + 281\n",
            "1000 = 3 (281) + 157\n",
            "281 = 1 (157) + 124\n",
            "157 = 1 (124) + 33\n",
            "124 = 3 (33) + 25\n",
            "33 = 1 (25) + 8\n",
            "25 = 3 (8) + 1\n",
            "8 = 8 (1) + 0\n",
            "282 = 0 (1000) + 282\n",
            "1000 = 3 (282) + 154\n",
            "282 = 1 (154) + 128\n",
            "154 = 1 (128) + 26\n",
            "128 = 4 (26) + 24\n",
            "26 = 1 (24) + 2\n",
            "24 = 12 (2) + 0\n",
            "283 = 0 (1000) + 283\n",
            "1000 = 3 (283) + 151\n",
            "283 = 1 (151) + 132\n",
            "151 = 1 (132) + 19\n",
            "132 = 6 (19) + 18\n",
            "19 = 1 (18) + 1\n",
            "18 = 18 (1) + 0\n",
            "284 = 0 (1000) + 284\n",
            "1000 = 3 (284) + 148\n",
            "284 = 1 (148) + 136\n",
            "148 = 1 (136) + 12\n",
            "136 = 11 (12) + 4\n",
            "12 = 3 (4) + 0\n",
            "285 = 0 (1000) + 285\n",
            "1000 = 3 (285) + 145\n",
            "285 = 1 (145) + 140\n",
            "145 = 1 (140) + 5\n",
            "140 = 28 (5) + 0\n",
            "286 = 0 (1000) + 286\n",
            "1000 = 3 (286) + 142\n",
            "286 = 2 (142) + 2\n",
            "142 = 71 (2) + 0\n",
            "287 = 0 (1000) + 287\n",
            "1000 = 3 (287) + 139\n",
            "287 = 2 (139) + 9\n",
            "139 = 15 (9) + 4\n",
            "9 = 2 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "288 = 0 (1000) + 288\n",
            "1000 = 3 (288) + 136\n",
            "288 = 2 (136) + 16\n",
            "136 = 8 (16) + 8\n",
            "16 = 2 (8) + 0\n",
            "289 = 0 (1000) + 289\n",
            "1000 = 3 (289) + 133\n",
            "289 = 2 (133) + 23\n",
            "133 = 5 (23) + 18\n",
            "23 = 1 (18) + 5\n",
            "18 = 3 (5) + 3\n",
            "5 = 1 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "290 = 0 (1000) + 290\n",
            "1000 = 3 (290) + 130\n",
            "290 = 2 (130) + 30\n",
            "130 = 4 (30) + 10\n",
            "30 = 3 (10) + 0\n",
            "291 = 0 (1000) + 291\n",
            "1000 = 3 (291) + 127\n",
            "291 = 2 (127) + 37\n",
            "127 = 3 (37) + 16\n",
            "37 = 2 (16) + 5\n",
            "16 = 3 (5) + 1\n",
            "5 = 5 (1) + 0\n",
            "292 = 0 (1000) + 292\n",
            "1000 = 3 (292) + 124\n",
            "292 = 2 (124) + 44\n",
            "124 = 2 (44) + 36\n",
            "44 = 1 (36) + 8\n",
            "36 = 4 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "293 = 0 (1000) + 293\n",
            "1000 = 3 (293) + 121\n",
            "293 = 2 (121) + 51\n",
            "121 = 2 (51) + 19\n",
            "51 = 2 (19) + 13\n",
            "19 = 1 (13) + 6\n",
            "13 = 2 (6) + 1\n",
            "6 = 6 (1) + 0\n",
            "294 = 0 (1000) + 294\n",
            "1000 = 3 (294) + 118\n",
            "294 = 2 (118) + 58\n",
            "118 = 2 (58) + 2\n",
            "58 = 29 (2) + 0\n",
            "295 = 0 (1000) + 295\n",
            "1000 = 3 (295) + 115\n",
            "295 = 2 (115) + 65\n",
            "115 = 1 (65) + 50\n",
            "65 = 1 (50) + 15\n",
            "50 = 3 (15) + 5\n",
            "15 = 3 (5) + 0\n",
            "296 = 0 (1000) + 296\n",
            "1000 = 3 (296) + 112\n",
            "296 = 2 (112) + 72\n",
            "112 = 1 (72) + 40\n",
            "72 = 1 (40) + 32\n",
            "40 = 1 (32) + 8\n",
            "32 = 4 (8) + 0\n",
            "297 = 0 (1000) + 297\n",
            "1000 = 3 (297) + 109\n",
            "297 = 2 (109) + 79\n",
            "109 = 1 (79) + 30\n",
            "79 = 2 (30) + 19\n",
            "30 = 1 (19) + 11\n",
            "19 = 1 (11) + 8\n",
            "11 = 1 (8) + 3\n",
            "8 = 2 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "298 = 0 (1000) + 298\n",
            "1000 = 3 (298) + 106\n",
            "298 = 2 (106) + 86\n",
            "106 = 1 (86) + 20\n",
            "86 = 4 (20) + 6\n",
            "20 = 3 (6) + 2\n",
            "6 = 3 (2) + 0\n",
            "299 = 0 (1000) + 299\n",
            "1000 = 3 (299) + 103\n",
            "299 = 2 (103) + 93\n",
            "103 = 1 (93) + 10\n",
            "93 = 9 (10) + 3\n",
            "10 = 3 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "300 = 0 (1000) + 300\n",
            "1000 = 3 (300) + 100\n",
            "300 = 3 (100) + 0\n",
            "301 = 0 (1000) + 301\n",
            "1000 = 3 (301) + 97\n",
            "301 = 3 (97) + 10\n",
            "97 = 9 (10) + 7\n",
            "10 = 1 (7) + 3\n",
            "7 = 2 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "302 = 0 (1000) + 302\n",
            "1000 = 3 (302) + 94\n",
            "302 = 3 (94) + 20\n",
            "94 = 4 (20) + 14\n",
            "20 = 1 (14) + 6\n",
            "14 = 2 (6) + 2\n",
            "6 = 3 (2) + 0\n",
            "303 = 0 (1000) + 303\n",
            "1000 = 3 (303) + 91\n",
            "303 = 3 (91) + 30\n",
            "91 = 3 (30) + 1\n",
            "30 = 30 (1) + 0\n",
            "304 = 0 (1000) + 304\n",
            "1000 = 3 (304) + 88\n",
            "304 = 3 (88) + 40\n",
            "88 = 2 (40) + 8\n",
            "40 = 5 (8) + 0\n",
            "305 = 0 (1000) + 305\n",
            "1000 = 3 (305) + 85\n",
            "305 = 3 (85) + 50\n",
            "85 = 1 (50) + 35\n",
            "50 = 1 (35) + 15\n",
            "35 = 2 (15) + 5\n",
            "15 = 3 (5) + 0\n",
            "306 = 0 (1000) + 306\n",
            "1000 = 3 (306) + 82\n",
            "306 = 3 (82) + 60\n",
            "82 = 1 (60) + 22\n",
            "60 = 2 (22) + 16\n",
            "22 = 1 (16) + 6\n",
            "16 = 2 (6) + 4\n",
            "6 = 1 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "307 = 0 (1000) + 307\n",
            "1000 = 3 (307) + 79\n",
            "307 = 3 (79) + 70\n",
            "79 = 1 (70) + 9\n",
            "70 = 7 (9) + 7\n",
            "9 = 1 (7) + 2\n",
            "7 = 3 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "308 = 0 (1000) + 308\n",
            "1000 = 3 (308) + 76\n",
            "308 = 4 (76) + 4\n",
            "76 = 19 (4) + 0\n",
            "309 = 0 (1000) + 309\n",
            "1000 = 3 (309) + 73\n",
            "309 = 4 (73) + 17\n",
            "73 = 4 (17) + 5\n",
            "17 = 3 (5) + 2\n",
            "5 = 2 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "310 = 0 (1000) + 310\n",
            "1000 = 3 (310) + 70\n",
            "310 = 4 (70) + 30\n",
            "70 = 2 (30) + 10\n",
            "30 = 3 (10) + 0\n",
            "311 = 0 (1000) + 311\n",
            "1000 = 3 (311) + 67\n",
            "311 = 4 (67) + 43\n",
            "67 = 1 (43) + 24\n",
            "43 = 1 (24) + 19\n",
            "24 = 1 (19) + 5\n",
            "19 = 3 (5) + 4\n",
            "5 = 1 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "312 = 0 (1000) + 312\n",
            "1000 = 3 (312) + 64\n",
            "312 = 4 (64) + 56\n",
            "64 = 1 (56) + 8\n",
            "56 = 7 (8) + 0\n",
            "313 = 0 (1000) + 313\n",
            "1000 = 3 (313) + 61\n",
            "313 = 5 (61) + 8\n",
            "61 = 7 (8) + 5\n",
            "8 = 1 (5) + 3\n",
            "5 = 1 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "314 = 0 (1000) + 314\n",
            "1000 = 3 (314) + 58\n",
            "314 = 5 (58) + 24\n",
            "58 = 2 (24) + 10\n",
            "24 = 2 (10) + 4\n",
            "10 = 2 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "315 = 0 (1000) + 315\n",
            "1000 = 3 (315) + 55\n",
            "315 = 5 (55) + 40\n",
            "55 = 1 (40) + 15\n",
            "40 = 2 (15) + 10\n",
            "15 = 1 (10) + 5\n",
            "10 = 2 (5) + 0\n",
            "316 = 0 (1000) + 316\n",
            "1000 = 3 (316) + 52\n",
            "316 = 6 (52) + 4\n",
            "52 = 13 (4) + 0\n",
            "317 = 0 (1000) + 317\n",
            "1000 = 3 (317) + 49\n",
            "317 = 6 (49) + 23\n",
            "49 = 2 (23) + 3\n",
            "23 = 7 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "318 = 0 (1000) + 318\n",
            "1000 = 3 (318) + 46\n",
            "318 = 6 (46) + 42\n",
            "46 = 1 (42) + 4\n",
            "42 = 10 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "319 = 0 (1000) + 319\n",
            "1000 = 3 (319) + 43\n",
            "319 = 7 (43) + 18\n",
            "43 = 2 (18) + 7\n",
            "18 = 2 (7) + 4\n",
            "7 = 1 (4) + 3\n",
            "4 = 1 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "320 = 0 (1000) + 320\n",
            "1000 = 3 (320) + 40\n",
            "320 = 8 (40) + 0\n",
            "321 = 0 (1000) + 321\n",
            "1000 = 3 (321) + 37\n",
            "321 = 8 (37) + 25\n",
            "37 = 1 (25) + 12\n",
            "25 = 2 (12) + 1\n",
            "12 = 12 (1) + 0\n",
            "322 = 0 (1000) + 322\n",
            "1000 = 3 (322) + 34\n",
            "322 = 9 (34) + 16\n",
            "34 = 2 (16) + 2\n",
            "16 = 8 (2) + 0\n",
            "323 = 0 (1000) + 323\n",
            "1000 = 3 (323) + 31\n",
            "323 = 10 (31) + 13\n",
            "31 = 2 (13) + 5\n",
            "13 = 2 (5) + 3\n",
            "5 = 1 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "324 = 0 (1000) + 324\n",
            "1000 = 3 (324) + 28\n",
            "324 = 11 (28) + 16\n",
            "28 = 1 (16) + 12\n",
            "16 = 1 (12) + 4\n",
            "12 = 3 (4) + 0\n",
            "325 = 0 (1000) + 325\n",
            "1000 = 3 (325) + 25\n",
            "325 = 13 (25) + 0\n",
            "326 = 0 (1000) + 326\n",
            "1000 = 3 (326) + 22\n",
            "326 = 14 (22) + 18\n",
            "22 = 1 (18) + 4\n",
            "18 = 4 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "327 = 0 (1000) + 327\n",
            "1000 = 3 (327) + 19\n",
            "327 = 17 (19) + 4\n",
            "19 = 4 (4) + 3\n",
            "4 = 1 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "328 = 0 (1000) + 328\n",
            "1000 = 3 (328) + 16\n",
            "328 = 20 (16) + 8\n",
            "16 = 2 (8) + 0\n",
            "329 = 0 (1000) + 329\n",
            "1000 = 3 (329) + 13\n",
            "329 = 25 (13) + 4\n",
            "13 = 3 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "330 = 0 (1000) + 330\n",
            "1000 = 3 (330) + 10\n",
            "330 = 33 (10) + 0\n",
            "331 = 0 (1000) + 331\n",
            "1000 = 3 (331) + 7\n",
            "331 = 47 (7) + 2\n",
            "7 = 3 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "332 = 0 (1000) + 332\n",
            "1000 = 3 (332) + 4\n",
            "332 = 83 (4) + 0\n",
            "333 = 0 (1000) + 333\n",
            "1000 = 3 (333) + 1\n",
            "333 = 333 (1) + 0\n",
            "334 = 0 (1000) + 334\n",
            "1000 = 2 (334) + 332\n",
            "334 = 1 (332) + 2\n",
            "332 = 166 (2) + 0\n",
            "335 = 0 (1000) + 335\n",
            "1000 = 2 (335) + 330\n",
            "335 = 1 (330) + 5\n",
            "330 = 66 (5) + 0\n",
            "336 = 0 (1000) + 336\n",
            "1000 = 2 (336) + 328\n",
            "336 = 1 (328) + 8\n",
            "328 = 41 (8) + 0\n",
            "337 = 0 (1000) + 337\n",
            "1000 = 2 (337) + 326\n",
            "337 = 1 (326) + 11\n",
            "326 = 29 (11) + 7\n",
            "11 = 1 (7) + 4\n",
            "7 = 1 (4) + 3\n",
            "4 = 1 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "338 = 0 (1000) + 338\n",
            "1000 = 2 (338) + 324\n",
            "338 = 1 (324) + 14\n",
            "324 = 23 (14) + 2\n",
            "14 = 7 (2) + 0\n",
            "339 = 0 (1000) + 339\n",
            "1000 = 2 (339) + 322\n",
            "339 = 1 (322) + 17\n",
            "322 = 18 (17) + 16\n",
            "17 = 1 (16) + 1\n",
            "16 = 16 (1) + 0\n",
            "340 = 0 (1000) + 340\n",
            "1000 = 2 (340) + 320\n",
            "340 = 1 (320) + 20\n",
            "320 = 16 (20) + 0\n",
            "341 = 0 (1000) + 341\n",
            "1000 = 2 (341) + 318\n",
            "341 = 1 (318) + 23\n",
            "318 = 13 (23) + 19\n",
            "23 = 1 (19) + 4\n",
            "19 = 4 (4) + 3\n",
            "4 = 1 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "342 = 0 (1000) + 342\n",
            "1000 = 2 (342) + 316\n",
            "342 = 1 (316) + 26\n",
            "316 = 12 (26) + 4\n",
            "26 = 6 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "343 = 0 (1000) + 343\n",
            "1000 = 2 (343) + 314\n",
            "343 = 1 (314) + 29\n",
            "314 = 10 (29) + 24\n",
            "29 = 1 (24) + 5\n",
            "24 = 4 (5) + 4\n",
            "5 = 1 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "344 = 0 (1000) + 344\n",
            "1000 = 2 (344) + 312\n",
            "344 = 1 (312) + 32\n",
            "312 = 9 (32) + 24\n",
            "32 = 1 (24) + 8\n",
            "24 = 3 (8) + 0\n",
            "345 = 0 (1000) + 345\n",
            "1000 = 2 (345) + 310\n",
            "345 = 1 (310) + 35\n",
            "310 = 8 (35) + 30\n",
            "35 = 1 (30) + 5\n",
            "30 = 6 (5) + 0\n",
            "346 = 0 (1000) + 346\n",
            "1000 = 2 (346) + 308\n",
            "346 = 1 (308) + 38\n",
            "308 = 8 (38) + 4\n",
            "38 = 9 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "347 = 0 (1000) + 347\n",
            "1000 = 2 (347) + 306\n",
            "347 = 1 (306) + 41\n",
            "306 = 7 (41) + 19\n",
            "41 = 2 (19) + 3\n",
            "19 = 6 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "348 = 0 (1000) + 348\n",
            "1000 = 2 (348) + 304\n",
            "348 = 1 (304) + 44\n",
            "304 = 6 (44) + 40\n",
            "44 = 1 (40) + 4\n",
            "40 = 10 (4) + 0\n",
            "349 = 0 (1000) + 349\n",
            "1000 = 2 (349) + 302\n",
            "349 = 1 (302) + 47\n",
            "302 = 6 (47) + 20\n",
            "47 = 2 (20) + 7\n",
            "20 = 2 (7) + 6\n",
            "7 = 1 (6) + 1\n",
            "6 = 6 (1) + 0\n",
            "350 = 0 (1000) + 350\n",
            "1000 = 2 (350) + 300\n",
            "350 = 1 (300) + 50\n",
            "300 = 6 (50) + 0\n",
            "351 = 0 (1000) + 351\n",
            "1000 = 2 (351) + 298\n",
            "351 = 1 (298) + 53\n",
            "298 = 5 (53) + 33\n",
            "53 = 1 (33) + 20\n",
            "33 = 1 (20) + 13\n",
            "20 = 1 (13) + 7\n",
            "13 = 1 (7) + 6\n",
            "7 = 1 (6) + 1\n",
            "6 = 6 (1) + 0\n",
            "352 = 0 (1000) + 352\n",
            "1000 = 2 (352) + 296\n",
            "352 = 1 (296) + 56\n",
            "296 = 5 (56) + 16\n",
            "56 = 3 (16) + 8\n",
            "16 = 2 (8) + 0\n",
            "353 = 0 (1000) + 353\n",
            "1000 = 2 (353) + 294\n",
            "353 = 1 (294) + 59\n",
            "294 = 4 (59) + 58\n",
            "59 = 1 (58) + 1\n",
            "58 = 58 (1) + 0\n",
            "354 = 0 (1000) + 354\n",
            "1000 = 2 (354) + 292\n",
            "354 = 1 (292) + 62\n",
            "292 = 4 (62) + 44\n",
            "62 = 1 (44) + 18\n",
            "44 = 2 (18) + 8\n",
            "18 = 2 (8) + 2\n",
            "8 = 4 (2) + 0\n",
            "355 = 0 (1000) + 355\n",
            "1000 = 2 (355) + 290\n",
            "355 = 1 (290) + 65\n",
            "290 = 4 (65) + 30\n",
            "65 = 2 (30) + 5\n",
            "30 = 6 (5) + 0\n",
            "356 = 0 (1000) + 356\n",
            "1000 = 2 (356) + 288\n",
            "356 = 1 (288) + 68\n",
            "288 = 4 (68) + 16\n",
            "68 = 4 (16) + 4\n",
            "16 = 4 (4) + 0\n",
            "357 = 0 (1000) + 357\n",
            "1000 = 2 (357) + 286\n",
            "357 = 1 (286) + 71\n",
            "286 = 4 (71) + 2\n",
            "71 = 35 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "358 = 0 (1000) + 358\n",
            "1000 = 2 (358) + 284\n",
            "358 = 1 (284) + 74\n",
            "284 = 3 (74) + 62\n",
            "74 = 1 (62) + 12\n",
            "62 = 5 (12) + 2\n",
            "12 = 6 (2) + 0\n",
            "359 = 0 (1000) + 359\n",
            "1000 = 2 (359) + 282\n",
            "359 = 1 (282) + 77\n",
            "282 = 3 (77) + 51\n",
            "77 = 1 (51) + 26\n",
            "51 = 1 (26) + 25\n",
            "26 = 1 (25) + 1\n",
            "25 = 25 (1) + 0\n",
            "360 = 0 (1000) + 360\n",
            "1000 = 2 (360) + 280\n",
            "360 = 1 (280) + 80\n",
            "280 = 3 (80) + 40\n",
            "80 = 2 (40) + 0\n",
            "361 = 0 (1000) + 361\n",
            "1000 = 2 (361) + 278\n",
            "361 = 1 (278) + 83\n",
            "278 = 3 (83) + 29\n",
            "83 = 2 (29) + 25\n",
            "29 = 1 (25) + 4\n",
            "25 = 6 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "362 = 0 (1000) + 362\n",
            "1000 = 2 (362) + 276\n",
            "362 = 1 (276) + 86\n",
            "276 = 3 (86) + 18\n",
            "86 = 4 (18) + 14\n",
            "18 = 1 (14) + 4\n",
            "14 = 3 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "363 = 0 (1000) + 363\n",
            "1000 = 2 (363) + 274\n",
            "363 = 1 (274) + 89\n",
            "274 = 3 (89) + 7\n",
            "89 = 12 (7) + 5\n",
            "7 = 1 (5) + 2\n",
            "5 = 2 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "364 = 0 (1000) + 364\n",
            "1000 = 2 (364) + 272\n",
            "364 = 1 (272) + 92\n",
            "272 = 2 (92) + 88\n",
            "92 = 1 (88) + 4\n",
            "88 = 22 (4) + 0\n",
            "365 = 0 (1000) + 365\n",
            "1000 = 2 (365) + 270\n",
            "365 = 1 (270) + 95\n",
            "270 = 2 (95) + 80\n",
            "95 = 1 (80) + 15\n",
            "80 = 5 (15) + 5\n",
            "15 = 3 (5) + 0\n",
            "366 = 0 (1000) + 366\n",
            "1000 = 2 (366) + 268\n",
            "366 = 1 (268) + 98\n",
            "268 = 2 (98) + 72\n",
            "98 = 1 (72) + 26\n",
            "72 = 2 (26) + 20\n",
            "26 = 1 (20) + 6\n",
            "20 = 3 (6) + 2\n",
            "6 = 3 (2) + 0\n",
            "367 = 0 (1000) + 367\n",
            "1000 = 2 (367) + 266\n",
            "367 = 1 (266) + 101\n",
            "266 = 2 (101) + 64\n",
            "101 = 1 (64) + 37\n",
            "64 = 1 (37) + 27\n",
            "37 = 1 (27) + 10\n",
            "27 = 2 (10) + 7\n",
            "10 = 1 (7) + 3\n",
            "7 = 2 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "368 = 0 (1000) + 368\n",
            "1000 = 2 (368) + 264\n",
            "368 = 1 (264) + 104\n",
            "264 = 2 (104) + 56\n",
            "104 = 1 (56) + 48\n",
            "56 = 1 (48) + 8\n",
            "48 = 6 (8) + 0\n",
            "369 = 0 (1000) + 369\n",
            "1000 = 2 (369) + 262\n",
            "369 = 1 (262) + 107\n",
            "262 = 2 (107) + 48\n",
            "107 = 2 (48) + 11\n",
            "48 = 4 (11) + 4\n",
            "11 = 2 (4) + 3\n",
            "4 = 1 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "370 = 0 (1000) + 370\n",
            "1000 = 2 (370) + 260\n",
            "370 = 1 (260) + 110\n",
            "260 = 2 (110) + 40\n",
            "110 = 2 (40) + 30\n",
            "40 = 1 (30) + 10\n",
            "30 = 3 (10) + 0\n",
            "371 = 0 (1000) + 371\n",
            "1000 = 2 (371) + 258\n",
            "371 = 1 (258) + 113\n",
            "258 = 2 (113) + 32\n",
            "113 = 3 (32) + 17\n",
            "32 = 1 (17) + 15\n",
            "17 = 1 (15) + 2\n",
            "15 = 7 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "372 = 0 (1000) + 372\n",
            "1000 = 2 (372) + 256\n",
            "372 = 1 (256) + 116\n",
            "256 = 2 (116) + 24\n",
            "116 = 4 (24) + 20\n",
            "24 = 1 (20) + 4\n",
            "20 = 5 (4) + 0\n",
            "373 = 0 (1000) + 373\n",
            "1000 = 2 (373) + 254\n",
            "373 = 1 (254) + 119\n",
            "254 = 2 (119) + 16\n",
            "119 = 7 (16) + 7\n",
            "16 = 2 (7) + 2\n",
            "7 = 3 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "374 = 0 (1000) + 374\n",
            "1000 = 2 (374) + 252\n",
            "374 = 1 (252) + 122\n",
            "252 = 2 (122) + 8\n",
            "122 = 15 (8) + 2\n",
            "8 = 4 (2) + 0\n",
            "375 = 0 (1000) + 375\n",
            "1000 = 2 (375) + 250\n",
            "375 = 1 (250) + 125\n",
            "250 = 2 (125) + 0\n",
            "376 = 0 (1000) + 376\n",
            "1000 = 2 (376) + 248\n",
            "376 = 1 (248) + 128\n",
            "248 = 1 (128) + 120\n",
            "128 = 1 (120) + 8\n",
            "120 = 15 (8) + 0\n",
            "377 = 0 (1000) + 377\n",
            "1000 = 2 (377) + 246\n",
            "377 = 1 (246) + 131\n",
            "246 = 1 (131) + 115\n",
            "131 = 1 (115) + 16\n",
            "115 = 7 (16) + 3\n",
            "16 = 5 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "378 = 0 (1000) + 378\n",
            "1000 = 2 (378) + 244\n",
            "378 = 1 (244) + 134\n",
            "244 = 1 (134) + 110\n",
            "134 = 1 (110) + 24\n",
            "110 = 4 (24) + 14\n",
            "24 = 1 (14) + 10\n",
            "14 = 1 (10) + 4\n",
            "10 = 2 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "379 = 0 (1000) + 379\n",
            "1000 = 2 (379) + 242\n",
            "379 = 1 (242) + 137\n",
            "242 = 1 (137) + 105\n",
            "137 = 1 (105) + 32\n",
            "105 = 3 (32) + 9\n",
            "32 = 3 (9) + 5\n",
            "9 = 1 (5) + 4\n",
            "5 = 1 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "380 = 0 (1000) + 380\n",
            "1000 = 2 (380) + 240\n",
            "380 = 1 (240) + 140\n",
            "240 = 1 (140) + 100\n",
            "140 = 1 (100) + 40\n",
            "100 = 2 (40) + 20\n",
            "40 = 2 (20) + 0\n",
            "381 = 0 (1000) + 381\n",
            "1000 = 2 (381) + 238\n",
            "381 = 1 (238) + 143\n",
            "238 = 1 (143) + 95\n",
            "143 = 1 (95) + 48\n",
            "95 = 1 (48) + 47\n",
            "48 = 1 (47) + 1\n",
            "47 = 47 (1) + 0\n",
            "382 = 0 (1000) + 382\n",
            "1000 = 2 (382) + 236\n",
            "382 = 1 (236) + 146\n",
            "236 = 1 (146) + 90\n",
            "146 = 1 (90) + 56\n",
            "90 = 1 (56) + 34\n",
            "56 = 1 (34) + 22\n",
            "34 = 1 (22) + 12\n",
            "22 = 1 (12) + 10\n",
            "12 = 1 (10) + 2\n",
            "10 = 5 (2) + 0\n",
            "383 = 0 (1000) + 383\n",
            "1000 = 2 (383) + 234\n",
            "383 = 1 (234) + 149\n",
            "234 = 1 (149) + 85\n",
            "149 = 1 (85) + 64\n",
            "85 = 1 (64) + 21\n",
            "64 = 3 (21) + 1\n",
            "21 = 21 (1) + 0\n",
            "384 = 0 (1000) + 384\n",
            "1000 = 2 (384) + 232\n",
            "384 = 1 (232) + 152\n",
            "232 = 1 (152) + 80\n",
            "152 = 1 (80) + 72\n",
            "80 = 1 (72) + 8\n",
            "72 = 9 (8) + 0\n",
            "385 = 0 (1000) + 385\n",
            "1000 = 2 (385) + 230\n",
            "385 = 1 (230) + 155\n",
            "230 = 1 (155) + 75\n",
            "155 = 2 (75) + 5\n",
            "75 = 15 (5) + 0\n",
            "386 = 0 (1000) + 386\n",
            "1000 = 2 (386) + 228\n",
            "386 = 1 (228) + 158\n",
            "228 = 1 (158) + 70\n",
            "158 = 2 (70) + 18\n",
            "70 = 3 (18) + 16\n",
            "18 = 1 (16) + 2\n",
            "16 = 8 (2) + 0\n",
            "387 = 0 (1000) + 387\n",
            "1000 = 2 (387) + 226\n",
            "387 = 1 (226) + 161\n",
            "226 = 1 (161) + 65\n",
            "161 = 2 (65) + 31\n",
            "65 = 2 (31) + 3\n",
            "31 = 10 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "388 = 0 (1000) + 388\n",
            "1000 = 2 (388) + 224\n",
            "388 = 1 (224) + 164\n",
            "224 = 1 (164) + 60\n",
            "164 = 2 (60) + 44\n",
            "60 = 1 (44) + 16\n",
            "44 = 2 (16) + 12\n",
            "16 = 1 (12) + 4\n",
            "12 = 3 (4) + 0\n",
            "389 = 0 (1000) + 389\n",
            "1000 = 2 (389) + 222\n",
            "389 = 1 (222) + 167\n",
            "222 = 1 (167) + 55\n",
            "167 = 3 (55) + 2\n",
            "55 = 27 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "390 = 0 (1000) + 390\n",
            "1000 = 2 (390) + 220\n",
            "390 = 1 (220) + 170\n",
            "220 = 1 (170) + 50\n",
            "170 = 3 (50) + 20\n",
            "50 = 2 (20) + 10\n",
            "20 = 2 (10) + 0\n",
            "391 = 0 (1000) + 391\n",
            "1000 = 2 (391) + 218\n",
            "391 = 1 (218) + 173\n",
            "218 = 1 (173) + 45\n",
            "173 = 3 (45) + 38\n",
            "45 = 1 (38) + 7\n",
            "38 = 5 (7) + 3\n",
            "7 = 2 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "392 = 0 (1000) + 392\n",
            "1000 = 2 (392) + 216\n",
            "392 = 1 (216) + 176\n",
            "216 = 1 (176) + 40\n",
            "176 = 4 (40) + 16\n",
            "40 = 2 (16) + 8\n",
            "16 = 2 (8) + 0\n",
            "393 = 0 (1000) + 393\n",
            "1000 = 2 (393) + 214\n",
            "393 = 1 (214) + 179\n",
            "214 = 1 (179) + 35\n",
            "179 = 5 (35) + 4\n",
            "35 = 8 (4) + 3\n",
            "4 = 1 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "394 = 0 (1000) + 394\n",
            "1000 = 2 (394) + 212\n",
            "394 = 1 (212) + 182\n",
            "212 = 1 (182) + 30\n",
            "182 = 6 (30) + 2\n",
            "30 = 15 (2) + 0\n",
            "395 = 0 (1000) + 395\n",
            "1000 = 2 (395) + 210\n",
            "395 = 1 (210) + 185\n",
            "210 = 1 (185) + 25\n",
            "185 = 7 (25) + 10\n",
            "25 = 2 (10) + 5\n",
            "10 = 2 (5) + 0\n",
            "396 = 0 (1000) + 396\n",
            "1000 = 2 (396) + 208\n",
            "396 = 1 (208) + 188\n",
            "208 = 1 (188) + 20\n",
            "188 = 9 (20) + 8\n",
            "20 = 2 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "397 = 0 (1000) + 397\n",
            "1000 = 2 (397) + 206\n",
            "397 = 1 (206) + 191\n",
            "206 = 1 (191) + 15\n",
            "191 = 12 (15) + 11\n",
            "15 = 1 (11) + 4\n",
            "11 = 2 (4) + 3\n",
            "4 = 1 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "398 = 0 (1000) + 398\n",
            "1000 = 2 (398) + 204\n",
            "398 = 1 (204) + 194\n",
            "204 = 1 (194) + 10\n",
            "194 = 19 (10) + 4\n",
            "10 = 2 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "399 = 0 (1000) + 399\n",
            "1000 = 2 (399) + 202\n",
            "399 = 1 (202) + 197\n",
            "202 = 1 (197) + 5\n",
            "197 = 39 (5) + 2\n",
            "5 = 2 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "400 = 0 (1000) + 400\n",
            "1000 = 2 (400) + 200\n",
            "400 = 2 (200) + 0\n",
            "401 = 0 (1000) + 401\n",
            "1000 = 2 (401) + 198\n",
            "401 = 2 (198) + 5\n",
            "198 = 39 (5) + 3\n",
            "5 = 1 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "402 = 0 (1000) + 402\n",
            "1000 = 2 (402) + 196\n",
            "402 = 2 (196) + 10\n",
            "196 = 19 (10) + 6\n",
            "10 = 1 (6) + 4\n",
            "6 = 1 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "403 = 0 (1000) + 403\n",
            "1000 = 2 (403) + 194\n",
            "403 = 2 (194) + 15\n",
            "194 = 12 (15) + 14\n",
            "15 = 1 (14) + 1\n",
            "14 = 14 (1) + 0\n",
            "404 = 0 (1000) + 404\n",
            "1000 = 2 (404) + 192\n",
            "404 = 2 (192) + 20\n",
            "192 = 9 (20) + 12\n",
            "20 = 1 (12) + 8\n",
            "12 = 1 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "405 = 0 (1000) + 405\n",
            "1000 = 2 (405) + 190\n",
            "405 = 2 (190) + 25\n",
            "190 = 7 (25) + 15\n",
            "25 = 1 (15) + 10\n",
            "15 = 1 (10) + 5\n",
            "10 = 2 (5) + 0\n",
            "406 = 0 (1000) + 406\n",
            "1000 = 2 (406) + 188\n",
            "406 = 2 (188) + 30\n",
            "188 = 6 (30) + 8\n",
            "30 = 3 (8) + 6\n",
            "8 = 1 (6) + 2\n",
            "6 = 3 (2) + 0\n",
            "407 = 0 (1000) + 407\n",
            "1000 = 2 (407) + 186\n",
            "407 = 2 (186) + 35\n",
            "186 = 5 (35) + 11\n",
            "35 = 3 (11) + 2\n",
            "11 = 5 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "408 = 0 (1000) + 408\n",
            "1000 = 2 (408) + 184\n",
            "408 = 2 (184) + 40\n",
            "184 = 4 (40) + 24\n",
            "40 = 1 (24) + 16\n",
            "24 = 1 (16) + 8\n",
            "16 = 2 (8) + 0\n",
            "409 = 0 (1000) + 409\n",
            "1000 = 2 (409) + 182\n",
            "409 = 2 (182) + 45\n",
            "182 = 4 (45) + 2\n",
            "45 = 22 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "410 = 0 (1000) + 410\n",
            "1000 = 2 (410) + 180\n",
            "410 = 2 (180) + 50\n",
            "180 = 3 (50) + 30\n",
            "50 = 1 (30) + 20\n",
            "30 = 1 (20) + 10\n",
            "20 = 2 (10) + 0\n",
            "411 = 0 (1000) + 411\n",
            "1000 = 2 (411) + 178\n",
            "411 = 2 (178) + 55\n",
            "178 = 3 (55) + 13\n",
            "55 = 4 (13) + 3\n",
            "13 = 4 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "412 = 0 (1000) + 412\n",
            "1000 = 2 (412) + 176\n",
            "412 = 2 (176) + 60\n",
            "176 = 2 (60) + 56\n",
            "60 = 1 (56) + 4\n",
            "56 = 14 (4) + 0\n",
            "413 = 0 (1000) + 413\n",
            "1000 = 2 (413) + 174\n",
            "413 = 2 (174) + 65\n",
            "174 = 2 (65) + 44\n",
            "65 = 1 (44) + 21\n",
            "44 = 2 (21) + 2\n",
            "21 = 10 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "414 = 0 (1000) + 414\n",
            "1000 = 2 (414) + 172\n",
            "414 = 2 (172) + 70\n",
            "172 = 2 (70) + 32\n",
            "70 = 2 (32) + 6\n",
            "32 = 5 (6) + 2\n",
            "6 = 3 (2) + 0\n",
            "415 = 0 (1000) + 415\n",
            "1000 = 2 (415) + 170\n",
            "415 = 2 (170) + 75\n",
            "170 = 2 (75) + 20\n",
            "75 = 3 (20) + 15\n",
            "20 = 1 (15) + 5\n",
            "15 = 3 (5) + 0\n",
            "416 = 0 (1000) + 416\n",
            "1000 = 2 (416) + 168\n",
            "416 = 2 (168) + 80\n",
            "168 = 2 (80) + 8\n",
            "80 = 10 (8) + 0\n",
            "417 = 0 (1000) + 417\n",
            "1000 = 2 (417) + 166\n",
            "417 = 2 (166) + 85\n",
            "166 = 1 (85) + 81\n",
            "85 = 1 (81) + 4\n",
            "81 = 20 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "418 = 0 (1000) + 418\n",
            "1000 = 2 (418) + 164\n",
            "418 = 2 (164) + 90\n",
            "164 = 1 (90) + 74\n",
            "90 = 1 (74) + 16\n",
            "74 = 4 (16) + 10\n",
            "16 = 1 (10) + 6\n",
            "10 = 1 (6) + 4\n",
            "6 = 1 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "419 = 0 (1000) + 419\n",
            "1000 = 2 (419) + 162\n",
            "419 = 2 (162) + 95\n",
            "162 = 1 (95) + 67\n",
            "95 = 1 (67) + 28\n",
            "67 = 2 (28) + 11\n",
            "28 = 2 (11) + 6\n",
            "11 = 1 (6) + 5\n",
            "6 = 1 (5) + 1\n",
            "5 = 5 (1) + 0\n",
            "420 = 0 (1000) + 420\n",
            "1000 = 2 (420) + 160\n",
            "420 = 2 (160) + 100\n",
            "160 = 1 (100) + 60\n",
            "100 = 1 (60) + 40\n",
            "60 = 1 (40) + 20\n",
            "40 = 2 (20) + 0\n",
            "421 = 0 (1000) + 421\n",
            "1000 = 2 (421) + 158\n",
            "421 = 2 (158) + 105\n",
            "158 = 1 (105) + 53\n",
            "105 = 1 (53) + 52\n",
            "53 = 1 (52) + 1\n",
            "52 = 52 (1) + 0\n",
            "422 = 0 (1000) + 422\n",
            "1000 = 2 (422) + 156\n",
            "422 = 2 (156) + 110\n",
            "156 = 1 (110) + 46\n",
            "110 = 2 (46) + 18\n",
            "46 = 2 (18) + 10\n",
            "18 = 1 (10) + 8\n",
            "10 = 1 (8) + 2\n",
            "8 = 4 (2) + 0\n",
            "423 = 0 (1000) + 423\n",
            "1000 = 2 (423) + 154\n",
            "423 = 2 (154) + 115\n",
            "154 = 1 (115) + 39\n",
            "115 = 2 (39) + 37\n",
            "39 = 1 (37) + 2\n",
            "37 = 18 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "424 = 0 (1000) + 424\n",
            "1000 = 2 (424) + 152\n",
            "424 = 2 (152) + 120\n",
            "152 = 1 (120) + 32\n",
            "120 = 3 (32) + 24\n",
            "32 = 1 (24) + 8\n",
            "24 = 3 (8) + 0\n",
            "425 = 0 (1000) + 425\n",
            "1000 = 2 (425) + 150\n",
            "425 = 2 (150) + 125\n",
            "150 = 1 (125) + 25\n",
            "125 = 5 (25) + 0\n",
            "426 = 0 (1000) + 426\n",
            "1000 = 2 (426) + 148\n",
            "426 = 2 (148) + 130\n",
            "148 = 1 (130) + 18\n",
            "130 = 7 (18) + 4\n",
            "18 = 4 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "427 = 0 (1000) + 427\n",
            "1000 = 2 (427) + 146\n",
            "427 = 2 (146) + 135\n",
            "146 = 1 (135) + 11\n",
            "135 = 12 (11) + 3\n",
            "11 = 3 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "428 = 0 (1000) + 428\n",
            "1000 = 2 (428) + 144\n",
            "428 = 2 (144) + 140\n",
            "144 = 1 (140) + 4\n",
            "140 = 35 (4) + 0\n",
            "429 = 0 (1000) + 429\n",
            "1000 = 2 (429) + 142\n",
            "429 = 3 (142) + 3\n",
            "142 = 47 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "430 = 0 (1000) + 430\n",
            "1000 = 2 (430) + 140\n",
            "430 = 3 (140) + 10\n",
            "140 = 14 (10) + 0\n",
            "431 = 0 (1000) + 431\n",
            "1000 = 2 (431) + 138\n",
            "431 = 3 (138) + 17\n",
            "138 = 8 (17) + 2\n",
            "17 = 8 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "432 = 0 (1000) + 432\n",
            "1000 = 2 (432) + 136\n",
            "432 = 3 (136) + 24\n",
            "136 = 5 (24) + 16\n",
            "24 = 1 (16) + 8\n",
            "16 = 2 (8) + 0\n",
            "433 = 0 (1000) + 433\n",
            "1000 = 2 (433) + 134\n",
            "433 = 3 (134) + 31\n",
            "134 = 4 (31) + 10\n",
            "31 = 3 (10) + 1\n",
            "10 = 10 (1) + 0\n",
            "434 = 0 (1000) + 434\n",
            "1000 = 2 (434) + 132\n",
            "434 = 3 (132) + 38\n",
            "132 = 3 (38) + 18\n",
            "38 = 2 (18) + 2\n",
            "18 = 9 (2) + 0\n",
            "435 = 0 (1000) + 435\n",
            "1000 = 2 (435) + 130\n",
            "435 = 3 (130) + 45\n",
            "130 = 2 (45) + 40\n",
            "45 = 1 (40) + 5\n",
            "40 = 8 (5) + 0\n",
            "436 = 0 (1000) + 436\n",
            "1000 = 2 (436) + 128\n",
            "436 = 3 (128) + 52\n",
            "128 = 2 (52) + 24\n",
            "52 = 2 (24) + 4\n",
            "24 = 6 (4) + 0\n",
            "437 = 0 (1000) + 437\n",
            "1000 = 2 (437) + 126\n",
            "437 = 3 (126) + 59\n",
            "126 = 2 (59) + 8\n",
            "59 = 7 (8) + 3\n",
            "8 = 2 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "438 = 0 (1000) + 438\n",
            "1000 = 2 (438) + 124\n",
            "438 = 3 (124) + 66\n",
            "124 = 1 (66) + 58\n",
            "66 = 1 (58) + 8\n",
            "58 = 7 (8) + 2\n",
            "8 = 4 (2) + 0\n",
            "439 = 0 (1000) + 439\n",
            "1000 = 2 (439) + 122\n",
            "439 = 3 (122) + 73\n",
            "122 = 1 (73) + 49\n",
            "73 = 1 (49) + 24\n",
            "49 = 2 (24) + 1\n",
            "24 = 24 (1) + 0\n",
            "440 = 0 (1000) + 440\n",
            "1000 = 2 (440) + 120\n",
            "440 = 3 (120) + 80\n",
            "120 = 1 (80) + 40\n",
            "80 = 2 (40) + 0\n",
            "441 = 0 (1000) + 441\n",
            "1000 = 2 (441) + 118\n",
            "441 = 3 (118) + 87\n",
            "118 = 1 (87) + 31\n",
            "87 = 2 (31) + 25\n",
            "31 = 1 (25) + 6\n",
            "25 = 4 (6) + 1\n",
            "6 = 6 (1) + 0\n",
            "442 = 0 (1000) + 442\n",
            "1000 = 2 (442) + 116\n",
            "442 = 3 (116) + 94\n",
            "116 = 1 (94) + 22\n",
            "94 = 4 (22) + 6\n",
            "22 = 3 (6) + 4\n",
            "6 = 1 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "443 = 0 (1000) + 443\n",
            "1000 = 2 (443) + 114\n",
            "443 = 3 (114) + 101\n",
            "114 = 1 (101) + 13\n",
            "101 = 7 (13) + 10\n",
            "13 = 1 (10) + 3\n",
            "10 = 3 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "444 = 0 (1000) + 444\n",
            "1000 = 2 (444) + 112\n",
            "444 = 3 (112) + 108\n",
            "112 = 1 (108) + 4\n",
            "108 = 27 (4) + 0\n",
            "445 = 0 (1000) + 445\n",
            "1000 = 2 (445) + 110\n",
            "445 = 4 (110) + 5\n",
            "110 = 22 (5) + 0\n",
            "446 = 0 (1000) + 446\n",
            "1000 = 2 (446) + 108\n",
            "446 = 4 (108) + 14\n",
            "108 = 7 (14) + 10\n",
            "14 = 1 (10) + 4\n",
            "10 = 2 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "447 = 0 (1000) + 447\n",
            "1000 = 2 (447) + 106\n",
            "447 = 4 (106) + 23\n",
            "106 = 4 (23) + 14\n",
            "23 = 1 (14) + 9\n",
            "14 = 1 (9) + 5\n",
            "9 = 1 (5) + 4\n",
            "5 = 1 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "448 = 0 (1000) + 448\n",
            "1000 = 2 (448) + 104\n",
            "448 = 4 (104) + 32\n",
            "104 = 3 (32) + 8\n",
            "32 = 4 (8) + 0\n",
            "449 = 0 (1000) + 449\n",
            "1000 = 2 (449) + 102\n",
            "449 = 4 (102) + 41\n",
            "102 = 2 (41) + 20\n",
            "41 = 2 (20) + 1\n",
            "20 = 20 (1) + 0\n",
            "450 = 0 (1000) + 450\n",
            "1000 = 2 (450) + 100\n",
            "450 = 4 (100) + 50\n",
            "100 = 2 (50) + 0\n",
            "451 = 0 (1000) + 451\n",
            "1000 = 2 (451) + 98\n",
            "451 = 4 (98) + 59\n",
            "98 = 1 (59) + 39\n",
            "59 = 1 (39) + 20\n",
            "39 = 1 (20) + 19\n",
            "20 = 1 (19) + 1\n",
            "19 = 19 (1) + 0\n",
            "452 = 0 (1000) + 452\n",
            "1000 = 2 (452) + 96\n",
            "452 = 4 (96) + 68\n",
            "96 = 1 (68) + 28\n",
            "68 = 2 (28) + 12\n",
            "28 = 2 (12) + 4\n",
            "12 = 3 (4) + 0\n",
            "453 = 0 (1000) + 453\n",
            "1000 = 2 (453) + 94\n",
            "453 = 4 (94) + 77\n",
            "94 = 1 (77) + 17\n",
            "77 = 4 (17) + 9\n",
            "17 = 1 (9) + 8\n",
            "9 = 1 (8) + 1\n",
            "8 = 8 (1) + 0\n",
            "454 = 0 (1000) + 454\n",
            "1000 = 2 (454) + 92\n",
            "454 = 4 (92) + 86\n",
            "92 = 1 (86) + 6\n",
            "86 = 14 (6) + 2\n",
            "6 = 3 (2) + 0\n",
            "455 = 0 (1000) + 455\n",
            "1000 = 2 (455) + 90\n",
            "455 = 5 (90) + 5\n",
            "90 = 18 (5) + 0\n",
            "456 = 0 (1000) + 456\n",
            "1000 = 2 (456) + 88\n",
            "456 = 5 (88) + 16\n",
            "88 = 5 (16) + 8\n",
            "16 = 2 (8) + 0\n",
            "457 = 0 (1000) + 457\n",
            "1000 = 2 (457) + 86\n",
            "457 = 5 (86) + 27\n",
            "86 = 3 (27) + 5\n",
            "27 = 5 (5) + 2\n",
            "5 = 2 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "458 = 0 (1000) + 458\n",
            "1000 = 2 (458) + 84\n",
            "458 = 5 (84) + 38\n",
            "84 = 2 (38) + 8\n",
            "38 = 4 (8) + 6\n",
            "8 = 1 (6) + 2\n",
            "6 = 3 (2) + 0\n",
            "459 = 0 (1000) + 459\n",
            "1000 = 2 (459) + 82\n",
            "459 = 5 (82) + 49\n",
            "82 = 1 (49) + 33\n",
            "49 = 1 (33) + 16\n",
            "33 = 2 (16) + 1\n",
            "16 = 16 (1) + 0\n",
            "460 = 0 (1000) + 460\n",
            "1000 = 2 (460) + 80\n",
            "460 = 5 (80) + 60\n",
            "80 = 1 (60) + 20\n",
            "60 = 3 (20) + 0\n",
            "461 = 0 (1000) + 461\n",
            "1000 = 2 (461) + 78\n",
            "461 = 5 (78) + 71\n",
            "78 = 1 (71) + 7\n",
            "71 = 10 (7) + 1\n",
            "7 = 7 (1) + 0\n",
            "462 = 0 (1000) + 462\n",
            "1000 = 2 (462) + 76\n",
            "462 = 6 (76) + 6\n",
            "76 = 12 (6) + 4\n",
            "6 = 1 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "463 = 0 (1000) + 463\n",
            "1000 = 2 (463) + 74\n",
            "463 = 6 (74) + 19\n",
            "74 = 3 (19) + 17\n",
            "19 = 1 (17) + 2\n",
            "17 = 8 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "464 = 0 (1000) + 464\n",
            "1000 = 2 (464) + 72\n",
            "464 = 6 (72) + 32\n",
            "72 = 2 (32) + 8\n",
            "32 = 4 (8) + 0\n",
            "465 = 0 (1000) + 465\n",
            "1000 = 2 (465) + 70\n",
            "465 = 6 (70) + 45\n",
            "70 = 1 (45) + 25\n",
            "45 = 1 (25) + 20\n",
            "25 = 1 (20) + 5\n",
            "20 = 4 (5) + 0\n",
            "466 = 0 (1000) + 466\n",
            "1000 = 2 (466) + 68\n",
            "466 = 6 (68) + 58\n",
            "68 = 1 (58) + 10\n",
            "58 = 5 (10) + 8\n",
            "10 = 1 (8) + 2\n",
            "8 = 4 (2) + 0\n",
            "467 = 0 (1000) + 467\n",
            "1000 = 2 (467) + 66\n",
            "467 = 7 (66) + 5\n",
            "66 = 13 (5) + 1\n",
            "5 = 5 (1) + 0\n",
            "468 = 0 (1000) + 468\n",
            "1000 = 2 (468) + 64\n",
            "468 = 7 (64) + 20\n",
            "64 = 3 (20) + 4\n",
            "20 = 5 (4) + 0\n",
            "469 = 0 (1000) + 469\n",
            "1000 = 2 (469) + 62\n",
            "469 = 7 (62) + 35\n",
            "62 = 1 (35) + 27\n",
            "35 = 1 (27) + 8\n",
            "27 = 3 (8) + 3\n",
            "8 = 2 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "470 = 0 (1000) + 470\n",
            "1000 = 2 (470) + 60\n",
            "470 = 7 (60) + 50\n",
            "60 = 1 (50) + 10\n",
            "50 = 5 (10) + 0\n",
            "471 = 0 (1000) + 471\n",
            "1000 = 2 (471) + 58\n",
            "471 = 8 (58) + 7\n",
            "58 = 8 (7) + 2\n",
            "7 = 3 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "472 = 0 (1000) + 472\n",
            "1000 = 2 (472) + 56\n",
            "472 = 8 (56) + 24\n",
            "56 = 2 (24) + 8\n",
            "24 = 3 (8) + 0\n",
            "473 = 0 (1000) + 473\n",
            "1000 = 2 (473) + 54\n",
            "473 = 8 (54) + 41\n",
            "54 = 1 (41) + 13\n",
            "41 = 3 (13) + 2\n",
            "13 = 6 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "474 = 0 (1000) + 474\n",
            "1000 = 2 (474) + 52\n",
            "474 = 9 (52) + 6\n",
            "52 = 8 (6) + 4\n",
            "6 = 1 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "475 = 0 (1000) + 475\n",
            "1000 = 2 (475) + 50\n",
            "475 = 9 (50) + 25\n",
            "50 = 2 (25) + 0\n",
            "476 = 0 (1000) + 476\n",
            "1000 = 2 (476) + 48\n",
            "476 = 9 (48) + 44\n",
            "48 = 1 (44) + 4\n",
            "44 = 11 (4) + 0\n",
            "477 = 0 (1000) + 477\n",
            "1000 = 2 (477) + 46\n",
            "477 = 10 (46) + 17\n",
            "46 = 2 (17) + 12\n",
            "17 = 1 (12) + 5\n",
            "12 = 2 (5) + 2\n",
            "5 = 2 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "478 = 0 (1000) + 478\n",
            "1000 = 2 (478) + 44\n",
            "478 = 10 (44) + 38\n",
            "44 = 1 (38) + 6\n",
            "38 = 6 (6) + 2\n",
            "6 = 3 (2) + 0\n",
            "479 = 0 (1000) + 479\n",
            "1000 = 2 (479) + 42\n",
            "479 = 11 (42) + 17\n",
            "42 = 2 (17) + 8\n",
            "17 = 2 (8) + 1\n",
            "8 = 8 (1) + 0\n",
            "480 = 0 (1000) + 480\n",
            "1000 = 2 (480) + 40\n",
            "480 = 12 (40) + 0\n",
            "481 = 0 (1000) + 481\n",
            "1000 = 2 (481) + 38\n",
            "481 = 12 (38) + 25\n",
            "38 = 1 (25) + 13\n",
            "25 = 1 (13) + 12\n",
            "13 = 1 (12) + 1\n",
            "12 = 12 (1) + 0\n",
            "482 = 0 (1000) + 482\n",
            "1000 = 2 (482) + 36\n",
            "482 = 13 (36) + 14\n",
            "36 = 2 (14) + 8\n",
            "14 = 1 (8) + 6\n",
            "8 = 1 (6) + 2\n",
            "6 = 3 (2) + 0\n",
            "483 = 0 (1000) + 483\n",
            "1000 = 2 (483) + 34\n",
            "483 = 14 (34) + 7\n",
            "34 = 4 (7) + 6\n",
            "7 = 1 (6) + 1\n",
            "6 = 6 (1) + 0\n",
            "484 = 0 (1000) + 484\n",
            "1000 = 2 (484) + 32\n",
            "484 = 15 (32) + 4\n",
            "32 = 8 (4) + 0\n",
            "485 = 0 (1000) + 485\n",
            "1000 = 2 (485) + 30\n",
            "485 = 16 (30) + 5\n",
            "30 = 6 (5) + 0\n",
            "486 = 0 (1000) + 486\n",
            "1000 = 2 (486) + 28\n",
            "486 = 17 (28) + 10\n",
            "28 = 2 (10) + 8\n",
            "10 = 1 (8) + 2\n",
            "8 = 4 (2) + 0\n",
            "487 = 0 (1000) + 487\n",
            "1000 = 2 (487) + 26\n",
            "487 = 18 (26) + 19\n",
            "26 = 1 (19) + 7\n",
            "19 = 2 (7) + 5\n",
            "7 = 1 (5) + 2\n",
            "5 = 2 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "488 = 0 (1000) + 488\n",
            "1000 = 2 (488) + 24\n",
            "488 = 20 (24) + 8\n",
            "24 = 3 (8) + 0\n",
            "489 = 0 (1000) + 489\n",
            "1000 = 2 (489) + 22\n",
            "489 = 22 (22) + 5\n",
            "22 = 4 (5) + 2\n",
            "5 = 2 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "490 = 0 (1000) + 490\n",
            "1000 = 2 (490) + 20\n",
            "490 = 24 (20) + 10\n",
            "20 = 2 (10) + 0\n",
            "491 = 0 (1000) + 491\n",
            "1000 = 2 (491) + 18\n",
            "491 = 27 (18) + 5\n",
            "18 = 3 (5) + 3\n",
            "5 = 1 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "492 = 0 (1000) + 492\n",
            "1000 = 2 (492) + 16\n",
            "492 = 30 (16) + 12\n",
            "16 = 1 (12) + 4\n",
            "12 = 3 (4) + 0\n",
            "493 = 0 (1000) + 493\n",
            "1000 = 2 (493) + 14\n",
            "493 = 35 (14) + 3\n",
            "14 = 4 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "494 = 0 (1000) + 494\n",
            "1000 = 2 (494) + 12\n",
            "494 = 41 (12) + 2\n",
            "12 = 6 (2) + 0\n",
            "495 = 0 (1000) + 495\n",
            "1000 = 2 (495) + 10\n",
            "495 = 49 (10) + 5\n",
            "10 = 2 (5) + 0\n",
            "496 = 0 (1000) + 496\n",
            "1000 = 2 (496) + 8\n",
            "496 = 62 (8) + 0\n",
            "497 = 0 (1000) + 497\n",
            "1000 = 2 (497) + 6\n",
            "497 = 82 (6) + 5\n",
            "6 = 1 (5) + 1\n",
            "5 = 5 (1) + 0\n",
            "498 = 0 (1000) + 498\n",
            "1000 = 2 (498) + 4\n",
            "498 = 124 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "499 = 0 (1000) + 499\n",
            "1000 = 2 (499) + 2\n",
            "499 = 249 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "500 = 0 (1000) + 500\n",
            "1000 = 2 (500) + 0\n",
            "501 = 0 (1000) + 501\n",
            "1000 = 1 (501) + 499\n",
            "501 = 1 (499) + 2\n",
            "499 = 249 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "502 = 0 (1000) + 502\n",
            "1000 = 1 (502) + 498\n",
            "502 = 1 (498) + 4\n",
            "498 = 124 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "503 = 0 (1000) + 503\n",
            "1000 = 1 (503) + 497\n",
            "503 = 1 (497) + 6\n",
            "497 = 82 (6) + 5\n",
            "6 = 1 (5) + 1\n",
            "5 = 5 (1) + 0\n",
            "504 = 0 (1000) + 504\n",
            "1000 = 1 (504) + 496\n",
            "504 = 1 (496) + 8\n",
            "496 = 62 (8) + 0\n",
            "505 = 0 (1000) + 505\n",
            "1000 = 1 (505) + 495\n",
            "505 = 1 (495) + 10\n",
            "495 = 49 (10) + 5\n",
            "10 = 2 (5) + 0\n",
            "506 = 0 (1000) + 506\n",
            "1000 = 1 (506) + 494\n",
            "506 = 1 (494) + 12\n",
            "494 = 41 (12) + 2\n",
            "12 = 6 (2) + 0\n",
            "507 = 0 (1000) + 507\n",
            "1000 = 1 (507) + 493\n",
            "507 = 1 (493) + 14\n",
            "493 = 35 (14) + 3\n",
            "14 = 4 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "508 = 0 (1000) + 508\n",
            "1000 = 1 (508) + 492\n",
            "508 = 1 (492) + 16\n",
            "492 = 30 (16) + 12\n",
            "16 = 1 (12) + 4\n",
            "12 = 3 (4) + 0\n",
            "509 = 0 (1000) + 509\n",
            "1000 = 1 (509) + 491\n",
            "509 = 1 (491) + 18\n",
            "491 = 27 (18) + 5\n",
            "18 = 3 (5) + 3\n",
            "5 = 1 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "510 = 0 (1000) + 510\n",
            "1000 = 1 (510) + 490\n",
            "510 = 1 (490) + 20\n",
            "490 = 24 (20) + 10\n",
            "20 = 2 (10) + 0\n",
            "511 = 0 (1000) + 511\n",
            "1000 = 1 (511) + 489\n",
            "511 = 1 (489) + 22\n",
            "489 = 22 (22) + 5\n",
            "22 = 4 (5) + 2\n",
            "5 = 2 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "512 = 0 (1000) + 512\n",
            "1000 = 1 (512) + 488\n",
            "512 = 1 (488) + 24\n",
            "488 = 20 (24) + 8\n",
            "24 = 3 (8) + 0\n",
            "513 = 0 (1000) + 513\n",
            "1000 = 1 (513) + 487\n",
            "513 = 1 (487) + 26\n",
            "487 = 18 (26) + 19\n",
            "26 = 1 (19) + 7\n",
            "19 = 2 (7) + 5\n",
            "7 = 1 (5) + 2\n",
            "5 = 2 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "514 = 0 (1000) + 514\n",
            "1000 = 1 (514) + 486\n",
            "514 = 1 (486) + 28\n",
            "486 = 17 (28) + 10\n",
            "28 = 2 (10) + 8\n",
            "10 = 1 (8) + 2\n",
            "8 = 4 (2) + 0\n",
            "515 = 0 (1000) + 515\n",
            "1000 = 1 (515) + 485\n",
            "515 = 1 (485) + 30\n",
            "485 = 16 (30) + 5\n",
            "30 = 6 (5) + 0\n",
            "516 = 0 (1000) + 516\n",
            "1000 = 1 (516) + 484\n",
            "516 = 1 (484) + 32\n",
            "484 = 15 (32) + 4\n",
            "32 = 8 (4) + 0\n",
            "517 = 0 (1000) + 517\n",
            "1000 = 1 (517) + 483\n",
            "517 = 1 (483) + 34\n",
            "483 = 14 (34) + 7\n",
            "34 = 4 (7) + 6\n",
            "7 = 1 (6) + 1\n",
            "6 = 6 (1) + 0\n",
            "518 = 0 (1000) + 518\n",
            "1000 = 1 (518) + 482\n",
            "518 = 1 (482) + 36\n",
            "482 = 13 (36) + 14\n",
            "36 = 2 (14) + 8\n",
            "14 = 1 (8) + 6\n",
            "8 = 1 (6) + 2\n",
            "6 = 3 (2) + 0\n",
            "519 = 0 (1000) + 519\n",
            "1000 = 1 (519) + 481\n",
            "519 = 1 (481) + 38\n",
            "481 = 12 (38) + 25\n",
            "38 = 1 (25) + 13\n",
            "25 = 1 (13) + 12\n",
            "13 = 1 (12) + 1\n",
            "12 = 12 (1) + 0\n",
            "520 = 0 (1000) + 520\n",
            "1000 = 1 (520) + 480\n",
            "520 = 1 (480) + 40\n",
            "480 = 12 (40) + 0\n",
            "521 = 0 (1000) + 521\n",
            "1000 = 1 (521) + 479\n",
            "521 = 1 (479) + 42\n",
            "479 = 11 (42) + 17\n",
            "42 = 2 (17) + 8\n",
            "17 = 2 (8) + 1\n",
            "8 = 8 (1) + 0\n",
            "522 = 0 (1000) + 522\n",
            "1000 = 1 (522) + 478\n",
            "522 = 1 (478) + 44\n",
            "478 = 10 (44) + 38\n",
            "44 = 1 (38) + 6\n",
            "38 = 6 (6) + 2\n",
            "6 = 3 (2) + 0\n",
            "523 = 0 (1000) + 523\n",
            "1000 = 1 (523) + 477\n",
            "523 = 1 (477) + 46\n",
            "477 = 10 (46) + 17\n",
            "46 = 2 (17) + 12\n",
            "17 = 1 (12) + 5\n",
            "12 = 2 (5) + 2\n",
            "5 = 2 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "524 = 0 (1000) + 524\n",
            "1000 = 1 (524) + 476\n",
            "524 = 1 (476) + 48\n",
            "476 = 9 (48) + 44\n",
            "48 = 1 (44) + 4\n",
            "44 = 11 (4) + 0\n",
            "525 = 0 (1000) + 525\n",
            "1000 = 1 (525) + 475\n",
            "525 = 1 (475) + 50\n",
            "475 = 9 (50) + 25\n",
            "50 = 2 (25) + 0\n",
            "526 = 0 (1000) + 526\n",
            "1000 = 1 (526) + 474\n",
            "526 = 1 (474) + 52\n",
            "474 = 9 (52) + 6\n",
            "52 = 8 (6) + 4\n",
            "6 = 1 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "527 = 0 (1000) + 527\n",
            "1000 = 1 (527) + 473\n",
            "527 = 1 (473) + 54\n",
            "473 = 8 (54) + 41\n",
            "54 = 1 (41) + 13\n",
            "41 = 3 (13) + 2\n",
            "13 = 6 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "528 = 0 (1000) + 528\n",
            "1000 = 1 (528) + 472\n",
            "528 = 1 (472) + 56\n",
            "472 = 8 (56) + 24\n",
            "56 = 2 (24) + 8\n",
            "24 = 3 (8) + 0\n",
            "529 = 0 (1000) + 529\n",
            "1000 = 1 (529) + 471\n",
            "529 = 1 (471) + 58\n",
            "471 = 8 (58) + 7\n",
            "58 = 8 (7) + 2\n",
            "7 = 3 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "530 = 0 (1000) + 530\n",
            "1000 = 1 (530) + 470\n",
            "530 = 1 (470) + 60\n",
            "470 = 7 (60) + 50\n",
            "60 = 1 (50) + 10\n",
            "50 = 5 (10) + 0\n",
            "531 = 0 (1000) + 531\n",
            "1000 = 1 (531) + 469\n",
            "531 = 1 (469) + 62\n",
            "469 = 7 (62) + 35\n",
            "62 = 1 (35) + 27\n",
            "35 = 1 (27) + 8\n",
            "27 = 3 (8) + 3\n",
            "8 = 2 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "532 = 0 (1000) + 532\n",
            "1000 = 1 (532) + 468\n",
            "532 = 1 (468) + 64\n",
            "468 = 7 (64) + 20\n",
            "64 = 3 (20) + 4\n",
            "20 = 5 (4) + 0\n",
            "533 = 0 (1000) + 533\n",
            "1000 = 1 (533) + 467\n",
            "533 = 1 (467) + 66\n",
            "467 = 7 (66) + 5\n",
            "66 = 13 (5) + 1\n",
            "5 = 5 (1) + 0\n",
            "534 = 0 (1000) + 534\n",
            "1000 = 1 (534) + 466\n",
            "534 = 1 (466) + 68\n",
            "466 = 6 (68) + 58\n",
            "68 = 1 (58) + 10\n",
            "58 = 5 (10) + 8\n",
            "10 = 1 (8) + 2\n",
            "8 = 4 (2) + 0\n",
            "535 = 0 (1000) + 535\n",
            "1000 = 1 (535) + 465\n",
            "535 = 1 (465) + 70\n",
            "465 = 6 (70) + 45\n",
            "70 = 1 (45) + 25\n",
            "45 = 1 (25) + 20\n",
            "25 = 1 (20) + 5\n",
            "20 = 4 (5) + 0\n",
            "536 = 0 (1000) + 536\n",
            "1000 = 1 (536) + 464\n",
            "536 = 1 (464) + 72\n",
            "464 = 6 (72) + 32\n",
            "72 = 2 (32) + 8\n",
            "32 = 4 (8) + 0\n",
            "537 = 0 (1000) + 537\n",
            "1000 = 1 (537) + 463\n",
            "537 = 1 (463) + 74\n",
            "463 = 6 (74) + 19\n",
            "74 = 3 (19) + 17\n",
            "19 = 1 (17) + 2\n",
            "17 = 8 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "538 = 0 (1000) + 538\n",
            "1000 = 1 (538) + 462\n",
            "538 = 1 (462) + 76\n",
            "462 = 6 (76) + 6\n",
            "76 = 12 (6) + 4\n",
            "6 = 1 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "539 = 0 (1000) + 539\n",
            "1000 = 1 (539) + 461\n",
            "539 = 1 (461) + 78\n",
            "461 = 5 (78) + 71\n",
            "78 = 1 (71) + 7\n",
            "71 = 10 (7) + 1\n",
            "7 = 7 (1) + 0\n",
            "540 = 0 (1000) + 540\n",
            "1000 = 1 (540) + 460\n",
            "540 = 1 (460) + 80\n",
            "460 = 5 (80) + 60\n",
            "80 = 1 (60) + 20\n",
            "60 = 3 (20) + 0\n",
            "541 = 0 (1000) + 541\n",
            "1000 = 1 (541) + 459\n",
            "541 = 1 (459) + 82\n",
            "459 = 5 (82) + 49\n",
            "82 = 1 (49) + 33\n",
            "49 = 1 (33) + 16\n",
            "33 = 2 (16) + 1\n",
            "16 = 16 (1) + 0\n",
            "542 = 0 (1000) + 542\n",
            "1000 = 1 (542) + 458\n",
            "542 = 1 (458) + 84\n",
            "458 = 5 (84) + 38\n",
            "84 = 2 (38) + 8\n",
            "38 = 4 (8) + 6\n",
            "8 = 1 (6) + 2\n",
            "6 = 3 (2) + 0\n",
            "543 = 0 (1000) + 543\n",
            "1000 = 1 (543) + 457\n",
            "543 = 1 (457) + 86\n",
            "457 = 5 (86) + 27\n",
            "86 = 3 (27) + 5\n",
            "27 = 5 (5) + 2\n",
            "5 = 2 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "544 = 0 (1000) + 544\n",
            "1000 = 1 (544) + 456\n",
            "544 = 1 (456) + 88\n",
            "456 = 5 (88) + 16\n",
            "88 = 5 (16) + 8\n",
            "16 = 2 (8) + 0\n",
            "545 = 0 (1000) + 545\n",
            "1000 = 1 (545) + 455\n",
            "545 = 1 (455) + 90\n",
            "455 = 5 (90) + 5\n",
            "90 = 18 (5) + 0\n",
            "546 = 0 (1000) + 546\n",
            "1000 = 1 (546) + 454\n",
            "546 = 1 (454) + 92\n",
            "454 = 4 (92) + 86\n",
            "92 = 1 (86) + 6\n",
            "86 = 14 (6) + 2\n",
            "6 = 3 (2) + 0\n",
            "547 = 0 (1000) + 547\n",
            "1000 = 1 (547) + 453\n",
            "547 = 1 (453) + 94\n",
            "453 = 4 (94) + 77\n",
            "94 = 1 (77) + 17\n",
            "77 = 4 (17) + 9\n",
            "17 = 1 (9) + 8\n",
            "9 = 1 (8) + 1\n",
            "8 = 8 (1) + 0\n",
            "548 = 0 (1000) + 548\n",
            "1000 = 1 (548) + 452\n",
            "548 = 1 (452) + 96\n",
            "452 = 4 (96) + 68\n",
            "96 = 1 (68) + 28\n",
            "68 = 2 (28) + 12\n",
            "28 = 2 (12) + 4\n",
            "12 = 3 (4) + 0\n",
            "549 = 0 (1000) + 549\n",
            "1000 = 1 (549) + 451\n",
            "549 = 1 (451) + 98\n",
            "451 = 4 (98) + 59\n",
            "98 = 1 (59) + 39\n",
            "59 = 1 (39) + 20\n",
            "39 = 1 (20) + 19\n",
            "20 = 1 (19) + 1\n",
            "19 = 19 (1) + 0\n",
            "550 = 0 (1000) + 550\n",
            "1000 = 1 (550) + 450\n",
            "550 = 1 (450) + 100\n",
            "450 = 4 (100) + 50\n",
            "100 = 2 (50) + 0\n",
            "551 = 0 (1000) + 551\n",
            "1000 = 1 (551) + 449\n",
            "551 = 1 (449) + 102\n",
            "449 = 4 (102) + 41\n",
            "102 = 2 (41) + 20\n",
            "41 = 2 (20) + 1\n",
            "20 = 20 (1) + 0\n",
            "552 = 0 (1000) + 552\n",
            "1000 = 1 (552) + 448\n",
            "552 = 1 (448) + 104\n",
            "448 = 4 (104) + 32\n",
            "104 = 3 (32) + 8\n",
            "32 = 4 (8) + 0\n",
            "553 = 0 (1000) + 553\n",
            "1000 = 1 (553) + 447\n",
            "553 = 1 (447) + 106\n",
            "447 = 4 (106) + 23\n",
            "106 = 4 (23) + 14\n",
            "23 = 1 (14) + 9\n",
            "14 = 1 (9) + 5\n",
            "9 = 1 (5) + 4\n",
            "5 = 1 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "554 = 0 (1000) + 554\n",
            "1000 = 1 (554) + 446\n",
            "554 = 1 (446) + 108\n",
            "446 = 4 (108) + 14\n",
            "108 = 7 (14) + 10\n",
            "14 = 1 (10) + 4\n",
            "10 = 2 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "555 = 0 (1000) + 555\n",
            "1000 = 1 (555) + 445\n",
            "555 = 1 (445) + 110\n",
            "445 = 4 (110) + 5\n",
            "110 = 22 (5) + 0\n",
            "556 = 0 (1000) + 556\n",
            "1000 = 1 (556) + 444\n",
            "556 = 1 (444) + 112\n",
            "444 = 3 (112) + 108\n",
            "112 = 1 (108) + 4\n",
            "108 = 27 (4) + 0\n",
            "557 = 0 (1000) + 557\n",
            "1000 = 1 (557) + 443\n",
            "557 = 1 (443) + 114\n",
            "443 = 3 (114) + 101\n",
            "114 = 1 (101) + 13\n",
            "101 = 7 (13) + 10\n",
            "13 = 1 (10) + 3\n",
            "10 = 3 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "558 = 0 (1000) + 558\n",
            "1000 = 1 (558) + 442\n",
            "558 = 1 (442) + 116\n",
            "442 = 3 (116) + 94\n",
            "116 = 1 (94) + 22\n",
            "94 = 4 (22) + 6\n",
            "22 = 3 (6) + 4\n",
            "6 = 1 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "559 = 0 (1000) + 559\n",
            "1000 = 1 (559) + 441\n",
            "559 = 1 (441) + 118\n",
            "441 = 3 (118) + 87\n",
            "118 = 1 (87) + 31\n",
            "87 = 2 (31) + 25\n",
            "31 = 1 (25) + 6\n",
            "25 = 4 (6) + 1\n",
            "6 = 6 (1) + 0\n",
            "560 = 0 (1000) + 560\n",
            "1000 = 1 (560) + 440\n",
            "560 = 1 (440) + 120\n",
            "440 = 3 (120) + 80\n",
            "120 = 1 (80) + 40\n",
            "80 = 2 (40) + 0\n",
            "561 = 0 (1000) + 561\n",
            "1000 = 1 (561) + 439\n",
            "561 = 1 (439) + 122\n",
            "439 = 3 (122) + 73\n",
            "122 = 1 (73) + 49\n",
            "73 = 1 (49) + 24\n",
            "49 = 2 (24) + 1\n",
            "24 = 24 (1) + 0\n",
            "562 = 0 (1000) + 562\n",
            "1000 = 1 (562) + 438\n",
            "562 = 1 (438) + 124\n",
            "438 = 3 (124) + 66\n",
            "124 = 1 (66) + 58\n",
            "66 = 1 (58) + 8\n",
            "58 = 7 (8) + 2\n",
            "8 = 4 (2) + 0\n",
            "563 = 0 (1000) + 563\n",
            "1000 = 1 (563) + 437\n",
            "563 = 1 (437) + 126\n",
            "437 = 3 (126) + 59\n",
            "126 = 2 (59) + 8\n",
            "59 = 7 (8) + 3\n",
            "8 = 2 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "564 = 0 (1000) + 564\n",
            "1000 = 1 (564) + 436\n",
            "564 = 1 (436) + 128\n",
            "436 = 3 (128) + 52\n",
            "128 = 2 (52) + 24\n",
            "52 = 2 (24) + 4\n",
            "24 = 6 (4) + 0\n",
            "565 = 0 (1000) + 565\n",
            "1000 = 1 (565) + 435\n",
            "565 = 1 (435) + 130\n",
            "435 = 3 (130) + 45\n",
            "130 = 2 (45) + 40\n",
            "45 = 1 (40) + 5\n",
            "40 = 8 (5) + 0\n",
            "566 = 0 (1000) + 566\n",
            "1000 = 1 (566) + 434\n",
            "566 = 1 (434) + 132\n",
            "434 = 3 (132) + 38\n",
            "132 = 3 (38) + 18\n",
            "38 = 2 (18) + 2\n",
            "18 = 9 (2) + 0\n",
            "567 = 0 (1000) + 567\n",
            "1000 = 1 (567) + 433\n",
            "567 = 1 (433) + 134\n",
            "433 = 3 (134) + 31\n",
            "134 = 4 (31) + 10\n",
            "31 = 3 (10) + 1\n",
            "10 = 10 (1) + 0\n",
            "568 = 0 (1000) + 568\n",
            "1000 = 1 (568) + 432\n",
            "568 = 1 (432) + 136\n",
            "432 = 3 (136) + 24\n",
            "136 = 5 (24) + 16\n",
            "24 = 1 (16) + 8\n",
            "16 = 2 (8) + 0\n",
            "569 = 0 (1000) + 569\n",
            "1000 = 1 (569) + 431\n",
            "569 = 1 (431) + 138\n",
            "431 = 3 (138) + 17\n",
            "138 = 8 (17) + 2\n",
            "17 = 8 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "570 = 0 (1000) + 570\n",
            "1000 = 1 (570) + 430\n",
            "570 = 1 (430) + 140\n",
            "430 = 3 (140) + 10\n",
            "140 = 14 (10) + 0\n",
            "571 = 0 (1000) + 571\n",
            "1000 = 1 (571) + 429\n",
            "571 = 1 (429) + 142\n",
            "429 = 3 (142) + 3\n",
            "142 = 47 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "572 = 0 (1000) + 572\n",
            "1000 = 1 (572) + 428\n",
            "572 = 1 (428) + 144\n",
            "428 = 2 (144) + 140\n",
            "144 = 1 (140) + 4\n",
            "140 = 35 (4) + 0\n",
            "573 = 0 (1000) + 573\n",
            "1000 = 1 (573) + 427\n",
            "573 = 1 (427) + 146\n",
            "427 = 2 (146) + 135\n",
            "146 = 1 (135) + 11\n",
            "135 = 12 (11) + 3\n",
            "11 = 3 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "574 = 0 (1000) + 574\n",
            "1000 = 1 (574) + 426\n",
            "574 = 1 (426) + 148\n",
            "426 = 2 (148) + 130\n",
            "148 = 1 (130) + 18\n",
            "130 = 7 (18) + 4\n",
            "18 = 4 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "575 = 0 (1000) + 575\n",
            "1000 = 1 (575) + 425\n",
            "575 = 1 (425) + 150\n",
            "425 = 2 (150) + 125\n",
            "150 = 1 (125) + 25\n",
            "125 = 5 (25) + 0\n",
            "576 = 0 (1000) + 576\n",
            "1000 = 1 (576) + 424\n",
            "576 = 1 (424) + 152\n",
            "424 = 2 (152) + 120\n",
            "152 = 1 (120) + 32\n",
            "120 = 3 (32) + 24\n",
            "32 = 1 (24) + 8\n",
            "24 = 3 (8) + 0\n",
            "577 = 0 (1000) + 577\n",
            "1000 = 1 (577) + 423\n",
            "577 = 1 (423) + 154\n",
            "423 = 2 (154) + 115\n",
            "154 = 1 (115) + 39\n",
            "115 = 2 (39) + 37\n",
            "39 = 1 (37) + 2\n",
            "37 = 18 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "578 = 0 (1000) + 578\n",
            "1000 = 1 (578) + 422\n",
            "578 = 1 (422) + 156\n",
            "422 = 2 (156) + 110\n",
            "156 = 1 (110) + 46\n",
            "110 = 2 (46) + 18\n",
            "46 = 2 (18) + 10\n",
            "18 = 1 (10) + 8\n",
            "10 = 1 (8) + 2\n",
            "8 = 4 (2) + 0\n",
            "579 = 0 (1000) + 579\n",
            "1000 = 1 (579) + 421\n",
            "579 = 1 (421) + 158\n",
            "421 = 2 (158) + 105\n",
            "158 = 1 (105) + 53\n",
            "105 = 1 (53) + 52\n",
            "53 = 1 (52) + 1\n",
            "52 = 52 (1) + 0\n",
            "580 = 0 (1000) + 580\n",
            "1000 = 1 (580) + 420\n",
            "580 = 1 (420) + 160\n",
            "420 = 2 (160) + 100\n",
            "160 = 1 (100) + 60\n",
            "100 = 1 (60) + 40\n",
            "60 = 1 (40) + 20\n",
            "40 = 2 (20) + 0\n",
            "581 = 0 (1000) + 581\n",
            "1000 = 1 (581) + 419\n",
            "581 = 1 (419) + 162\n",
            "419 = 2 (162) + 95\n",
            "162 = 1 (95) + 67\n",
            "95 = 1 (67) + 28\n",
            "67 = 2 (28) + 11\n",
            "28 = 2 (11) + 6\n",
            "11 = 1 (6) + 5\n",
            "6 = 1 (5) + 1\n",
            "5 = 5 (1) + 0\n",
            "582 = 0 (1000) + 582\n",
            "1000 = 1 (582) + 418\n",
            "582 = 1 (418) + 164\n",
            "418 = 2 (164) + 90\n",
            "164 = 1 (90) + 74\n",
            "90 = 1 (74) + 16\n",
            "74 = 4 (16) + 10\n",
            "16 = 1 (10) + 6\n",
            "10 = 1 (6) + 4\n",
            "6 = 1 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "583 = 0 (1000) + 583\n",
            "1000 = 1 (583) + 417\n",
            "583 = 1 (417) + 166\n",
            "417 = 2 (166) + 85\n",
            "166 = 1 (85) + 81\n",
            "85 = 1 (81) + 4\n",
            "81 = 20 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "584 = 0 (1000) + 584\n",
            "1000 = 1 (584) + 416\n",
            "584 = 1 (416) + 168\n",
            "416 = 2 (168) + 80\n",
            "168 = 2 (80) + 8\n",
            "80 = 10 (8) + 0\n",
            "585 = 0 (1000) + 585\n",
            "1000 = 1 (585) + 415\n",
            "585 = 1 (415) + 170\n",
            "415 = 2 (170) + 75\n",
            "170 = 2 (75) + 20\n",
            "75 = 3 (20) + 15\n",
            "20 = 1 (15) + 5\n",
            "15 = 3 (5) + 0\n",
            "586 = 0 (1000) + 586\n",
            "1000 = 1 (586) + 414\n",
            "586 = 1 (414) + 172\n",
            "414 = 2 (172) + 70\n",
            "172 = 2 (70) + 32\n",
            "70 = 2 (32) + 6\n",
            "32 = 5 (6) + 2\n",
            "6 = 3 (2) + 0\n",
            "587 = 0 (1000) + 587\n",
            "1000 = 1 (587) + 413\n",
            "587 = 1 (413) + 174\n",
            "413 = 2 (174) + 65\n",
            "174 = 2 (65) + 44\n",
            "65 = 1 (44) + 21\n",
            "44 = 2 (21) + 2\n",
            "21 = 10 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "588 = 0 (1000) + 588\n",
            "1000 = 1 (588) + 412\n",
            "588 = 1 (412) + 176\n",
            "412 = 2 (176) + 60\n",
            "176 = 2 (60) + 56\n",
            "60 = 1 (56) + 4\n",
            "56 = 14 (4) + 0\n",
            "589 = 0 (1000) + 589\n",
            "1000 = 1 (589) + 411\n",
            "589 = 1 (411) + 178\n",
            "411 = 2 (178) + 55\n",
            "178 = 3 (55) + 13\n",
            "55 = 4 (13) + 3\n",
            "13 = 4 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "590 = 0 (1000) + 590\n",
            "1000 = 1 (590) + 410\n",
            "590 = 1 (410) + 180\n",
            "410 = 2 (180) + 50\n",
            "180 = 3 (50) + 30\n",
            "50 = 1 (30) + 20\n",
            "30 = 1 (20) + 10\n",
            "20 = 2 (10) + 0\n",
            "591 = 0 (1000) + 591\n",
            "1000 = 1 (591) + 409\n",
            "591 = 1 (409) + 182\n",
            "409 = 2 (182) + 45\n",
            "182 = 4 (45) + 2\n",
            "45 = 22 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "592 = 0 (1000) + 592\n",
            "1000 = 1 (592) + 408\n",
            "592 = 1 (408) + 184\n",
            "408 = 2 (184) + 40\n",
            "184 = 4 (40) + 24\n",
            "40 = 1 (24) + 16\n",
            "24 = 1 (16) + 8\n",
            "16 = 2 (8) + 0\n",
            "593 = 0 (1000) + 593\n",
            "1000 = 1 (593) + 407\n",
            "593 = 1 (407) + 186\n",
            "407 = 2 (186) + 35\n",
            "186 = 5 (35) + 11\n",
            "35 = 3 (11) + 2\n",
            "11 = 5 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "594 = 0 (1000) + 594\n",
            "1000 = 1 (594) + 406\n",
            "594 = 1 (406) + 188\n",
            "406 = 2 (188) + 30\n",
            "188 = 6 (30) + 8\n",
            "30 = 3 (8) + 6\n",
            "8 = 1 (6) + 2\n",
            "6 = 3 (2) + 0\n",
            "595 = 0 (1000) + 595\n",
            "1000 = 1 (595) + 405\n",
            "595 = 1 (405) + 190\n",
            "405 = 2 (190) + 25\n",
            "190 = 7 (25) + 15\n",
            "25 = 1 (15) + 10\n",
            "15 = 1 (10) + 5\n",
            "10 = 2 (5) + 0\n",
            "596 = 0 (1000) + 596\n",
            "1000 = 1 (596) + 404\n",
            "596 = 1 (404) + 192\n",
            "404 = 2 (192) + 20\n",
            "192 = 9 (20) + 12\n",
            "20 = 1 (12) + 8\n",
            "12 = 1 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "597 = 0 (1000) + 597\n",
            "1000 = 1 (597) + 403\n",
            "597 = 1 (403) + 194\n",
            "403 = 2 (194) + 15\n",
            "194 = 12 (15) + 14\n",
            "15 = 1 (14) + 1\n",
            "14 = 14 (1) + 0\n",
            "598 = 0 (1000) + 598\n",
            "1000 = 1 (598) + 402\n",
            "598 = 1 (402) + 196\n",
            "402 = 2 (196) + 10\n",
            "196 = 19 (10) + 6\n",
            "10 = 1 (6) + 4\n",
            "6 = 1 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "599 = 0 (1000) + 599\n",
            "1000 = 1 (599) + 401\n",
            "599 = 1 (401) + 198\n",
            "401 = 2 (198) + 5\n",
            "198 = 39 (5) + 3\n",
            "5 = 1 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "600 = 0 (1000) + 600\n",
            "1000 = 1 (600) + 400\n",
            "600 = 1 (400) + 200\n",
            "400 = 2 (200) + 0\n",
            "601 = 0 (1000) + 601\n",
            "1000 = 1 (601) + 399\n",
            "601 = 1 (399) + 202\n",
            "399 = 1 (202) + 197\n",
            "202 = 1 (197) + 5\n",
            "197 = 39 (5) + 2\n",
            "5 = 2 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "602 = 0 (1000) + 602\n",
            "1000 = 1 (602) + 398\n",
            "602 = 1 (398) + 204\n",
            "398 = 1 (204) + 194\n",
            "204 = 1 (194) + 10\n",
            "194 = 19 (10) + 4\n",
            "10 = 2 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "603 = 0 (1000) + 603\n",
            "1000 = 1 (603) + 397\n",
            "603 = 1 (397) + 206\n",
            "397 = 1 (206) + 191\n",
            "206 = 1 (191) + 15\n",
            "191 = 12 (15) + 11\n",
            "15 = 1 (11) + 4\n",
            "11 = 2 (4) + 3\n",
            "4 = 1 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "604 = 0 (1000) + 604\n",
            "1000 = 1 (604) + 396\n",
            "604 = 1 (396) + 208\n",
            "396 = 1 (208) + 188\n",
            "208 = 1 (188) + 20\n",
            "188 = 9 (20) + 8\n",
            "20 = 2 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "605 = 0 (1000) + 605\n",
            "1000 = 1 (605) + 395\n",
            "605 = 1 (395) + 210\n",
            "395 = 1 (210) + 185\n",
            "210 = 1 (185) + 25\n",
            "185 = 7 (25) + 10\n",
            "25 = 2 (10) + 5\n",
            "10 = 2 (5) + 0\n",
            "606 = 0 (1000) + 606\n",
            "1000 = 1 (606) + 394\n",
            "606 = 1 (394) + 212\n",
            "394 = 1 (212) + 182\n",
            "212 = 1 (182) + 30\n",
            "182 = 6 (30) + 2\n",
            "30 = 15 (2) + 0\n",
            "607 = 0 (1000) + 607\n",
            "1000 = 1 (607) + 393\n",
            "607 = 1 (393) + 214\n",
            "393 = 1 (214) + 179\n",
            "214 = 1 (179) + 35\n",
            "179 = 5 (35) + 4\n",
            "35 = 8 (4) + 3\n",
            "4 = 1 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "608 = 0 (1000) + 608\n",
            "1000 = 1 (608) + 392\n",
            "608 = 1 (392) + 216\n",
            "392 = 1 (216) + 176\n",
            "216 = 1 (176) + 40\n",
            "176 = 4 (40) + 16\n",
            "40 = 2 (16) + 8\n",
            "16 = 2 (8) + 0\n",
            "609 = 0 (1000) + 609\n",
            "1000 = 1 (609) + 391\n",
            "609 = 1 (391) + 218\n",
            "391 = 1 (218) + 173\n",
            "218 = 1 (173) + 45\n",
            "173 = 3 (45) + 38\n",
            "45 = 1 (38) + 7\n",
            "38 = 5 (7) + 3\n",
            "7 = 2 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "610 = 0 (1000) + 610\n",
            "1000 = 1 (610) + 390\n",
            "610 = 1 (390) + 220\n",
            "390 = 1 (220) + 170\n",
            "220 = 1 (170) + 50\n",
            "170 = 3 (50) + 20\n",
            "50 = 2 (20) + 10\n",
            "20 = 2 (10) + 0\n",
            "611 = 0 (1000) + 611\n",
            "1000 = 1 (611) + 389\n",
            "611 = 1 (389) + 222\n",
            "389 = 1 (222) + 167\n",
            "222 = 1 (167) + 55\n",
            "167 = 3 (55) + 2\n",
            "55 = 27 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "612 = 0 (1000) + 612\n",
            "1000 = 1 (612) + 388\n",
            "612 = 1 (388) + 224\n",
            "388 = 1 (224) + 164\n",
            "224 = 1 (164) + 60\n",
            "164 = 2 (60) + 44\n",
            "60 = 1 (44) + 16\n",
            "44 = 2 (16) + 12\n",
            "16 = 1 (12) + 4\n",
            "12 = 3 (4) + 0\n",
            "613 = 0 (1000) + 613\n",
            "1000 = 1 (613) + 387\n",
            "613 = 1 (387) + 226\n",
            "387 = 1 (226) + 161\n",
            "226 = 1 (161) + 65\n",
            "161 = 2 (65) + 31\n",
            "65 = 2 (31) + 3\n",
            "31 = 10 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "614 = 0 (1000) + 614\n",
            "1000 = 1 (614) + 386\n",
            "614 = 1 (386) + 228\n",
            "386 = 1 (228) + 158\n",
            "228 = 1 (158) + 70\n",
            "158 = 2 (70) + 18\n",
            "70 = 3 (18) + 16\n",
            "18 = 1 (16) + 2\n",
            "16 = 8 (2) + 0\n",
            "615 = 0 (1000) + 615\n",
            "1000 = 1 (615) + 385\n",
            "615 = 1 (385) + 230\n",
            "385 = 1 (230) + 155\n",
            "230 = 1 (155) + 75\n",
            "155 = 2 (75) + 5\n",
            "75 = 15 (5) + 0\n",
            "616 = 0 (1000) + 616\n",
            "1000 = 1 (616) + 384\n",
            "616 = 1 (384) + 232\n",
            "384 = 1 (232) + 152\n",
            "232 = 1 (152) + 80\n",
            "152 = 1 (80) + 72\n",
            "80 = 1 (72) + 8\n",
            "72 = 9 (8) + 0\n",
            "617 = 0 (1000) + 617\n",
            "1000 = 1 (617) + 383\n",
            "617 = 1 (383) + 234\n",
            "383 = 1 (234) + 149\n",
            "234 = 1 (149) + 85\n",
            "149 = 1 (85) + 64\n",
            "85 = 1 (64) + 21\n",
            "64 = 3 (21) + 1\n",
            "21 = 21 (1) + 0\n",
            "618 = 0 (1000) + 618\n",
            "1000 = 1 (618) + 382\n",
            "618 = 1 (382) + 236\n",
            "382 = 1 (236) + 146\n",
            "236 = 1 (146) + 90\n",
            "146 = 1 (90) + 56\n",
            "90 = 1 (56) + 34\n",
            "56 = 1 (34) + 22\n",
            "34 = 1 (22) + 12\n",
            "22 = 1 (12) + 10\n",
            "12 = 1 (10) + 2\n",
            "10 = 5 (2) + 0\n",
            "619 = 0 (1000) + 619\n",
            "1000 = 1 (619) + 381\n",
            "619 = 1 (381) + 238\n",
            "381 = 1 (238) + 143\n",
            "238 = 1 (143) + 95\n",
            "143 = 1 (95) + 48\n",
            "95 = 1 (48) + 47\n",
            "48 = 1 (47) + 1\n",
            "47 = 47 (1) + 0\n",
            "620 = 0 (1000) + 620\n",
            "1000 = 1 (620) + 380\n",
            "620 = 1 (380) + 240\n",
            "380 = 1 (240) + 140\n",
            "240 = 1 (140) + 100\n",
            "140 = 1 (100) + 40\n",
            "100 = 2 (40) + 20\n",
            "40 = 2 (20) + 0\n",
            "621 = 0 (1000) + 621\n",
            "1000 = 1 (621) + 379\n",
            "621 = 1 (379) + 242\n",
            "379 = 1 (242) + 137\n",
            "242 = 1 (137) + 105\n",
            "137 = 1 (105) + 32\n",
            "105 = 3 (32) + 9\n",
            "32 = 3 (9) + 5\n",
            "9 = 1 (5) + 4\n",
            "5 = 1 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "622 = 0 (1000) + 622\n",
            "1000 = 1 (622) + 378\n",
            "622 = 1 (378) + 244\n",
            "378 = 1 (244) + 134\n",
            "244 = 1 (134) + 110\n",
            "134 = 1 (110) + 24\n",
            "110 = 4 (24) + 14\n",
            "24 = 1 (14) + 10\n",
            "14 = 1 (10) + 4\n",
            "10 = 2 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "623 = 0 (1000) + 623\n",
            "1000 = 1 (623) + 377\n",
            "623 = 1 (377) + 246\n",
            "377 = 1 (246) + 131\n",
            "246 = 1 (131) + 115\n",
            "131 = 1 (115) + 16\n",
            "115 = 7 (16) + 3\n",
            "16 = 5 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "624 = 0 (1000) + 624\n",
            "1000 = 1 (624) + 376\n",
            "624 = 1 (376) + 248\n",
            "376 = 1 (248) + 128\n",
            "248 = 1 (128) + 120\n",
            "128 = 1 (120) + 8\n",
            "120 = 15 (8) + 0\n",
            "625 = 0 (1000) + 625\n",
            "1000 = 1 (625) + 375\n",
            "625 = 1 (375) + 250\n",
            "375 = 1 (250) + 125\n",
            "250 = 2 (125) + 0\n",
            "626 = 0 (1000) + 626\n",
            "1000 = 1 (626) + 374\n",
            "626 = 1 (374) + 252\n",
            "374 = 1 (252) + 122\n",
            "252 = 2 (122) + 8\n",
            "122 = 15 (8) + 2\n",
            "8 = 4 (2) + 0\n",
            "627 = 0 (1000) + 627\n",
            "1000 = 1 (627) + 373\n",
            "627 = 1 (373) + 254\n",
            "373 = 1 (254) + 119\n",
            "254 = 2 (119) + 16\n",
            "119 = 7 (16) + 7\n",
            "16 = 2 (7) + 2\n",
            "7 = 3 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "628 = 0 (1000) + 628\n",
            "1000 = 1 (628) + 372\n",
            "628 = 1 (372) + 256\n",
            "372 = 1 (256) + 116\n",
            "256 = 2 (116) + 24\n",
            "116 = 4 (24) + 20\n",
            "24 = 1 (20) + 4\n",
            "20 = 5 (4) + 0\n",
            "629 = 0 (1000) + 629\n",
            "1000 = 1 (629) + 371\n",
            "629 = 1 (371) + 258\n",
            "371 = 1 (258) + 113\n",
            "258 = 2 (113) + 32\n",
            "113 = 3 (32) + 17\n",
            "32 = 1 (17) + 15\n",
            "17 = 1 (15) + 2\n",
            "15 = 7 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "630 = 0 (1000) + 630\n",
            "1000 = 1 (630) + 370\n",
            "630 = 1 (370) + 260\n",
            "370 = 1 (260) + 110\n",
            "260 = 2 (110) + 40\n",
            "110 = 2 (40) + 30\n",
            "40 = 1 (30) + 10\n",
            "30 = 3 (10) + 0\n",
            "631 = 0 (1000) + 631\n",
            "1000 = 1 (631) + 369\n",
            "631 = 1 (369) + 262\n",
            "369 = 1 (262) + 107\n",
            "262 = 2 (107) + 48\n",
            "107 = 2 (48) + 11\n",
            "48 = 4 (11) + 4\n",
            "11 = 2 (4) + 3\n",
            "4 = 1 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "632 = 0 (1000) + 632\n",
            "1000 = 1 (632) + 368\n",
            "632 = 1 (368) + 264\n",
            "368 = 1 (264) + 104\n",
            "264 = 2 (104) + 56\n",
            "104 = 1 (56) + 48\n",
            "56 = 1 (48) + 8\n",
            "48 = 6 (8) + 0\n",
            "633 = 0 (1000) + 633\n",
            "1000 = 1 (633) + 367\n",
            "633 = 1 (367) + 266\n",
            "367 = 1 (266) + 101\n",
            "266 = 2 (101) + 64\n",
            "101 = 1 (64) + 37\n",
            "64 = 1 (37) + 27\n",
            "37 = 1 (27) + 10\n",
            "27 = 2 (10) + 7\n",
            "10 = 1 (7) + 3\n",
            "7 = 2 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "634 = 0 (1000) + 634\n",
            "1000 = 1 (634) + 366\n",
            "634 = 1 (366) + 268\n",
            "366 = 1 (268) + 98\n",
            "268 = 2 (98) + 72\n",
            "98 = 1 (72) + 26\n",
            "72 = 2 (26) + 20\n",
            "26 = 1 (20) + 6\n",
            "20 = 3 (6) + 2\n",
            "6 = 3 (2) + 0\n",
            "635 = 0 (1000) + 635\n",
            "1000 = 1 (635) + 365\n",
            "635 = 1 (365) + 270\n",
            "365 = 1 (270) + 95\n",
            "270 = 2 (95) + 80\n",
            "95 = 1 (80) + 15\n",
            "80 = 5 (15) + 5\n",
            "15 = 3 (5) + 0\n",
            "636 = 0 (1000) + 636\n",
            "1000 = 1 (636) + 364\n",
            "636 = 1 (364) + 272\n",
            "364 = 1 (272) + 92\n",
            "272 = 2 (92) + 88\n",
            "92 = 1 (88) + 4\n",
            "88 = 22 (4) + 0\n",
            "637 = 0 (1000) + 637\n",
            "1000 = 1 (637) + 363\n",
            "637 = 1 (363) + 274\n",
            "363 = 1 (274) + 89\n",
            "274 = 3 (89) + 7\n",
            "89 = 12 (7) + 5\n",
            "7 = 1 (5) + 2\n",
            "5 = 2 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "638 = 0 (1000) + 638\n",
            "1000 = 1 (638) + 362\n",
            "638 = 1 (362) + 276\n",
            "362 = 1 (276) + 86\n",
            "276 = 3 (86) + 18\n",
            "86 = 4 (18) + 14\n",
            "18 = 1 (14) + 4\n",
            "14 = 3 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "639 = 0 (1000) + 639\n",
            "1000 = 1 (639) + 361\n",
            "639 = 1 (361) + 278\n",
            "361 = 1 (278) + 83\n",
            "278 = 3 (83) + 29\n",
            "83 = 2 (29) + 25\n",
            "29 = 1 (25) + 4\n",
            "25 = 6 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "640 = 0 (1000) + 640\n",
            "1000 = 1 (640) + 360\n",
            "640 = 1 (360) + 280\n",
            "360 = 1 (280) + 80\n",
            "280 = 3 (80) + 40\n",
            "80 = 2 (40) + 0\n",
            "641 = 0 (1000) + 641\n",
            "1000 = 1 (641) + 359\n",
            "641 = 1 (359) + 282\n",
            "359 = 1 (282) + 77\n",
            "282 = 3 (77) + 51\n",
            "77 = 1 (51) + 26\n",
            "51 = 1 (26) + 25\n",
            "26 = 1 (25) + 1\n",
            "25 = 25 (1) + 0\n",
            "642 = 0 (1000) + 642\n",
            "1000 = 1 (642) + 358\n",
            "642 = 1 (358) + 284\n",
            "358 = 1 (284) + 74\n",
            "284 = 3 (74) + 62\n",
            "74 = 1 (62) + 12\n",
            "62 = 5 (12) + 2\n",
            "12 = 6 (2) + 0\n",
            "643 = 0 (1000) + 643\n",
            "1000 = 1 (643) + 357\n",
            "643 = 1 (357) + 286\n",
            "357 = 1 (286) + 71\n",
            "286 = 4 (71) + 2\n",
            "71 = 35 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "644 = 0 (1000) + 644\n",
            "1000 = 1 (644) + 356\n",
            "644 = 1 (356) + 288\n",
            "356 = 1 (288) + 68\n",
            "288 = 4 (68) + 16\n",
            "68 = 4 (16) + 4\n",
            "16 = 4 (4) + 0\n",
            "645 = 0 (1000) + 645\n",
            "1000 = 1 (645) + 355\n",
            "645 = 1 (355) + 290\n",
            "355 = 1 (290) + 65\n",
            "290 = 4 (65) + 30\n",
            "65 = 2 (30) + 5\n",
            "30 = 6 (5) + 0\n",
            "646 = 0 (1000) + 646\n",
            "1000 = 1 (646) + 354\n",
            "646 = 1 (354) + 292\n",
            "354 = 1 (292) + 62\n",
            "292 = 4 (62) + 44\n",
            "62 = 1 (44) + 18\n",
            "44 = 2 (18) + 8\n",
            "18 = 2 (8) + 2\n",
            "8 = 4 (2) + 0\n",
            "647 = 0 (1000) + 647\n",
            "1000 = 1 (647) + 353\n",
            "647 = 1 (353) + 294\n",
            "353 = 1 (294) + 59\n",
            "294 = 4 (59) + 58\n",
            "59 = 1 (58) + 1\n",
            "58 = 58 (1) + 0\n",
            "648 = 0 (1000) + 648\n",
            "1000 = 1 (648) + 352\n",
            "648 = 1 (352) + 296\n",
            "352 = 1 (296) + 56\n",
            "296 = 5 (56) + 16\n",
            "56 = 3 (16) + 8\n",
            "16 = 2 (8) + 0\n",
            "649 = 0 (1000) + 649\n",
            "1000 = 1 (649) + 351\n",
            "649 = 1 (351) + 298\n",
            "351 = 1 (298) + 53\n",
            "298 = 5 (53) + 33\n",
            "53 = 1 (33) + 20\n",
            "33 = 1 (20) + 13\n",
            "20 = 1 (13) + 7\n",
            "13 = 1 (7) + 6\n",
            "7 = 1 (6) + 1\n",
            "6 = 6 (1) + 0\n",
            "650 = 0 (1000) + 650\n",
            "1000 = 1 (650) + 350\n",
            "650 = 1 (350) + 300\n",
            "350 = 1 (300) + 50\n",
            "300 = 6 (50) + 0\n",
            "651 = 0 (1000) + 651\n",
            "1000 = 1 (651) + 349\n",
            "651 = 1 (349) + 302\n",
            "349 = 1 (302) + 47\n",
            "302 = 6 (47) + 20\n",
            "47 = 2 (20) + 7\n",
            "20 = 2 (7) + 6\n",
            "7 = 1 (6) + 1\n",
            "6 = 6 (1) + 0\n",
            "652 = 0 (1000) + 652\n",
            "1000 = 1 (652) + 348\n",
            "652 = 1 (348) + 304\n",
            "348 = 1 (304) + 44\n",
            "304 = 6 (44) + 40\n",
            "44 = 1 (40) + 4\n",
            "40 = 10 (4) + 0\n",
            "653 = 0 (1000) + 653\n",
            "1000 = 1 (653) + 347\n",
            "653 = 1 (347) + 306\n",
            "347 = 1 (306) + 41\n",
            "306 = 7 (41) + 19\n",
            "41 = 2 (19) + 3\n",
            "19 = 6 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "654 = 0 (1000) + 654\n",
            "1000 = 1 (654) + 346\n",
            "654 = 1 (346) + 308\n",
            "346 = 1 (308) + 38\n",
            "308 = 8 (38) + 4\n",
            "38 = 9 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "655 = 0 (1000) + 655\n",
            "1000 = 1 (655) + 345\n",
            "655 = 1 (345) + 310\n",
            "345 = 1 (310) + 35\n",
            "310 = 8 (35) + 30\n",
            "35 = 1 (30) + 5\n",
            "30 = 6 (5) + 0\n",
            "656 = 0 (1000) + 656\n",
            "1000 = 1 (656) + 344\n",
            "656 = 1 (344) + 312\n",
            "344 = 1 (312) + 32\n",
            "312 = 9 (32) + 24\n",
            "32 = 1 (24) + 8\n",
            "24 = 3 (8) + 0\n",
            "657 = 0 (1000) + 657\n",
            "1000 = 1 (657) + 343\n",
            "657 = 1 (343) + 314\n",
            "343 = 1 (314) + 29\n",
            "314 = 10 (29) + 24\n",
            "29 = 1 (24) + 5\n",
            "24 = 4 (5) + 4\n",
            "5 = 1 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "658 = 0 (1000) + 658\n",
            "1000 = 1 (658) + 342\n",
            "658 = 1 (342) + 316\n",
            "342 = 1 (316) + 26\n",
            "316 = 12 (26) + 4\n",
            "26 = 6 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "659 = 0 (1000) + 659\n",
            "1000 = 1 (659) + 341\n",
            "659 = 1 (341) + 318\n",
            "341 = 1 (318) + 23\n",
            "318 = 13 (23) + 19\n",
            "23 = 1 (19) + 4\n",
            "19 = 4 (4) + 3\n",
            "4 = 1 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "660 = 0 (1000) + 660\n",
            "1000 = 1 (660) + 340\n",
            "660 = 1 (340) + 320\n",
            "340 = 1 (320) + 20\n",
            "320 = 16 (20) + 0\n",
            "661 = 0 (1000) + 661\n",
            "1000 = 1 (661) + 339\n",
            "661 = 1 (339) + 322\n",
            "339 = 1 (322) + 17\n",
            "322 = 18 (17) + 16\n",
            "17 = 1 (16) + 1\n",
            "16 = 16 (1) + 0\n",
            "662 = 0 (1000) + 662\n",
            "1000 = 1 (662) + 338\n",
            "662 = 1 (338) + 324\n",
            "338 = 1 (324) + 14\n",
            "324 = 23 (14) + 2\n",
            "14 = 7 (2) + 0\n",
            "663 = 0 (1000) + 663\n",
            "1000 = 1 (663) + 337\n",
            "663 = 1 (337) + 326\n",
            "337 = 1 (326) + 11\n",
            "326 = 29 (11) + 7\n",
            "11 = 1 (7) + 4\n",
            "7 = 1 (4) + 3\n",
            "4 = 1 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "664 = 0 (1000) + 664\n",
            "1000 = 1 (664) + 336\n",
            "664 = 1 (336) + 328\n",
            "336 = 1 (328) + 8\n",
            "328 = 41 (8) + 0\n",
            "665 = 0 (1000) + 665\n",
            "1000 = 1 (665) + 335\n",
            "665 = 1 (335) + 330\n",
            "335 = 1 (330) + 5\n",
            "330 = 66 (5) + 0\n",
            "666 = 0 (1000) + 666\n",
            "1000 = 1 (666) + 334\n",
            "666 = 1 (334) + 332\n",
            "334 = 1 (332) + 2\n",
            "332 = 166 (2) + 0\n",
            "667 = 0 (1000) + 667\n",
            "1000 = 1 (667) + 333\n",
            "667 = 2 (333) + 1\n",
            "333 = 333 (1) + 0\n",
            "668 = 0 (1000) + 668\n",
            "1000 = 1 (668) + 332\n",
            "668 = 2 (332) + 4\n",
            "332 = 83 (4) + 0\n",
            "669 = 0 (1000) + 669\n",
            "1000 = 1 (669) + 331\n",
            "669 = 2 (331) + 7\n",
            "331 = 47 (7) + 2\n",
            "7 = 3 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "670 = 0 (1000) + 670\n",
            "1000 = 1 (670) + 330\n",
            "670 = 2 (330) + 10\n",
            "330 = 33 (10) + 0\n",
            "671 = 0 (1000) + 671\n",
            "1000 = 1 (671) + 329\n",
            "671 = 2 (329) + 13\n",
            "329 = 25 (13) + 4\n",
            "13 = 3 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "672 = 0 (1000) + 672\n",
            "1000 = 1 (672) + 328\n",
            "672 = 2 (328) + 16\n",
            "328 = 20 (16) + 8\n",
            "16 = 2 (8) + 0\n",
            "673 = 0 (1000) + 673\n",
            "1000 = 1 (673) + 327\n",
            "673 = 2 (327) + 19\n",
            "327 = 17 (19) + 4\n",
            "19 = 4 (4) + 3\n",
            "4 = 1 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "674 = 0 (1000) + 674\n",
            "1000 = 1 (674) + 326\n",
            "674 = 2 (326) + 22\n",
            "326 = 14 (22) + 18\n",
            "22 = 1 (18) + 4\n",
            "18 = 4 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "675 = 0 (1000) + 675\n",
            "1000 = 1 (675) + 325\n",
            "675 = 2 (325) + 25\n",
            "325 = 13 (25) + 0\n",
            "676 = 0 (1000) + 676\n",
            "1000 = 1 (676) + 324\n",
            "676 = 2 (324) + 28\n",
            "324 = 11 (28) + 16\n",
            "28 = 1 (16) + 12\n",
            "16 = 1 (12) + 4\n",
            "12 = 3 (4) + 0\n",
            "677 = 0 (1000) + 677\n",
            "1000 = 1 (677) + 323\n",
            "677 = 2 (323) + 31\n",
            "323 = 10 (31) + 13\n",
            "31 = 2 (13) + 5\n",
            "13 = 2 (5) + 3\n",
            "5 = 1 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "678 = 0 (1000) + 678\n",
            "1000 = 1 (678) + 322\n",
            "678 = 2 (322) + 34\n",
            "322 = 9 (34) + 16\n",
            "34 = 2 (16) + 2\n",
            "16 = 8 (2) + 0\n",
            "679 = 0 (1000) + 679\n",
            "1000 = 1 (679) + 321\n",
            "679 = 2 (321) + 37\n",
            "321 = 8 (37) + 25\n",
            "37 = 1 (25) + 12\n",
            "25 = 2 (12) + 1\n",
            "12 = 12 (1) + 0\n",
            "680 = 0 (1000) + 680\n",
            "1000 = 1 (680) + 320\n",
            "680 = 2 (320) + 40\n",
            "320 = 8 (40) + 0\n",
            "681 = 0 (1000) + 681\n",
            "1000 = 1 (681) + 319\n",
            "681 = 2 (319) + 43\n",
            "319 = 7 (43) + 18\n",
            "43 = 2 (18) + 7\n",
            "18 = 2 (7) + 4\n",
            "7 = 1 (4) + 3\n",
            "4 = 1 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "682 = 0 (1000) + 682\n",
            "1000 = 1 (682) + 318\n",
            "682 = 2 (318) + 46\n",
            "318 = 6 (46) + 42\n",
            "46 = 1 (42) + 4\n",
            "42 = 10 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "683 = 0 (1000) + 683\n",
            "1000 = 1 (683) + 317\n",
            "683 = 2 (317) + 49\n",
            "317 = 6 (49) + 23\n",
            "49 = 2 (23) + 3\n",
            "23 = 7 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "684 = 0 (1000) + 684\n",
            "1000 = 1 (684) + 316\n",
            "684 = 2 (316) + 52\n",
            "316 = 6 (52) + 4\n",
            "52 = 13 (4) + 0\n",
            "685 = 0 (1000) + 685\n",
            "1000 = 1 (685) + 315\n",
            "685 = 2 (315) + 55\n",
            "315 = 5 (55) + 40\n",
            "55 = 1 (40) + 15\n",
            "40 = 2 (15) + 10\n",
            "15 = 1 (10) + 5\n",
            "10 = 2 (5) + 0\n",
            "686 = 0 (1000) + 686\n",
            "1000 = 1 (686) + 314\n",
            "686 = 2 (314) + 58\n",
            "314 = 5 (58) + 24\n",
            "58 = 2 (24) + 10\n",
            "24 = 2 (10) + 4\n",
            "10 = 2 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "687 = 0 (1000) + 687\n",
            "1000 = 1 (687) + 313\n",
            "687 = 2 (313) + 61\n",
            "313 = 5 (61) + 8\n",
            "61 = 7 (8) + 5\n",
            "8 = 1 (5) + 3\n",
            "5 = 1 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "688 = 0 (1000) + 688\n",
            "1000 = 1 (688) + 312\n",
            "688 = 2 (312) + 64\n",
            "312 = 4 (64) + 56\n",
            "64 = 1 (56) + 8\n",
            "56 = 7 (8) + 0\n",
            "689 = 0 (1000) + 689\n",
            "1000 = 1 (689) + 311\n",
            "689 = 2 (311) + 67\n",
            "311 = 4 (67) + 43\n",
            "67 = 1 (43) + 24\n",
            "43 = 1 (24) + 19\n",
            "24 = 1 (19) + 5\n",
            "19 = 3 (5) + 4\n",
            "5 = 1 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "690 = 0 (1000) + 690\n",
            "1000 = 1 (690) + 310\n",
            "690 = 2 (310) + 70\n",
            "310 = 4 (70) + 30\n",
            "70 = 2 (30) + 10\n",
            "30 = 3 (10) + 0\n",
            "691 = 0 (1000) + 691\n",
            "1000 = 1 (691) + 309\n",
            "691 = 2 (309) + 73\n",
            "309 = 4 (73) + 17\n",
            "73 = 4 (17) + 5\n",
            "17 = 3 (5) + 2\n",
            "5 = 2 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "692 = 0 (1000) + 692\n",
            "1000 = 1 (692) + 308\n",
            "692 = 2 (308) + 76\n",
            "308 = 4 (76) + 4\n",
            "76 = 19 (4) + 0\n",
            "693 = 0 (1000) + 693\n",
            "1000 = 1 (693) + 307\n",
            "693 = 2 (307) + 79\n",
            "307 = 3 (79) + 70\n",
            "79 = 1 (70) + 9\n",
            "70 = 7 (9) + 7\n",
            "9 = 1 (7) + 2\n",
            "7 = 3 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "694 = 0 (1000) + 694\n",
            "1000 = 1 (694) + 306\n",
            "694 = 2 (306) + 82\n",
            "306 = 3 (82) + 60\n",
            "82 = 1 (60) + 22\n",
            "60 = 2 (22) + 16\n",
            "22 = 1 (16) + 6\n",
            "16 = 2 (6) + 4\n",
            "6 = 1 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "695 = 0 (1000) + 695\n",
            "1000 = 1 (695) + 305\n",
            "695 = 2 (305) + 85\n",
            "305 = 3 (85) + 50\n",
            "85 = 1 (50) + 35\n",
            "50 = 1 (35) + 15\n",
            "35 = 2 (15) + 5\n",
            "15 = 3 (5) + 0\n",
            "696 = 0 (1000) + 696\n",
            "1000 = 1 (696) + 304\n",
            "696 = 2 (304) + 88\n",
            "304 = 3 (88) + 40\n",
            "88 = 2 (40) + 8\n",
            "40 = 5 (8) + 0\n",
            "697 = 0 (1000) + 697\n",
            "1000 = 1 (697) + 303\n",
            "697 = 2 (303) + 91\n",
            "303 = 3 (91) + 30\n",
            "91 = 3 (30) + 1\n",
            "30 = 30 (1) + 0\n",
            "698 = 0 (1000) + 698\n",
            "1000 = 1 (698) + 302\n",
            "698 = 2 (302) + 94\n",
            "302 = 3 (94) + 20\n",
            "94 = 4 (20) + 14\n",
            "20 = 1 (14) + 6\n",
            "14 = 2 (6) + 2\n",
            "6 = 3 (2) + 0\n",
            "699 = 0 (1000) + 699\n",
            "1000 = 1 (699) + 301\n",
            "699 = 2 (301) + 97\n",
            "301 = 3 (97) + 10\n",
            "97 = 9 (10) + 7\n",
            "10 = 1 (7) + 3\n",
            "7 = 2 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "700 = 0 (1000) + 700\n",
            "1000 = 1 (700) + 300\n",
            "700 = 2 (300) + 100\n",
            "300 = 3 (100) + 0\n",
            "701 = 0 (1000) + 701\n",
            "1000 = 1 (701) + 299\n",
            "701 = 2 (299) + 103\n",
            "299 = 2 (103) + 93\n",
            "103 = 1 (93) + 10\n",
            "93 = 9 (10) + 3\n",
            "10 = 3 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "702 = 0 (1000) + 702\n",
            "1000 = 1 (702) + 298\n",
            "702 = 2 (298) + 106\n",
            "298 = 2 (106) + 86\n",
            "106 = 1 (86) + 20\n",
            "86 = 4 (20) + 6\n",
            "20 = 3 (6) + 2\n",
            "6 = 3 (2) + 0\n",
            "703 = 0 (1000) + 703\n",
            "1000 = 1 (703) + 297\n",
            "703 = 2 (297) + 109\n",
            "297 = 2 (109) + 79\n",
            "109 = 1 (79) + 30\n",
            "79 = 2 (30) + 19\n",
            "30 = 1 (19) + 11\n",
            "19 = 1 (11) + 8\n",
            "11 = 1 (8) + 3\n",
            "8 = 2 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "704 = 0 (1000) + 704\n",
            "1000 = 1 (704) + 296\n",
            "704 = 2 (296) + 112\n",
            "296 = 2 (112) + 72\n",
            "112 = 1 (72) + 40\n",
            "72 = 1 (40) + 32\n",
            "40 = 1 (32) + 8\n",
            "32 = 4 (8) + 0\n",
            "705 = 0 (1000) + 705\n",
            "1000 = 1 (705) + 295\n",
            "705 = 2 (295) + 115\n",
            "295 = 2 (115) + 65\n",
            "115 = 1 (65) + 50\n",
            "65 = 1 (50) + 15\n",
            "50 = 3 (15) + 5\n",
            "15 = 3 (5) + 0\n",
            "706 = 0 (1000) + 706\n",
            "1000 = 1 (706) + 294\n",
            "706 = 2 (294) + 118\n",
            "294 = 2 (118) + 58\n",
            "118 = 2 (58) + 2\n",
            "58 = 29 (2) + 0\n",
            "707 = 0 (1000) + 707\n",
            "1000 = 1 (707) + 293\n",
            "707 = 2 (293) + 121\n",
            "293 = 2 (121) + 51\n",
            "121 = 2 (51) + 19\n",
            "51 = 2 (19) + 13\n",
            "19 = 1 (13) + 6\n",
            "13 = 2 (6) + 1\n",
            "6 = 6 (1) + 0\n",
            "708 = 0 (1000) + 708\n",
            "1000 = 1 (708) + 292\n",
            "708 = 2 (292) + 124\n",
            "292 = 2 (124) + 44\n",
            "124 = 2 (44) + 36\n",
            "44 = 1 (36) + 8\n",
            "36 = 4 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "709 = 0 (1000) + 709\n",
            "1000 = 1 (709) + 291\n",
            "709 = 2 (291) + 127\n",
            "291 = 2 (127) + 37\n",
            "127 = 3 (37) + 16\n",
            "37 = 2 (16) + 5\n",
            "16 = 3 (5) + 1\n",
            "5 = 5 (1) + 0\n",
            "710 = 0 (1000) + 710\n",
            "1000 = 1 (710) + 290\n",
            "710 = 2 (290) + 130\n",
            "290 = 2 (130) + 30\n",
            "130 = 4 (30) + 10\n",
            "30 = 3 (10) + 0\n",
            "711 = 0 (1000) + 711\n",
            "1000 = 1 (711) + 289\n",
            "711 = 2 (289) + 133\n",
            "289 = 2 (133) + 23\n",
            "133 = 5 (23) + 18\n",
            "23 = 1 (18) + 5\n",
            "18 = 3 (5) + 3\n",
            "5 = 1 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "712 = 0 (1000) + 712\n",
            "1000 = 1 (712) + 288\n",
            "712 = 2 (288) + 136\n",
            "288 = 2 (136) + 16\n",
            "136 = 8 (16) + 8\n",
            "16 = 2 (8) + 0\n",
            "713 = 0 (1000) + 713\n",
            "1000 = 1 (713) + 287\n",
            "713 = 2 (287) + 139\n",
            "287 = 2 (139) + 9\n",
            "139 = 15 (9) + 4\n",
            "9 = 2 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "714 = 0 (1000) + 714\n",
            "1000 = 1 (714) + 286\n",
            "714 = 2 (286) + 142\n",
            "286 = 2 (142) + 2\n",
            "142 = 71 (2) + 0\n",
            "715 = 0 (1000) + 715\n",
            "1000 = 1 (715) + 285\n",
            "715 = 2 (285) + 145\n",
            "285 = 1 (145) + 140\n",
            "145 = 1 (140) + 5\n",
            "140 = 28 (5) + 0\n",
            "716 = 0 (1000) + 716\n",
            "1000 = 1 (716) + 284\n",
            "716 = 2 (284) + 148\n",
            "284 = 1 (148) + 136\n",
            "148 = 1 (136) + 12\n",
            "136 = 11 (12) + 4\n",
            "12 = 3 (4) + 0\n",
            "717 = 0 (1000) + 717\n",
            "1000 = 1 (717) + 283\n",
            "717 = 2 (283) + 151\n",
            "283 = 1 (151) + 132\n",
            "151 = 1 (132) + 19\n",
            "132 = 6 (19) + 18\n",
            "19 = 1 (18) + 1\n",
            "18 = 18 (1) + 0\n",
            "718 = 0 (1000) + 718\n",
            "1000 = 1 (718) + 282\n",
            "718 = 2 (282) + 154\n",
            "282 = 1 (154) + 128\n",
            "154 = 1 (128) + 26\n",
            "128 = 4 (26) + 24\n",
            "26 = 1 (24) + 2\n",
            "24 = 12 (2) + 0\n",
            "719 = 0 (1000) + 719\n",
            "1000 = 1 (719) + 281\n",
            "719 = 2 (281) + 157\n",
            "281 = 1 (157) + 124\n",
            "157 = 1 (124) + 33\n",
            "124 = 3 (33) + 25\n",
            "33 = 1 (25) + 8\n",
            "25 = 3 (8) + 1\n",
            "8 = 8 (1) + 0\n",
            "720 = 0 (1000) + 720\n",
            "1000 = 1 (720) + 280\n",
            "720 = 2 (280) + 160\n",
            "280 = 1 (160) + 120\n",
            "160 = 1 (120) + 40\n",
            "120 = 3 (40) + 0\n",
            "721 = 0 (1000) + 721\n",
            "1000 = 1 (721) + 279\n",
            "721 = 2 (279) + 163\n",
            "279 = 1 (163) + 116\n",
            "163 = 1 (116) + 47\n",
            "116 = 2 (47) + 22\n",
            "47 = 2 (22) + 3\n",
            "22 = 7 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "722 = 0 (1000) + 722\n",
            "1000 = 1 (722) + 278\n",
            "722 = 2 (278) + 166\n",
            "278 = 1 (166) + 112\n",
            "166 = 1 (112) + 54\n",
            "112 = 2 (54) + 4\n",
            "54 = 13 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "723 = 0 (1000) + 723\n",
            "1000 = 1 (723) + 277\n",
            "723 = 2 (277) + 169\n",
            "277 = 1 (169) + 108\n",
            "169 = 1 (108) + 61\n",
            "108 = 1 (61) + 47\n",
            "61 = 1 (47) + 14\n",
            "47 = 3 (14) + 5\n",
            "14 = 2 (5) + 4\n",
            "5 = 1 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "724 = 0 (1000) + 724\n",
            "1000 = 1 (724) + 276\n",
            "724 = 2 (276) + 172\n",
            "276 = 1 (172) + 104\n",
            "172 = 1 (104) + 68\n",
            "104 = 1 (68) + 36\n",
            "68 = 1 (36) + 32\n",
            "36 = 1 (32) + 4\n",
            "32 = 8 (4) + 0\n",
            "725 = 0 (1000) + 725\n",
            "1000 = 1 (725) + 275\n",
            "725 = 2 (275) + 175\n",
            "275 = 1 (175) + 100\n",
            "175 = 1 (100) + 75\n",
            "100 = 1 (75) + 25\n",
            "75 = 3 (25) + 0\n",
            "726 = 0 (1000) + 726\n",
            "1000 = 1 (726) + 274\n",
            "726 = 2 (274) + 178\n",
            "274 = 1 (178) + 96\n",
            "178 = 1 (96) + 82\n",
            "96 = 1 (82) + 14\n",
            "82 = 5 (14) + 12\n",
            "14 = 1 (12) + 2\n",
            "12 = 6 (2) + 0\n",
            "727 = 0 (1000) + 727\n",
            "1000 = 1 (727) + 273\n",
            "727 = 2 (273) + 181\n",
            "273 = 1 (181) + 92\n",
            "181 = 1 (92) + 89\n",
            "92 = 1 (89) + 3\n",
            "89 = 29 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "728 = 0 (1000) + 728\n",
            "1000 = 1 (728) + 272\n",
            "728 = 2 (272) + 184\n",
            "272 = 1 (184) + 88\n",
            "184 = 2 (88) + 8\n",
            "88 = 11 (8) + 0\n",
            "729 = 0 (1000) + 729\n",
            "1000 = 1 (729) + 271\n",
            "729 = 2 (271) + 187\n",
            "271 = 1 (187) + 84\n",
            "187 = 2 (84) + 19\n",
            "84 = 4 (19) + 8\n",
            "19 = 2 (8) + 3\n",
            "8 = 2 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "730 = 0 (1000) + 730\n",
            "1000 = 1 (730) + 270\n",
            "730 = 2 (270) + 190\n",
            "270 = 1 (190) + 80\n",
            "190 = 2 (80) + 30\n",
            "80 = 2 (30) + 20\n",
            "30 = 1 (20) + 10\n",
            "20 = 2 (10) + 0\n",
            "731 = 0 (1000) + 731\n",
            "1000 = 1 (731) + 269\n",
            "731 = 2 (269) + 193\n",
            "269 = 1 (193) + 76\n",
            "193 = 2 (76) + 41\n",
            "76 = 1 (41) + 35\n",
            "41 = 1 (35) + 6\n",
            "35 = 5 (6) + 5\n",
            "6 = 1 (5) + 1\n",
            "5 = 5 (1) + 0\n",
            "732 = 0 (1000) + 732\n",
            "1000 = 1 (732) + 268\n",
            "732 = 2 (268) + 196\n",
            "268 = 1 (196) + 72\n",
            "196 = 2 (72) + 52\n",
            "72 = 1 (52) + 20\n",
            "52 = 2 (20) + 12\n",
            "20 = 1 (12) + 8\n",
            "12 = 1 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "733 = 0 (1000) + 733\n",
            "1000 = 1 (733) + 267\n",
            "733 = 2 (267) + 199\n",
            "267 = 1 (199) + 68\n",
            "199 = 2 (68) + 63\n",
            "68 = 1 (63) + 5\n",
            "63 = 12 (5) + 3\n",
            "5 = 1 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "734 = 0 (1000) + 734\n",
            "1000 = 1 (734) + 266\n",
            "734 = 2 (266) + 202\n",
            "266 = 1 (202) + 64\n",
            "202 = 3 (64) + 10\n",
            "64 = 6 (10) + 4\n",
            "10 = 2 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "735 = 0 (1000) + 735\n",
            "1000 = 1 (735) + 265\n",
            "735 = 2 (265) + 205\n",
            "265 = 1 (205) + 60\n",
            "205 = 3 (60) + 25\n",
            "60 = 2 (25) + 10\n",
            "25 = 2 (10) + 5\n",
            "10 = 2 (5) + 0\n",
            "736 = 0 (1000) + 736\n",
            "1000 = 1 (736) + 264\n",
            "736 = 2 (264) + 208\n",
            "264 = 1 (208) + 56\n",
            "208 = 3 (56) + 40\n",
            "56 = 1 (40) + 16\n",
            "40 = 2 (16) + 8\n",
            "16 = 2 (8) + 0\n",
            "737 = 0 (1000) + 737\n",
            "1000 = 1 (737) + 263\n",
            "737 = 2 (263) + 211\n",
            "263 = 1 (211) + 52\n",
            "211 = 4 (52) + 3\n",
            "52 = 17 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "738 = 0 (1000) + 738\n",
            "1000 = 1 (738) + 262\n",
            "738 = 2 (262) + 214\n",
            "262 = 1 (214) + 48\n",
            "214 = 4 (48) + 22\n",
            "48 = 2 (22) + 4\n",
            "22 = 5 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "739 = 0 (1000) + 739\n",
            "1000 = 1 (739) + 261\n",
            "739 = 2 (261) + 217\n",
            "261 = 1 (217) + 44\n",
            "217 = 4 (44) + 41\n",
            "44 = 1 (41) + 3\n",
            "41 = 13 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "740 = 0 (1000) + 740\n",
            "1000 = 1 (740) + 260\n",
            "740 = 2 (260) + 220\n",
            "260 = 1 (220) + 40\n",
            "220 = 5 (40) + 20\n",
            "40 = 2 (20) + 0\n",
            "741 = 0 (1000) + 741\n",
            "1000 = 1 (741) + 259\n",
            "741 = 2 (259) + 223\n",
            "259 = 1 (223) + 36\n",
            "223 = 6 (36) + 7\n",
            "36 = 5 (7) + 1\n",
            "7 = 7 (1) + 0\n",
            "742 = 0 (1000) + 742\n",
            "1000 = 1 (742) + 258\n",
            "742 = 2 (258) + 226\n",
            "258 = 1 (226) + 32\n",
            "226 = 7 (32) + 2\n",
            "32 = 16 (2) + 0\n",
            "743 = 0 (1000) + 743\n",
            "1000 = 1 (743) + 257\n",
            "743 = 2 (257) + 229\n",
            "257 = 1 (229) + 28\n",
            "229 = 8 (28) + 5\n",
            "28 = 5 (5) + 3\n",
            "5 = 1 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "744 = 0 (1000) + 744\n",
            "1000 = 1 (744) + 256\n",
            "744 = 2 (256) + 232\n",
            "256 = 1 (232) + 24\n",
            "232 = 9 (24) + 16\n",
            "24 = 1 (16) + 8\n",
            "16 = 2 (8) + 0\n",
            "745 = 0 (1000) + 745\n",
            "1000 = 1 (745) + 255\n",
            "745 = 2 (255) + 235\n",
            "255 = 1 (235) + 20\n",
            "235 = 11 (20) + 15\n",
            "20 = 1 (15) + 5\n",
            "15 = 3 (5) + 0\n",
            "746 = 0 (1000) + 746\n",
            "1000 = 1 (746) + 254\n",
            "746 = 2 (254) + 238\n",
            "254 = 1 (238) + 16\n",
            "238 = 14 (16) + 14\n",
            "16 = 1 (14) + 2\n",
            "14 = 7 (2) + 0\n",
            "747 = 0 (1000) + 747\n",
            "1000 = 1 (747) + 253\n",
            "747 = 2 (253) + 241\n",
            "253 = 1 (241) + 12\n",
            "241 = 20 (12) + 1\n",
            "12 = 12 (1) + 0\n",
            "748 = 0 (1000) + 748\n",
            "1000 = 1 (748) + 252\n",
            "748 = 2 (252) + 244\n",
            "252 = 1 (244) + 8\n",
            "244 = 30 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "749 = 0 (1000) + 749\n",
            "1000 = 1 (749) + 251\n",
            "749 = 2 (251) + 247\n",
            "251 = 1 (247) + 4\n",
            "247 = 61 (4) + 3\n",
            "4 = 1 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "750 = 0 (1000) + 750\n",
            "1000 = 1 (750) + 250\n",
            "750 = 3 (250) + 0\n",
            "751 = 0 (1000) + 751\n",
            "1000 = 1 (751) + 249\n",
            "751 = 3 (249) + 4\n",
            "249 = 62 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "752 = 0 (1000) + 752\n",
            "1000 = 1 (752) + 248\n",
            "752 = 3 (248) + 8\n",
            "248 = 31 (8) + 0\n",
            "753 = 0 (1000) + 753\n",
            "1000 = 1 (753) + 247\n",
            "753 = 3 (247) + 12\n",
            "247 = 20 (12) + 7\n",
            "12 = 1 (7) + 5\n",
            "7 = 1 (5) + 2\n",
            "5 = 2 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "754 = 0 (1000) + 754\n",
            "1000 = 1 (754) + 246\n",
            "754 = 3 (246) + 16\n",
            "246 = 15 (16) + 6\n",
            "16 = 2 (6) + 4\n",
            "6 = 1 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "755 = 0 (1000) + 755\n",
            "1000 = 1 (755) + 245\n",
            "755 = 3 (245) + 20\n",
            "245 = 12 (20) + 5\n",
            "20 = 4 (5) + 0\n",
            "756 = 0 (1000) + 756\n",
            "1000 = 1 (756) + 244\n",
            "756 = 3 (244) + 24\n",
            "244 = 10 (24) + 4\n",
            "24 = 6 (4) + 0\n",
            "757 = 0 (1000) + 757\n",
            "1000 = 1 (757) + 243\n",
            "757 = 3 (243) + 28\n",
            "243 = 8 (28) + 19\n",
            "28 = 1 (19) + 9\n",
            "19 = 2 (9) + 1\n",
            "9 = 9 (1) + 0\n",
            "758 = 0 (1000) + 758\n",
            "1000 = 1 (758) + 242\n",
            "758 = 3 (242) + 32\n",
            "242 = 7 (32) + 18\n",
            "32 = 1 (18) + 14\n",
            "18 = 1 (14) + 4\n",
            "14 = 3 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "759 = 0 (1000) + 759\n",
            "1000 = 1 (759) + 241\n",
            "759 = 3 (241) + 36\n",
            "241 = 6 (36) + 25\n",
            "36 = 1 (25) + 11\n",
            "25 = 2 (11) + 3\n",
            "11 = 3 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "760 = 0 (1000) + 760\n",
            "1000 = 1 (760) + 240\n",
            "760 = 3 (240) + 40\n",
            "240 = 6 (40) + 0\n",
            "761 = 0 (1000) + 761\n",
            "1000 = 1 (761) + 239\n",
            "761 = 3 (239) + 44\n",
            "239 = 5 (44) + 19\n",
            "44 = 2 (19) + 6\n",
            "19 = 3 (6) + 1\n",
            "6 = 6 (1) + 0\n",
            "762 = 0 (1000) + 762\n",
            "1000 = 1 (762) + 238\n",
            "762 = 3 (238) + 48\n",
            "238 = 4 (48) + 46\n",
            "48 = 1 (46) + 2\n",
            "46 = 23 (2) + 0\n",
            "763 = 0 (1000) + 763\n",
            "1000 = 1 (763) + 237\n",
            "763 = 3 (237) + 52\n",
            "237 = 4 (52) + 29\n",
            "52 = 1 (29) + 23\n",
            "29 = 1 (23) + 6\n",
            "23 = 3 (6) + 5\n",
            "6 = 1 (5) + 1\n",
            "5 = 5 (1) + 0\n",
            "764 = 0 (1000) + 764\n",
            "1000 = 1 (764) + 236\n",
            "764 = 3 (236) + 56\n",
            "236 = 4 (56) + 12\n",
            "56 = 4 (12) + 8\n",
            "12 = 1 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "765 = 0 (1000) + 765\n",
            "1000 = 1 (765) + 235\n",
            "765 = 3 (235) + 60\n",
            "235 = 3 (60) + 55\n",
            "60 = 1 (55) + 5\n",
            "55 = 11 (5) + 0\n",
            "766 = 0 (1000) + 766\n",
            "1000 = 1 (766) + 234\n",
            "766 = 3 (234) + 64\n",
            "234 = 3 (64) + 42\n",
            "64 = 1 (42) + 22\n",
            "42 = 1 (22) + 20\n",
            "22 = 1 (20) + 2\n",
            "20 = 10 (2) + 0\n",
            "767 = 0 (1000) + 767\n",
            "1000 = 1 (767) + 233\n",
            "767 = 3 (233) + 68\n",
            "233 = 3 (68) + 29\n",
            "68 = 2 (29) + 10\n",
            "29 = 2 (10) + 9\n",
            "10 = 1 (9) + 1\n",
            "9 = 9 (1) + 0\n",
            "768 = 0 (1000) + 768\n",
            "1000 = 1 (768) + 232\n",
            "768 = 3 (232) + 72\n",
            "232 = 3 (72) + 16\n",
            "72 = 4 (16) + 8\n",
            "16 = 2 (8) + 0\n",
            "769 = 0 (1000) + 769\n",
            "1000 = 1 (769) + 231\n",
            "769 = 3 (231) + 76\n",
            "231 = 3 (76) + 3\n",
            "76 = 25 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "770 = 0 (1000) + 770\n",
            "1000 = 1 (770) + 230\n",
            "770 = 3 (230) + 80\n",
            "230 = 2 (80) + 70\n",
            "80 = 1 (70) + 10\n",
            "70 = 7 (10) + 0\n",
            "771 = 0 (1000) + 771\n",
            "1000 = 1 (771) + 229\n",
            "771 = 3 (229) + 84\n",
            "229 = 2 (84) + 61\n",
            "84 = 1 (61) + 23\n",
            "61 = 2 (23) + 15\n",
            "23 = 1 (15) + 8\n",
            "15 = 1 (8) + 7\n",
            "8 = 1 (7) + 1\n",
            "7 = 7 (1) + 0\n",
            "772 = 0 (1000) + 772\n",
            "1000 = 1 (772) + 228\n",
            "772 = 3 (228) + 88\n",
            "228 = 2 (88) + 52\n",
            "88 = 1 (52) + 36\n",
            "52 = 1 (36) + 16\n",
            "36 = 2 (16) + 4\n",
            "16 = 4 (4) + 0\n",
            "773 = 0 (1000) + 773\n",
            "1000 = 1 (773) + 227\n",
            "773 = 3 (227) + 92\n",
            "227 = 2 (92) + 43\n",
            "92 = 2 (43) + 6\n",
            "43 = 7 (6) + 1\n",
            "6 = 6 (1) + 0\n",
            "774 = 0 (1000) + 774\n",
            "1000 = 1 (774) + 226\n",
            "774 = 3 (226) + 96\n",
            "226 = 2 (96) + 34\n",
            "96 = 2 (34) + 28\n",
            "34 = 1 (28) + 6\n",
            "28 = 4 (6) + 4\n",
            "6 = 1 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "775 = 0 (1000) + 775\n",
            "1000 = 1 (775) + 225\n",
            "775 = 3 (225) + 100\n",
            "225 = 2 (100) + 25\n",
            "100 = 4 (25) + 0\n",
            "776 = 0 (1000) + 776\n",
            "1000 = 1 (776) + 224\n",
            "776 = 3 (224) + 104\n",
            "224 = 2 (104) + 16\n",
            "104 = 6 (16) + 8\n",
            "16 = 2 (8) + 0\n",
            "777 = 0 (1000) + 777\n",
            "1000 = 1 (777) + 223\n",
            "777 = 3 (223) + 108\n",
            "223 = 2 (108) + 7\n",
            "108 = 15 (7) + 3\n",
            "7 = 2 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "778 = 0 (1000) + 778\n",
            "1000 = 1 (778) + 222\n",
            "778 = 3 (222) + 112\n",
            "222 = 1 (112) + 110\n",
            "112 = 1 (110) + 2\n",
            "110 = 55 (2) + 0\n",
            "779 = 0 (1000) + 779\n",
            "1000 = 1 (779) + 221\n",
            "779 = 3 (221) + 116\n",
            "221 = 1 (116) + 105\n",
            "116 = 1 (105) + 11\n",
            "105 = 9 (11) + 6\n",
            "11 = 1 (6) + 5\n",
            "6 = 1 (5) + 1\n",
            "5 = 5 (1) + 0\n",
            "780 = 0 (1000) + 780\n",
            "1000 = 1 (780) + 220\n",
            "780 = 3 (220) + 120\n",
            "220 = 1 (120) + 100\n",
            "120 = 1 (100) + 20\n",
            "100 = 5 (20) + 0\n",
            "781 = 0 (1000) + 781\n",
            "1000 = 1 (781) + 219\n",
            "781 = 3 (219) + 124\n",
            "219 = 1 (124) + 95\n",
            "124 = 1 (95) + 29\n",
            "95 = 3 (29) + 8\n",
            "29 = 3 (8) + 5\n",
            "8 = 1 (5) + 3\n",
            "5 = 1 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "782 = 0 (1000) + 782\n",
            "1000 = 1 (782) + 218\n",
            "782 = 3 (218) + 128\n",
            "218 = 1 (128) + 90\n",
            "128 = 1 (90) + 38\n",
            "90 = 2 (38) + 14\n",
            "38 = 2 (14) + 10\n",
            "14 = 1 (10) + 4\n",
            "10 = 2 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "783 = 0 (1000) + 783\n",
            "1000 = 1 (783) + 217\n",
            "783 = 3 (217) + 132\n",
            "217 = 1 (132) + 85\n",
            "132 = 1 (85) + 47\n",
            "85 = 1 (47) + 38\n",
            "47 = 1 (38) + 9\n",
            "38 = 4 (9) + 2\n",
            "9 = 4 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "784 = 0 (1000) + 784\n",
            "1000 = 1 (784) + 216\n",
            "784 = 3 (216) + 136\n",
            "216 = 1 (136) + 80\n",
            "136 = 1 (80) + 56\n",
            "80 = 1 (56) + 24\n",
            "56 = 2 (24) + 8\n",
            "24 = 3 (8) + 0\n",
            "785 = 0 (1000) + 785\n",
            "1000 = 1 (785) + 215\n",
            "785 = 3 (215) + 140\n",
            "215 = 1 (140) + 75\n",
            "140 = 1 (75) + 65\n",
            "75 = 1 (65) + 10\n",
            "65 = 6 (10) + 5\n",
            "10 = 2 (5) + 0\n",
            "786 = 0 (1000) + 786\n",
            "1000 = 1 (786) + 214\n",
            "786 = 3 (214) + 144\n",
            "214 = 1 (144) + 70\n",
            "144 = 2 (70) + 4\n",
            "70 = 17 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "787 = 0 (1000) + 787\n",
            "1000 = 1 (787) + 213\n",
            "787 = 3 (213) + 148\n",
            "213 = 1 (148) + 65\n",
            "148 = 2 (65) + 18\n",
            "65 = 3 (18) + 11\n",
            "18 = 1 (11) + 7\n",
            "11 = 1 (7) + 4\n",
            "7 = 1 (4) + 3\n",
            "4 = 1 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "788 = 0 (1000) + 788\n",
            "1000 = 1 (788) + 212\n",
            "788 = 3 (212) + 152\n",
            "212 = 1 (152) + 60\n",
            "152 = 2 (60) + 32\n",
            "60 = 1 (32) + 28\n",
            "32 = 1 (28) + 4\n",
            "28 = 7 (4) + 0\n",
            "789 = 0 (1000) + 789\n",
            "1000 = 1 (789) + 211\n",
            "789 = 3 (211) + 156\n",
            "211 = 1 (156) + 55\n",
            "156 = 2 (55) + 46\n",
            "55 = 1 (46) + 9\n",
            "46 = 5 (9) + 1\n",
            "9 = 9 (1) + 0\n",
            "790 = 0 (1000) + 790\n",
            "1000 = 1 (790) + 210\n",
            "790 = 3 (210) + 160\n",
            "210 = 1 (160) + 50\n",
            "160 = 3 (50) + 10\n",
            "50 = 5 (10) + 0\n",
            "791 = 0 (1000) + 791\n",
            "1000 = 1 (791) + 209\n",
            "791 = 3 (209) + 164\n",
            "209 = 1 (164) + 45\n",
            "164 = 3 (45) + 29\n",
            "45 = 1 (29) + 16\n",
            "29 = 1 (16) + 13\n",
            "16 = 1 (13) + 3\n",
            "13 = 4 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "792 = 0 (1000) + 792\n",
            "1000 = 1 (792) + 208\n",
            "792 = 3 (208) + 168\n",
            "208 = 1 (168) + 40\n",
            "168 = 4 (40) + 8\n",
            "40 = 5 (8) + 0\n",
            "793 = 0 (1000) + 793\n",
            "1000 = 1 (793) + 207\n",
            "793 = 3 (207) + 172\n",
            "207 = 1 (172) + 35\n",
            "172 = 4 (35) + 32\n",
            "35 = 1 (32) + 3\n",
            "32 = 10 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "794 = 0 (1000) + 794\n",
            "1000 = 1 (794) + 206\n",
            "794 = 3 (206) + 176\n",
            "206 = 1 (176) + 30\n",
            "176 = 5 (30) + 26\n",
            "30 = 1 (26) + 4\n",
            "26 = 6 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "795 = 0 (1000) + 795\n",
            "1000 = 1 (795) + 205\n",
            "795 = 3 (205) + 180\n",
            "205 = 1 (180) + 25\n",
            "180 = 7 (25) + 5\n",
            "25 = 5 (5) + 0\n",
            "796 = 0 (1000) + 796\n",
            "1000 = 1 (796) + 204\n",
            "796 = 3 (204) + 184\n",
            "204 = 1 (184) + 20\n",
            "184 = 9 (20) + 4\n",
            "20 = 5 (4) + 0\n",
            "797 = 0 (1000) + 797\n",
            "1000 = 1 (797) + 203\n",
            "797 = 3 (203) + 188\n",
            "203 = 1 (188) + 15\n",
            "188 = 12 (15) + 8\n",
            "15 = 1 (8) + 7\n",
            "8 = 1 (7) + 1\n",
            "7 = 7 (1) + 0\n",
            "798 = 0 (1000) + 798\n",
            "1000 = 1 (798) + 202\n",
            "798 = 3 (202) + 192\n",
            "202 = 1 (192) + 10\n",
            "192 = 19 (10) + 2\n",
            "10 = 5 (2) + 0\n",
            "799 = 0 (1000) + 799\n",
            "1000 = 1 (799) + 201\n",
            "799 = 3 (201) + 196\n",
            "201 = 1 (196) + 5\n",
            "196 = 39 (5) + 1\n",
            "5 = 5 (1) + 0\n",
            "800 = 0 (1000) + 800\n",
            "1000 = 1 (800) + 200\n",
            "800 = 4 (200) + 0\n",
            "801 = 0 (1000) + 801\n",
            "1000 = 1 (801) + 199\n",
            "801 = 4 (199) + 5\n",
            "199 = 39 (5) + 4\n",
            "5 = 1 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "802 = 0 (1000) + 802\n",
            "1000 = 1 (802) + 198\n",
            "802 = 4 (198) + 10\n",
            "198 = 19 (10) + 8\n",
            "10 = 1 (8) + 2\n",
            "8 = 4 (2) + 0\n",
            "803 = 0 (1000) + 803\n",
            "1000 = 1 (803) + 197\n",
            "803 = 4 (197) + 15\n",
            "197 = 13 (15) + 2\n",
            "15 = 7 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "804 = 0 (1000) + 804\n",
            "1000 = 1 (804) + 196\n",
            "804 = 4 (196) + 20\n",
            "196 = 9 (20) + 16\n",
            "20 = 1 (16) + 4\n",
            "16 = 4 (4) + 0\n",
            "805 = 0 (1000) + 805\n",
            "1000 = 1 (805) + 195\n",
            "805 = 4 (195) + 25\n",
            "195 = 7 (25) + 20\n",
            "25 = 1 (20) + 5\n",
            "20 = 4 (5) + 0\n",
            "806 = 0 (1000) + 806\n",
            "1000 = 1 (806) + 194\n",
            "806 = 4 (194) + 30\n",
            "194 = 6 (30) + 14\n",
            "30 = 2 (14) + 2\n",
            "14 = 7 (2) + 0\n",
            "807 = 0 (1000) + 807\n",
            "1000 = 1 (807) + 193\n",
            "807 = 4 (193) + 35\n",
            "193 = 5 (35) + 18\n",
            "35 = 1 (18) + 17\n",
            "18 = 1 (17) + 1\n",
            "17 = 17 (1) + 0\n",
            "808 = 0 (1000) + 808\n",
            "1000 = 1 (808) + 192\n",
            "808 = 4 (192) + 40\n",
            "192 = 4 (40) + 32\n",
            "40 = 1 (32) + 8\n",
            "32 = 4 (8) + 0\n",
            "809 = 0 (1000) + 809\n",
            "1000 = 1 (809) + 191\n",
            "809 = 4 (191) + 45\n",
            "191 = 4 (45) + 11\n",
            "45 = 4 (11) + 1\n",
            "11 = 11 (1) + 0\n",
            "810 = 0 (1000) + 810\n",
            "1000 = 1 (810) + 190\n",
            "810 = 4 (190) + 50\n",
            "190 = 3 (50) + 40\n",
            "50 = 1 (40) + 10\n",
            "40 = 4 (10) + 0\n",
            "811 = 0 (1000) + 811\n",
            "1000 = 1 (811) + 189\n",
            "811 = 4 (189) + 55\n",
            "189 = 3 (55) + 24\n",
            "55 = 2 (24) + 7\n",
            "24 = 3 (7) + 3\n",
            "7 = 2 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "812 = 0 (1000) + 812\n",
            "1000 = 1 (812) + 188\n",
            "812 = 4 (188) + 60\n",
            "188 = 3 (60) + 8\n",
            "60 = 7 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "813 = 0 (1000) + 813\n",
            "1000 = 1 (813) + 187\n",
            "813 = 4 (187) + 65\n",
            "187 = 2 (65) + 57\n",
            "65 = 1 (57) + 8\n",
            "57 = 7 (8) + 1\n",
            "8 = 8 (1) + 0\n",
            "814 = 0 (1000) + 814\n",
            "1000 = 1 (814) + 186\n",
            "814 = 4 (186) + 70\n",
            "186 = 2 (70) + 46\n",
            "70 = 1 (46) + 24\n",
            "46 = 1 (24) + 22\n",
            "24 = 1 (22) + 2\n",
            "22 = 11 (2) + 0\n",
            "815 = 0 (1000) + 815\n",
            "1000 = 1 (815) + 185\n",
            "815 = 4 (185) + 75\n",
            "185 = 2 (75) + 35\n",
            "75 = 2 (35) + 5\n",
            "35 = 7 (5) + 0\n",
            "816 = 0 (1000) + 816\n",
            "1000 = 1 (816) + 184\n",
            "816 = 4 (184) + 80\n",
            "184 = 2 (80) + 24\n",
            "80 = 3 (24) + 8\n",
            "24 = 3 (8) + 0\n",
            "817 = 0 (1000) + 817\n",
            "1000 = 1 (817) + 183\n",
            "817 = 4 (183) + 85\n",
            "183 = 2 (85) + 13\n",
            "85 = 6 (13) + 7\n",
            "13 = 1 (7) + 6\n",
            "7 = 1 (6) + 1\n",
            "6 = 6 (1) + 0\n",
            "818 = 0 (1000) + 818\n",
            "1000 = 1 (818) + 182\n",
            "818 = 4 (182) + 90\n",
            "182 = 2 (90) + 2\n",
            "90 = 45 (2) + 0\n",
            "819 = 0 (1000) + 819\n",
            "1000 = 1 (819) + 181\n",
            "819 = 4 (181) + 95\n",
            "181 = 1 (95) + 86\n",
            "95 = 1 (86) + 9\n",
            "86 = 9 (9) + 5\n",
            "9 = 1 (5) + 4\n",
            "5 = 1 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "820 = 0 (1000) + 820\n",
            "1000 = 1 (820) + 180\n",
            "820 = 4 (180) + 100\n",
            "180 = 1 (100) + 80\n",
            "100 = 1 (80) + 20\n",
            "80 = 4 (20) + 0\n",
            "821 = 0 (1000) + 821\n",
            "1000 = 1 (821) + 179\n",
            "821 = 4 (179) + 105\n",
            "179 = 1 (105) + 74\n",
            "105 = 1 (74) + 31\n",
            "74 = 2 (31) + 12\n",
            "31 = 2 (12) + 7\n",
            "12 = 1 (7) + 5\n",
            "7 = 1 (5) + 2\n",
            "5 = 2 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "822 = 0 (1000) + 822\n",
            "1000 = 1 (822) + 178\n",
            "822 = 4 (178) + 110\n",
            "178 = 1 (110) + 68\n",
            "110 = 1 (68) + 42\n",
            "68 = 1 (42) + 26\n",
            "42 = 1 (26) + 16\n",
            "26 = 1 (16) + 10\n",
            "16 = 1 (10) + 6\n",
            "10 = 1 (6) + 4\n",
            "6 = 1 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "823 = 0 (1000) + 823\n",
            "1000 = 1 (823) + 177\n",
            "823 = 4 (177) + 115\n",
            "177 = 1 (115) + 62\n",
            "115 = 1 (62) + 53\n",
            "62 = 1 (53) + 9\n",
            "53 = 5 (9) + 8\n",
            "9 = 1 (8) + 1\n",
            "8 = 8 (1) + 0\n",
            "824 = 0 (1000) + 824\n",
            "1000 = 1 (824) + 176\n",
            "824 = 4 (176) + 120\n",
            "176 = 1 (120) + 56\n",
            "120 = 2 (56) + 8\n",
            "56 = 7 (8) + 0\n",
            "825 = 0 (1000) + 825\n",
            "1000 = 1 (825) + 175\n",
            "825 = 4 (175) + 125\n",
            "175 = 1 (125) + 50\n",
            "125 = 2 (50) + 25\n",
            "50 = 2 (25) + 0\n",
            "826 = 0 (1000) + 826\n",
            "1000 = 1 (826) + 174\n",
            "826 = 4 (174) + 130\n",
            "174 = 1 (130) + 44\n",
            "130 = 2 (44) + 42\n",
            "44 = 1 (42) + 2\n",
            "42 = 21 (2) + 0\n",
            "827 = 0 (1000) + 827\n",
            "1000 = 1 (827) + 173\n",
            "827 = 4 (173) + 135\n",
            "173 = 1 (135) + 38\n",
            "135 = 3 (38) + 21\n",
            "38 = 1 (21) + 17\n",
            "21 = 1 (17) + 4\n",
            "17 = 4 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "828 = 0 (1000) + 828\n",
            "1000 = 1 (828) + 172\n",
            "828 = 4 (172) + 140\n",
            "172 = 1 (140) + 32\n",
            "140 = 4 (32) + 12\n",
            "32 = 2 (12) + 8\n",
            "12 = 1 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "829 = 0 (1000) + 829\n",
            "1000 = 1 (829) + 171\n",
            "829 = 4 (171) + 145\n",
            "171 = 1 (145) + 26\n",
            "145 = 5 (26) + 15\n",
            "26 = 1 (15) + 11\n",
            "15 = 1 (11) + 4\n",
            "11 = 2 (4) + 3\n",
            "4 = 1 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "830 = 0 (1000) + 830\n",
            "1000 = 1 (830) + 170\n",
            "830 = 4 (170) + 150\n",
            "170 = 1 (150) + 20\n",
            "150 = 7 (20) + 10\n",
            "20 = 2 (10) + 0\n",
            "831 = 0 (1000) + 831\n",
            "1000 = 1 (831) + 169\n",
            "831 = 4 (169) + 155\n",
            "169 = 1 (155) + 14\n",
            "155 = 11 (14) + 1\n",
            "14 = 14 (1) + 0\n",
            "832 = 0 (1000) + 832\n",
            "1000 = 1 (832) + 168\n",
            "832 = 4 (168) + 160\n",
            "168 = 1 (160) + 8\n",
            "160 = 20 (8) + 0\n",
            "833 = 0 (1000) + 833\n",
            "1000 = 1 (833) + 167\n",
            "833 = 4 (167) + 165\n",
            "167 = 1 (165) + 2\n",
            "165 = 82 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "834 = 0 (1000) + 834\n",
            "1000 = 1 (834) + 166\n",
            "834 = 5 (166) + 4\n",
            "166 = 41 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "835 = 0 (1000) + 835\n",
            "1000 = 1 (835) + 165\n",
            "835 = 5 (165) + 10\n",
            "165 = 16 (10) + 5\n",
            "10 = 2 (5) + 0\n",
            "836 = 0 (1000) + 836\n",
            "1000 = 1 (836) + 164\n",
            "836 = 5 (164) + 16\n",
            "164 = 10 (16) + 4\n",
            "16 = 4 (4) + 0\n",
            "837 = 0 (1000) + 837\n",
            "1000 = 1 (837) + 163\n",
            "837 = 5 (163) + 22\n",
            "163 = 7 (22) + 9\n",
            "22 = 2 (9) + 4\n",
            "9 = 2 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "838 = 0 (1000) + 838\n",
            "1000 = 1 (838) + 162\n",
            "838 = 5 (162) + 28\n",
            "162 = 5 (28) + 22\n",
            "28 = 1 (22) + 6\n",
            "22 = 3 (6) + 4\n",
            "6 = 1 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "839 = 0 (1000) + 839\n",
            "1000 = 1 (839) + 161\n",
            "839 = 5 (161) + 34\n",
            "161 = 4 (34) + 25\n",
            "34 = 1 (25) + 9\n",
            "25 = 2 (9) + 7\n",
            "9 = 1 (7) + 2\n",
            "7 = 3 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "840 = 0 (1000) + 840\n",
            "1000 = 1 (840) + 160\n",
            "840 = 5 (160) + 40\n",
            "160 = 4 (40) + 0\n",
            "841 = 0 (1000) + 841\n",
            "1000 = 1 (841) + 159\n",
            "841 = 5 (159) + 46\n",
            "159 = 3 (46) + 21\n",
            "46 = 2 (21) + 4\n",
            "21 = 5 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "842 = 0 (1000) + 842\n",
            "1000 = 1 (842) + 158\n",
            "842 = 5 (158) + 52\n",
            "158 = 3 (52) + 2\n",
            "52 = 26 (2) + 0\n",
            "843 = 0 (1000) + 843\n",
            "1000 = 1 (843) + 157\n",
            "843 = 5 (157) + 58\n",
            "157 = 2 (58) + 41\n",
            "58 = 1 (41) + 17\n",
            "41 = 2 (17) + 7\n",
            "17 = 2 (7) + 3\n",
            "7 = 2 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "844 = 0 (1000) + 844\n",
            "1000 = 1 (844) + 156\n",
            "844 = 5 (156) + 64\n",
            "156 = 2 (64) + 28\n",
            "64 = 2 (28) + 8\n",
            "28 = 3 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "845 = 0 (1000) + 845\n",
            "1000 = 1 (845) + 155\n",
            "845 = 5 (155) + 70\n",
            "155 = 2 (70) + 15\n",
            "70 = 4 (15) + 10\n",
            "15 = 1 (10) + 5\n",
            "10 = 2 (5) + 0\n",
            "846 = 0 (1000) + 846\n",
            "1000 = 1 (846) + 154\n",
            "846 = 5 (154) + 76\n",
            "154 = 2 (76) + 2\n",
            "76 = 38 (2) + 0\n",
            "847 = 0 (1000) + 847\n",
            "1000 = 1 (847) + 153\n",
            "847 = 5 (153) + 82\n",
            "153 = 1 (82) + 71\n",
            "82 = 1 (71) + 11\n",
            "71 = 6 (11) + 5\n",
            "11 = 2 (5) + 1\n",
            "5 = 5 (1) + 0\n",
            "848 = 0 (1000) + 848\n",
            "1000 = 1 (848) + 152\n",
            "848 = 5 (152) + 88\n",
            "152 = 1 (88) + 64\n",
            "88 = 1 (64) + 24\n",
            "64 = 2 (24) + 16\n",
            "24 = 1 (16) + 8\n",
            "16 = 2 (8) + 0\n",
            "849 = 0 (1000) + 849\n",
            "1000 = 1 (849) + 151\n",
            "849 = 5 (151) + 94\n",
            "151 = 1 (94) + 57\n",
            "94 = 1 (57) + 37\n",
            "57 = 1 (37) + 20\n",
            "37 = 1 (20) + 17\n",
            "20 = 1 (17) + 3\n",
            "17 = 5 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "850 = 0 (1000) + 850\n",
            "1000 = 1 (850) + 150\n",
            "850 = 5 (150) + 100\n",
            "150 = 1 (100) + 50\n",
            "100 = 2 (50) + 0\n",
            "851 = 0 (1000) + 851\n",
            "1000 = 1 (851) + 149\n",
            "851 = 5 (149) + 106\n",
            "149 = 1 (106) + 43\n",
            "106 = 2 (43) + 20\n",
            "43 = 2 (20) + 3\n",
            "20 = 6 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "852 = 0 (1000) + 852\n",
            "1000 = 1 (852) + 148\n",
            "852 = 5 (148) + 112\n",
            "148 = 1 (112) + 36\n",
            "112 = 3 (36) + 4\n",
            "36 = 9 (4) + 0\n",
            "853 = 0 (1000) + 853\n",
            "1000 = 1 (853) + 147\n",
            "853 = 5 (147) + 118\n",
            "147 = 1 (118) + 29\n",
            "118 = 4 (29) + 2\n",
            "29 = 14 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "854 = 0 (1000) + 854\n",
            "1000 = 1 (854) + 146\n",
            "854 = 5 (146) + 124\n",
            "146 = 1 (124) + 22\n",
            "124 = 5 (22) + 14\n",
            "22 = 1 (14) + 8\n",
            "14 = 1 (8) + 6\n",
            "8 = 1 (6) + 2\n",
            "6 = 3 (2) + 0\n",
            "855 = 0 (1000) + 855\n",
            "1000 = 1 (855) + 145\n",
            "855 = 5 (145) + 130\n",
            "145 = 1 (130) + 15\n",
            "130 = 8 (15) + 10\n",
            "15 = 1 (10) + 5\n",
            "10 = 2 (5) + 0\n",
            "856 = 0 (1000) + 856\n",
            "1000 = 1 (856) + 144\n",
            "856 = 5 (144) + 136\n",
            "144 = 1 (136) + 8\n",
            "136 = 17 (8) + 0\n",
            "857 = 0 (1000) + 857\n",
            "1000 = 1 (857) + 143\n",
            "857 = 5 (143) + 142\n",
            "143 = 1 (142) + 1\n",
            "142 = 142 (1) + 0\n",
            "858 = 0 (1000) + 858\n",
            "1000 = 1 (858) + 142\n",
            "858 = 6 (142) + 6\n",
            "142 = 23 (6) + 4\n",
            "6 = 1 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "859 = 0 (1000) + 859\n",
            "1000 = 1 (859) + 141\n",
            "859 = 6 (141) + 13\n",
            "141 = 10 (13) + 11\n",
            "13 = 1 (11) + 2\n",
            "11 = 5 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "860 = 0 (1000) + 860\n",
            "1000 = 1 (860) + 140\n",
            "860 = 6 (140) + 20\n",
            "140 = 7 (20) + 0\n",
            "861 = 0 (1000) + 861\n",
            "1000 = 1 (861) + 139\n",
            "861 = 6 (139) + 27\n",
            "139 = 5 (27) + 4\n",
            "27 = 6 (4) + 3\n",
            "4 = 1 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "862 = 0 (1000) + 862\n",
            "1000 = 1 (862) + 138\n",
            "862 = 6 (138) + 34\n",
            "138 = 4 (34) + 2\n",
            "34 = 17 (2) + 0\n",
            "863 = 0 (1000) + 863\n",
            "1000 = 1 (863) + 137\n",
            "863 = 6 (137) + 41\n",
            "137 = 3 (41) + 14\n",
            "41 = 2 (14) + 13\n",
            "14 = 1 (13) + 1\n",
            "13 = 13 (1) + 0\n",
            "864 = 0 (1000) + 864\n",
            "1000 = 1 (864) + 136\n",
            "864 = 6 (136) + 48\n",
            "136 = 2 (48) + 40\n",
            "48 = 1 (40) + 8\n",
            "40 = 5 (8) + 0\n",
            "865 = 0 (1000) + 865\n",
            "1000 = 1 (865) + 135\n",
            "865 = 6 (135) + 55\n",
            "135 = 2 (55) + 25\n",
            "55 = 2 (25) + 5\n",
            "25 = 5 (5) + 0\n",
            "866 = 0 (1000) + 866\n",
            "1000 = 1 (866) + 134\n",
            "866 = 6 (134) + 62\n",
            "134 = 2 (62) + 10\n",
            "62 = 6 (10) + 2\n",
            "10 = 5 (2) + 0\n",
            "867 = 0 (1000) + 867\n",
            "1000 = 1 (867) + 133\n",
            "867 = 6 (133) + 69\n",
            "133 = 1 (69) + 64\n",
            "69 = 1 (64) + 5\n",
            "64 = 12 (5) + 4\n",
            "5 = 1 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "868 = 0 (1000) + 868\n",
            "1000 = 1 (868) + 132\n",
            "868 = 6 (132) + 76\n",
            "132 = 1 (76) + 56\n",
            "76 = 1 (56) + 20\n",
            "56 = 2 (20) + 16\n",
            "20 = 1 (16) + 4\n",
            "16 = 4 (4) + 0\n",
            "869 = 0 (1000) + 869\n",
            "1000 = 1 (869) + 131\n",
            "869 = 6 (131) + 83\n",
            "131 = 1 (83) + 48\n",
            "83 = 1 (48) + 35\n",
            "48 = 1 (35) + 13\n",
            "35 = 2 (13) + 9\n",
            "13 = 1 (9) + 4\n",
            "9 = 2 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "870 = 0 (1000) + 870\n",
            "1000 = 1 (870) + 130\n",
            "870 = 6 (130) + 90\n",
            "130 = 1 (90) + 40\n",
            "90 = 2 (40) + 10\n",
            "40 = 4 (10) + 0\n",
            "871 = 0 (1000) + 871\n",
            "1000 = 1 (871) + 129\n",
            "871 = 6 (129) + 97\n",
            "129 = 1 (97) + 32\n",
            "97 = 3 (32) + 1\n",
            "32 = 32 (1) + 0\n",
            "872 = 0 (1000) + 872\n",
            "1000 = 1 (872) + 128\n",
            "872 = 6 (128) + 104\n",
            "128 = 1 (104) + 24\n",
            "104 = 4 (24) + 8\n",
            "24 = 3 (8) + 0\n",
            "873 = 0 (1000) + 873\n",
            "1000 = 1 (873) + 127\n",
            "873 = 6 (127) + 111\n",
            "127 = 1 (111) + 16\n",
            "111 = 6 (16) + 15\n",
            "16 = 1 (15) + 1\n",
            "15 = 15 (1) + 0\n",
            "874 = 0 (1000) + 874\n",
            "1000 = 1 (874) + 126\n",
            "874 = 6 (126) + 118\n",
            "126 = 1 (118) + 8\n",
            "118 = 14 (8) + 6\n",
            "8 = 1 (6) + 2\n",
            "6 = 3 (2) + 0\n",
            "875 = 0 (1000) + 875\n",
            "1000 = 1 (875) + 125\n",
            "875 = 7 (125) + 0\n",
            "876 = 0 (1000) + 876\n",
            "1000 = 1 (876) + 124\n",
            "876 = 7 (124) + 8\n",
            "124 = 15 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "877 = 0 (1000) + 877\n",
            "1000 = 1 (877) + 123\n",
            "877 = 7 (123) + 16\n",
            "123 = 7 (16) + 11\n",
            "16 = 1 (11) + 5\n",
            "11 = 2 (5) + 1\n",
            "5 = 5 (1) + 0\n",
            "878 = 0 (1000) + 878\n",
            "1000 = 1 (878) + 122\n",
            "878 = 7 (122) + 24\n",
            "122 = 5 (24) + 2\n",
            "24 = 12 (2) + 0\n",
            "879 = 0 (1000) + 879\n",
            "1000 = 1 (879) + 121\n",
            "879 = 7 (121) + 32\n",
            "121 = 3 (32) + 25\n",
            "32 = 1 (25) + 7\n",
            "25 = 3 (7) + 4\n",
            "7 = 1 (4) + 3\n",
            "4 = 1 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "880 = 0 (1000) + 880\n",
            "1000 = 1 (880) + 120\n",
            "880 = 7 (120) + 40\n",
            "120 = 3 (40) + 0\n",
            "881 = 0 (1000) + 881\n",
            "1000 = 1 (881) + 119\n",
            "881 = 7 (119) + 48\n",
            "119 = 2 (48) + 23\n",
            "48 = 2 (23) + 2\n",
            "23 = 11 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "882 = 0 (1000) + 882\n",
            "1000 = 1 (882) + 118\n",
            "882 = 7 (118) + 56\n",
            "118 = 2 (56) + 6\n",
            "56 = 9 (6) + 2\n",
            "6 = 3 (2) + 0\n",
            "883 = 0 (1000) + 883\n",
            "1000 = 1 (883) + 117\n",
            "883 = 7 (117) + 64\n",
            "117 = 1 (64) + 53\n",
            "64 = 1 (53) + 11\n",
            "53 = 4 (11) + 9\n",
            "11 = 1 (9) + 2\n",
            "9 = 4 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "884 = 0 (1000) + 884\n",
            "1000 = 1 (884) + 116\n",
            "884 = 7 (116) + 72\n",
            "116 = 1 (72) + 44\n",
            "72 = 1 (44) + 28\n",
            "44 = 1 (28) + 16\n",
            "28 = 1 (16) + 12\n",
            "16 = 1 (12) + 4\n",
            "12 = 3 (4) + 0\n",
            "885 = 0 (1000) + 885\n",
            "1000 = 1 (885) + 115\n",
            "885 = 7 (115) + 80\n",
            "115 = 1 (80) + 35\n",
            "80 = 2 (35) + 10\n",
            "35 = 3 (10) + 5\n",
            "10 = 2 (5) + 0\n",
            "886 = 0 (1000) + 886\n",
            "1000 = 1 (886) + 114\n",
            "886 = 7 (114) + 88\n",
            "114 = 1 (88) + 26\n",
            "88 = 3 (26) + 10\n",
            "26 = 2 (10) + 6\n",
            "10 = 1 (6) + 4\n",
            "6 = 1 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "887 = 0 (1000) + 887\n",
            "1000 = 1 (887) + 113\n",
            "887 = 7 (113) + 96\n",
            "113 = 1 (96) + 17\n",
            "96 = 5 (17) + 11\n",
            "17 = 1 (11) + 6\n",
            "11 = 1 (6) + 5\n",
            "6 = 1 (5) + 1\n",
            "5 = 5 (1) + 0\n",
            "888 = 0 (1000) + 888\n",
            "1000 = 1 (888) + 112\n",
            "888 = 7 (112) + 104\n",
            "112 = 1 (104) + 8\n",
            "104 = 13 (8) + 0\n",
            "889 = 0 (1000) + 889\n",
            "1000 = 1 (889) + 111\n",
            "889 = 8 (111) + 1\n",
            "111 = 111 (1) + 0\n",
            "890 = 0 (1000) + 890\n",
            "1000 = 1 (890) + 110\n",
            "890 = 8 (110) + 10\n",
            "110 = 11 (10) + 0\n",
            "891 = 0 (1000) + 891\n",
            "1000 = 1 (891) + 109\n",
            "891 = 8 (109) + 19\n",
            "109 = 5 (19) + 14\n",
            "19 = 1 (14) + 5\n",
            "14 = 2 (5) + 4\n",
            "5 = 1 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "892 = 0 (1000) + 892\n",
            "1000 = 1 (892) + 108\n",
            "892 = 8 (108) + 28\n",
            "108 = 3 (28) + 24\n",
            "28 = 1 (24) + 4\n",
            "24 = 6 (4) + 0\n",
            "893 = 0 (1000) + 893\n",
            "1000 = 1 (893) + 107\n",
            "893 = 8 (107) + 37\n",
            "107 = 2 (37) + 33\n",
            "37 = 1 (33) + 4\n",
            "33 = 8 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "894 = 0 (1000) + 894\n",
            "1000 = 1 (894) + 106\n",
            "894 = 8 (106) + 46\n",
            "106 = 2 (46) + 14\n",
            "46 = 3 (14) + 4\n",
            "14 = 3 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "895 = 0 (1000) + 895\n",
            "1000 = 1 (895) + 105\n",
            "895 = 8 (105) + 55\n",
            "105 = 1 (55) + 50\n",
            "55 = 1 (50) + 5\n",
            "50 = 10 (5) + 0\n",
            "896 = 0 (1000) + 896\n",
            "1000 = 1 (896) + 104\n",
            "896 = 8 (104) + 64\n",
            "104 = 1 (64) + 40\n",
            "64 = 1 (40) + 24\n",
            "40 = 1 (24) + 16\n",
            "24 = 1 (16) + 8\n",
            "16 = 2 (8) + 0\n",
            "897 = 0 (1000) + 897\n",
            "1000 = 1 (897) + 103\n",
            "897 = 8 (103) + 73\n",
            "103 = 1 (73) + 30\n",
            "73 = 2 (30) + 13\n",
            "30 = 2 (13) + 4\n",
            "13 = 3 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "898 = 0 (1000) + 898\n",
            "1000 = 1 (898) + 102\n",
            "898 = 8 (102) + 82\n",
            "102 = 1 (82) + 20\n",
            "82 = 4 (20) + 2\n",
            "20 = 10 (2) + 0\n",
            "899 = 0 (1000) + 899\n",
            "1000 = 1 (899) + 101\n",
            "899 = 8 (101) + 91\n",
            "101 = 1 (91) + 10\n",
            "91 = 9 (10) + 1\n",
            "10 = 10 (1) + 0\n",
            "900 = 0 (1000) + 900\n",
            "1000 = 1 (900) + 100\n",
            "900 = 9 (100) + 0\n",
            "901 = 0 (1000) + 901\n",
            "1000 = 1 (901) + 99\n",
            "901 = 9 (99) + 10\n",
            "99 = 9 (10) + 9\n",
            "10 = 1 (9) + 1\n",
            "9 = 9 (1) + 0\n",
            "902 = 0 (1000) + 902\n",
            "1000 = 1 (902) + 98\n",
            "902 = 9 (98) + 20\n",
            "98 = 4 (20) + 18\n",
            "20 = 1 (18) + 2\n",
            "18 = 9 (2) + 0\n",
            "903 = 0 (1000) + 903\n",
            "1000 = 1 (903) + 97\n",
            "903 = 9 (97) + 30\n",
            "97 = 3 (30) + 7\n",
            "30 = 4 (7) + 2\n",
            "7 = 3 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "904 = 0 (1000) + 904\n",
            "1000 = 1 (904) + 96\n",
            "904 = 9 (96) + 40\n",
            "96 = 2 (40) + 16\n",
            "40 = 2 (16) + 8\n",
            "16 = 2 (8) + 0\n",
            "905 = 0 (1000) + 905\n",
            "1000 = 1 (905) + 95\n",
            "905 = 9 (95) + 50\n",
            "95 = 1 (50) + 45\n",
            "50 = 1 (45) + 5\n",
            "45 = 9 (5) + 0\n",
            "906 = 0 (1000) + 906\n",
            "1000 = 1 (906) + 94\n",
            "906 = 9 (94) + 60\n",
            "94 = 1 (60) + 34\n",
            "60 = 1 (34) + 26\n",
            "34 = 1 (26) + 8\n",
            "26 = 3 (8) + 2\n",
            "8 = 4 (2) + 0\n",
            "907 = 0 (1000) + 907\n",
            "1000 = 1 (907) + 93\n",
            "907 = 9 (93) + 70\n",
            "93 = 1 (70) + 23\n",
            "70 = 3 (23) + 1\n",
            "23 = 23 (1) + 0\n",
            "908 = 0 (1000) + 908\n",
            "1000 = 1 (908) + 92\n",
            "908 = 9 (92) + 80\n",
            "92 = 1 (80) + 12\n",
            "80 = 6 (12) + 8\n",
            "12 = 1 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "909 = 0 (1000) + 909\n",
            "1000 = 1 (909) + 91\n",
            "909 = 9 (91) + 90\n",
            "91 = 1 (90) + 1\n",
            "90 = 90 (1) + 0\n",
            "910 = 0 (1000) + 910\n",
            "1000 = 1 (910) + 90\n",
            "910 = 10 (90) + 10\n",
            "90 = 9 (10) + 0\n",
            "911 = 0 (1000) + 911\n",
            "1000 = 1 (911) + 89\n",
            "911 = 10 (89) + 21\n",
            "89 = 4 (21) + 5\n",
            "21 = 4 (5) + 1\n",
            "5 = 5 (1) + 0\n",
            "912 = 0 (1000) + 912\n",
            "1000 = 1 (912) + 88\n",
            "912 = 10 (88) + 32\n",
            "88 = 2 (32) + 24\n",
            "32 = 1 (24) + 8\n",
            "24 = 3 (8) + 0\n",
            "913 = 0 (1000) + 913\n",
            "1000 = 1 (913) + 87\n",
            "913 = 10 (87) + 43\n",
            "87 = 2 (43) + 1\n",
            "43 = 43 (1) + 0\n",
            "914 = 0 (1000) + 914\n",
            "1000 = 1 (914) + 86\n",
            "914 = 10 (86) + 54\n",
            "86 = 1 (54) + 32\n",
            "54 = 1 (32) + 22\n",
            "32 = 1 (22) + 10\n",
            "22 = 2 (10) + 2\n",
            "10 = 5 (2) + 0\n",
            "915 = 0 (1000) + 915\n",
            "1000 = 1 (915) + 85\n",
            "915 = 10 (85) + 65\n",
            "85 = 1 (65) + 20\n",
            "65 = 3 (20) + 5\n",
            "20 = 4 (5) + 0\n",
            "916 = 0 (1000) + 916\n",
            "1000 = 1 (916) + 84\n",
            "916 = 10 (84) + 76\n",
            "84 = 1 (76) + 8\n",
            "76 = 9 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "917 = 0 (1000) + 917\n",
            "1000 = 1 (917) + 83\n",
            "917 = 11 (83) + 4\n",
            "83 = 20 (4) + 3\n",
            "4 = 1 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "918 = 0 (1000) + 918\n",
            "1000 = 1 (918) + 82\n",
            "918 = 11 (82) + 16\n",
            "82 = 5 (16) + 2\n",
            "16 = 8 (2) + 0\n",
            "919 = 0 (1000) + 919\n",
            "1000 = 1 (919) + 81\n",
            "919 = 11 (81) + 28\n",
            "81 = 2 (28) + 25\n",
            "28 = 1 (25) + 3\n",
            "25 = 8 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "920 = 0 (1000) + 920\n",
            "1000 = 1 (920) + 80\n",
            "920 = 11 (80) + 40\n",
            "80 = 2 (40) + 0\n",
            "921 = 0 (1000) + 921\n",
            "1000 = 1 (921) + 79\n",
            "921 = 11 (79) + 52\n",
            "79 = 1 (52) + 27\n",
            "52 = 1 (27) + 25\n",
            "27 = 1 (25) + 2\n",
            "25 = 12 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "922 = 0 (1000) + 922\n",
            "1000 = 1 (922) + 78\n",
            "922 = 11 (78) + 64\n",
            "78 = 1 (64) + 14\n",
            "64 = 4 (14) + 8\n",
            "14 = 1 (8) + 6\n",
            "8 = 1 (6) + 2\n",
            "6 = 3 (2) + 0\n",
            "923 = 0 (1000) + 923\n",
            "1000 = 1 (923) + 77\n",
            "923 = 11 (77) + 76\n",
            "77 = 1 (76) + 1\n",
            "76 = 76 (1) + 0\n",
            "924 = 0 (1000) + 924\n",
            "1000 = 1 (924) + 76\n",
            "924 = 12 (76) + 12\n",
            "76 = 6 (12) + 4\n",
            "12 = 3 (4) + 0\n",
            "925 = 0 (1000) + 925\n",
            "1000 = 1 (925) + 75\n",
            "925 = 12 (75) + 25\n",
            "75 = 3 (25) + 0\n",
            "926 = 0 (1000) + 926\n",
            "1000 = 1 (926) + 74\n",
            "926 = 12 (74) + 38\n",
            "74 = 1 (38) + 36\n",
            "38 = 1 (36) + 2\n",
            "36 = 18 (2) + 0\n",
            "927 = 0 (1000) + 927\n",
            "1000 = 1 (927) + 73\n",
            "927 = 12 (73) + 51\n",
            "73 = 1 (51) + 22\n",
            "51 = 2 (22) + 7\n",
            "22 = 3 (7) + 1\n",
            "7 = 7 (1) + 0\n",
            "928 = 0 (1000) + 928\n",
            "1000 = 1 (928) + 72\n",
            "928 = 12 (72) + 64\n",
            "72 = 1 (64) + 8\n",
            "64 = 8 (8) + 0\n",
            "929 = 0 (1000) + 929\n",
            "1000 = 1 (929) + 71\n",
            "929 = 13 (71) + 6\n",
            "71 = 11 (6) + 5\n",
            "6 = 1 (5) + 1\n",
            "5 = 5 (1) + 0\n",
            "930 = 0 (1000) + 930\n",
            "1000 = 1 (930) + 70\n",
            "930 = 13 (70) + 20\n",
            "70 = 3 (20) + 10\n",
            "20 = 2 (10) + 0\n",
            "931 = 0 (1000) + 931\n",
            "1000 = 1 (931) + 69\n",
            "931 = 13 (69) + 34\n",
            "69 = 2 (34) + 1\n",
            "34 = 34 (1) + 0\n",
            "932 = 0 (1000) + 932\n",
            "1000 = 1 (932) + 68\n",
            "932 = 13 (68) + 48\n",
            "68 = 1 (48) + 20\n",
            "48 = 2 (20) + 8\n",
            "20 = 2 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "933 = 0 (1000) + 933\n",
            "1000 = 1 (933) + 67\n",
            "933 = 13 (67) + 62\n",
            "67 = 1 (62) + 5\n",
            "62 = 12 (5) + 2\n",
            "5 = 2 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "934 = 0 (1000) + 934\n",
            "1000 = 1 (934) + 66\n",
            "934 = 14 (66) + 10\n",
            "66 = 6 (10) + 6\n",
            "10 = 1 (6) + 4\n",
            "6 = 1 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "935 = 0 (1000) + 935\n",
            "1000 = 1 (935) + 65\n",
            "935 = 14 (65) + 25\n",
            "65 = 2 (25) + 15\n",
            "25 = 1 (15) + 10\n",
            "15 = 1 (10) + 5\n",
            "10 = 2 (5) + 0\n",
            "936 = 0 (1000) + 936\n",
            "1000 = 1 (936) + 64\n",
            "936 = 14 (64) + 40\n",
            "64 = 1 (40) + 24\n",
            "40 = 1 (24) + 16\n",
            "24 = 1 (16) + 8\n",
            "16 = 2 (8) + 0\n",
            "937 = 0 (1000) + 937\n",
            "1000 = 1 (937) + 63\n",
            "937 = 14 (63) + 55\n",
            "63 = 1 (55) + 8\n",
            "55 = 6 (8) + 7\n",
            "8 = 1 (7) + 1\n",
            "7 = 7 (1) + 0\n",
            "938 = 0 (1000) + 938\n",
            "1000 = 1 (938) + 62\n",
            "938 = 15 (62) + 8\n",
            "62 = 7 (8) + 6\n",
            "8 = 1 (6) + 2\n",
            "6 = 3 (2) + 0\n",
            "939 = 0 (1000) + 939\n",
            "1000 = 1 (939) + 61\n",
            "939 = 15 (61) + 24\n",
            "61 = 2 (24) + 13\n",
            "24 = 1 (13) + 11\n",
            "13 = 1 (11) + 2\n",
            "11 = 5 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "940 = 0 (1000) + 940\n",
            "1000 = 1 (940) + 60\n",
            "940 = 15 (60) + 40\n",
            "60 = 1 (40) + 20\n",
            "40 = 2 (20) + 0\n",
            "941 = 0 (1000) + 941\n",
            "1000 = 1 (941) + 59\n",
            "941 = 15 (59) + 56\n",
            "59 = 1 (56) + 3\n",
            "56 = 18 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "942 = 0 (1000) + 942\n",
            "1000 = 1 (942) + 58\n",
            "942 = 16 (58) + 14\n",
            "58 = 4 (14) + 2\n",
            "14 = 7 (2) + 0\n",
            "943 = 0 (1000) + 943\n",
            "1000 = 1 (943) + 57\n",
            "943 = 16 (57) + 31\n",
            "57 = 1 (31) + 26\n",
            "31 = 1 (26) + 5\n",
            "26 = 5 (5) + 1\n",
            "5 = 5 (1) + 0\n",
            "944 = 0 (1000) + 944\n",
            "1000 = 1 (944) + 56\n",
            "944 = 16 (56) + 48\n",
            "56 = 1 (48) + 8\n",
            "48 = 6 (8) + 0\n",
            "945 = 0 (1000) + 945\n",
            "1000 = 1 (945) + 55\n",
            "945 = 17 (55) + 10\n",
            "55 = 5 (10) + 5\n",
            "10 = 2 (5) + 0\n",
            "946 = 0 (1000) + 946\n",
            "1000 = 1 (946) + 54\n",
            "946 = 17 (54) + 28\n",
            "54 = 1 (28) + 26\n",
            "28 = 1 (26) + 2\n",
            "26 = 13 (2) + 0\n",
            "947 = 0 (1000) + 947\n",
            "1000 = 1 (947) + 53\n",
            "947 = 17 (53) + 46\n",
            "53 = 1 (46) + 7\n",
            "46 = 6 (7) + 4\n",
            "7 = 1 (4) + 3\n",
            "4 = 1 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "948 = 0 (1000) + 948\n",
            "1000 = 1 (948) + 52\n",
            "948 = 18 (52) + 12\n",
            "52 = 4 (12) + 4\n",
            "12 = 3 (4) + 0\n",
            "949 = 0 (1000) + 949\n",
            "1000 = 1 (949) + 51\n",
            "949 = 18 (51) + 31\n",
            "51 = 1 (31) + 20\n",
            "31 = 1 (20) + 11\n",
            "20 = 1 (11) + 9\n",
            "11 = 1 (9) + 2\n",
            "9 = 4 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "950 = 0 (1000) + 950\n",
            "1000 = 1 (950) + 50\n",
            "950 = 19 (50) + 0\n",
            "951 = 0 (1000) + 951\n",
            "1000 = 1 (951) + 49\n",
            "951 = 19 (49) + 20\n",
            "49 = 2 (20) + 9\n",
            "20 = 2 (9) + 2\n",
            "9 = 4 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "952 = 0 (1000) + 952\n",
            "1000 = 1 (952) + 48\n",
            "952 = 19 (48) + 40\n",
            "48 = 1 (40) + 8\n",
            "40 = 5 (8) + 0\n",
            "953 = 0 (1000) + 953\n",
            "1000 = 1 (953) + 47\n",
            "953 = 20 (47) + 13\n",
            "47 = 3 (13) + 8\n",
            "13 = 1 (8) + 5\n",
            "8 = 1 (5) + 3\n",
            "5 = 1 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "954 = 0 (1000) + 954\n",
            "1000 = 1 (954) + 46\n",
            "954 = 20 (46) + 34\n",
            "46 = 1 (34) + 12\n",
            "34 = 2 (12) + 10\n",
            "12 = 1 (10) + 2\n",
            "10 = 5 (2) + 0\n",
            "955 = 0 (1000) + 955\n",
            "1000 = 1 (955) + 45\n",
            "955 = 21 (45) + 10\n",
            "45 = 4 (10) + 5\n",
            "10 = 2 (5) + 0\n",
            "956 = 0 (1000) + 956\n",
            "1000 = 1 (956) + 44\n",
            "956 = 21 (44) + 32\n",
            "44 = 1 (32) + 12\n",
            "32 = 2 (12) + 8\n",
            "12 = 1 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "957 = 0 (1000) + 957\n",
            "1000 = 1 (957) + 43\n",
            "957 = 22 (43) + 11\n",
            "43 = 3 (11) + 10\n",
            "11 = 1 (10) + 1\n",
            "10 = 10 (1) + 0\n",
            "958 = 0 (1000) + 958\n",
            "1000 = 1 (958) + 42\n",
            "958 = 22 (42) + 34\n",
            "42 = 1 (34) + 8\n",
            "34 = 4 (8) + 2\n",
            "8 = 4 (2) + 0\n",
            "959 = 0 (1000) + 959\n",
            "1000 = 1 (959) + 41\n",
            "959 = 23 (41) + 16\n",
            "41 = 2 (16) + 9\n",
            "16 = 1 (9) + 7\n",
            "9 = 1 (7) + 2\n",
            "7 = 3 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "960 = 0 (1000) + 960\n",
            "1000 = 1 (960) + 40\n",
            "960 = 24 (40) + 0\n",
            "961 = 0 (1000) + 961\n",
            "1000 = 1 (961) + 39\n",
            "961 = 24 (39) + 25\n",
            "39 = 1 (25) + 14\n",
            "25 = 1 (14) + 11\n",
            "14 = 1 (11) + 3\n",
            "11 = 3 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "962 = 0 (1000) + 962\n",
            "1000 = 1 (962) + 38\n",
            "962 = 25 (38) + 12\n",
            "38 = 3 (12) + 2\n",
            "12 = 6 (2) + 0\n",
            "963 = 0 (1000) + 963\n",
            "1000 = 1 (963) + 37\n",
            "963 = 26 (37) + 1\n",
            "37 = 37 (1) + 0\n",
            "964 = 0 (1000) + 964\n",
            "1000 = 1 (964) + 36\n",
            "964 = 26 (36) + 28\n",
            "36 = 1 (28) + 8\n",
            "28 = 3 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "965 = 0 (1000) + 965\n",
            "1000 = 1 (965) + 35\n",
            "965 = 27 (35) + 20\n",
            "35 = 1 (20) + 15\n",
            "20 = 1 (15) + 5\n",
            "15 = 3 (5) + 0\n",
            "966 = 0 (1000) + 966\n",
            "1000 = 1 (966) + 34\n",
            "966 = 28 (34) + 14\n",
            "34 = 2 (14) + 6\n",
            "14 = 2 (6) + 2\n",
            "6 = 3 (2) + 0\n",
            "967 = 0 (1000) + 967\n",
            "1000 = 1 (967) + 33\n",
            "967 = 29 (33) + 10\n",
            "33 = 3 (10) + 3\n",
            "10 = 3 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "968 = 0 (1000) + 968\n",
            "1000 = 1 (968) + 32\n",
            "968 = 30 (32) + 8\n",
            "32 = 4 (8) + 0\n",
            "969 = 0 (1000) + 969\n",
            "1000 = 1 (969) + 31\n",
            "969 = 31 (31) + 8\n",
            "31 = 3 (8) + 7\n",
            "8 = 1 (7) + 1\n",
            "7 = 7 (1) + 0\n",
            "970 = 0 (1000) + 970\n",
            "1000 = 1 (970) + 30\n",
            "970 = 32 (30) + 10\n",
            "30 = 3 (10) + 0\n",
            "971 = 0 (1000) + 971\n",
            "1000 = 1 (971) + 29\n",
            "971 = 33 (29) + 14\n",
            "29 = 2 (14) + 1\n",
            "14 = 14 (1) + 0\n",
            "972 = 0 (1000) + 972\n",
            "1000 = 1 (972) + 28\n",
            "972 = 34 (28) + 20\n",
            "28 = 1 (20) + 8\n",
            "20 = 2 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "973 = 0 (1000) + 973\n",
            "1000 = 1 (973) + 27\n",
            "973 = 36 (27) + 1\n",
            "27 = 27 (1) + 0\n",
            "974 = 0 (1000) + 974\n",
            "1000 = 1 (974) + 26\n",
            "974 = 37 (26) + 12\n",
            "26 = 2 (12) + 2\n",
            "12 = 6 (2) + 0\n",
            "975 = 0 (1000) + 975\n",
            "1000 = 1 (975) + 25\n",
            "975 = 39 (25) + 0\n",
            "976 = 0 (1000) + 976\n",
            "1000 = 1 (976) + 24\n",
            "976 = 40 (24) + 16\n",
            "24 = 1 (16) + 8\n",
            "16 = 2 (8) + 0\n",
            "977 = 0 (1000) + 977\n",
            "1000 = 1 (977) + 23\n",
            "977 = 42 (23) + 11\n",
            "23 = 2 (11) + 1\n",
            "11 = 11 (1) + 0\n",
            "978 = 0 (1000) + 978\n",
            "1000 = 1 (978) + 22\n",
            "978 = 44 (22) + 10\n",
            "22 = 2 (10) + 2\n",
            "10 = 5 (2) + 0\n",
            "979 = 0 (1000) + 979\n",
            "1000 = 1 (979) + 21\n",
            "979 = 46 (21) + 13\n",
            "21 = 1 (13) + 8\n",
            "13 = 1 (8) + 5\n",
            "8 = 1 (5) + 3\n",
            "5 = 1 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "980 = 0 (1000) + 980\n",
            "1000 = 1 (980) + 20\n",
            "980 = 49 (20) + 0\n",
            "981 = 0 (1000) + 981\n",
            "1000 = 1 (981) + 19\n",
            "981 = 51 (19) + 12\n",
            "19 = 1 (12) + 7\n",
            "12 = 1 (7) + 5\n",
            "7 = 1 (5) + 2\n",
            "5 = 2 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "982 = 0 (1000) + 982\n",
            "1000 = 1 (982) + 18\n",
            "982 = 54 (18) + 10\n",
            "18 = 1 (10) + 8\n",
            "10 = 1 (8) + 2\n",
            "8 = 4 (2) + 0\n",
            "983 = 0 (1000) + 983\n",
            "1000 = 1 (983) + 17\n",
            "983 = 57 (17) + 14\n",
            "17 = 1 (14) + 3\n",
            "14 = 4 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "984 = 0 (1000) + 984\n",
            "1000 = 1 (984) + 16\n",
            "984 = 61 (16) + 8\n",
            "16 = 2 (8) + 0\n",
            "985 = 0 (1000) + 985\n",
            "1000 = 1 (985) + 15\n",
            "985 = 65 (15) + 10\n",
            "15 = 1 (10) + 5\n",
            "10 = 2 (5) + 0\n",
            "986 = 0 (1000) + 986\n",
            "1000 = 1 (986) + 14\n",
            "986 = 70 (14) + 6\n",
            "14 = 2 (6) + 2\n",
            "6 = 3 (2) + 0\n",
            "987 = 0 (1000) + 987\n",
            "1000 = 1 (987) + 13\n",
            "987 = 75 (13) + 12\n",
            "13 = 1 (12) + 1\n",
            "12 = 12 (1) + 0\n",
            "988 = 0 (1000) + 988\n",
            "1000 = 1 (988) + 12\n",
            "988 = 82 (12) + 4\n",
            "12 = 3 (4) + 0\n",
            "989 = 0 (1000) + 989\n",
            "1000 = 1 (989) + 11\n",
            "989 = 89 (11) + 10\n",
            "11 = 1 (10) + 1\n",
            "10 = 10 (1) + 0\n",
            "990 = 0 (1000) + 990\n",
            "1000 = 1 (990) + 10\n",
            "990 = 99 (10) + 0\n",
            "991 = 0 (1000) + 991\n",
            "1000 = 1 (991) + 9\n",
            "991 = 110 (9) + 1\n",
            "9 = 9 (1) + 0\n",
            "992 = 0 (1000) + 992\n",
            "1000 = 1 (992) + 8\n",
            "992 = 124 (8) + 0\n",
            "993 = 0 (1000) + 993\n",
            "1000 = 1 (993) + 7\n",
            "993 = 141 (7) + 6\n",
            "7 = 1 (6) + 1\n",
            "6 = 6 (1) + 0\n",
            "994 = 0 (1000) + 994\n",
            "1000 = 1 (994) + 6\n",
            "994 = 165 (6) + 4\n",
            "6 = 1 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "995 = 0 (1000) + 995\n",
            "1000 = 1 (995) + 5\n",
            "995 = 199 (5) + 0\n",
            "996 = 0 (1000) + 996\n",
            "1000 = 1 (996) + 4\n",
            "996 = 249 (4) + 0\n",
            "997 = 0 (1000) + 997\n",
            "1000 = 1 (997) + 3\n",
            "997 = 332 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "998 = 0 (1000) + 998\n",
            "1000 = 1 (998) + 2\n",
            "998 = 499 (2) + 0\n",
            "999 = 0 (1000) + 999\n",
            "1000 = 1 (999) + 1\n",
            "999 = 999 (1) + 0\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "f_5NslQU8TC6",
        "outputId": "cf3da4a0-0688-416b-fd12-a8d8f27b7a22"
      },
      "source": [
        "for i in range(100):\n",
        "  Euclidean_algorithm(100,i)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "100 = 100 (1) + 0\n",
            "100 = 50 (2) + 0\n",
            "100 = 33 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "100 = 25 (4) + 0\n",
            "100 = 20 (5) + 0\n",
            "100 = 16 (6) + 4\n",
            "6 = 1 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "100 = 14 (7) + 2\n",
            "7 = 3 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "100 = 12 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "100 = 11 (9) + 1\n",
            "9 = 9 (1) + 0\n",
            "100 = 10 (10) + 0\n",
            "100 = 9 (11) + 1\n",
            "11 = 11 (1) + 0\n",
            "100 = 8 (12) + 4\n",
            "12 = 3 (4) + 0\n",
            "100 = 7 (13) + 9\n",
            "13 = 1 (9) + 4\n",
            "9 = 2 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "100 = 7 (14) + 2\n",
            "14 = 7 (2) + 0\n",
            "100 = 6 (15) + 10\n",
            "15 = 1 (10) + 5\n",
            "10 = 2 (5) + 0\n",
            "100 = 6 (16) + 4\n",
            "16 = 4 (4) + 0\n",
            "100 = 5 (17) + 15\n",
            "17 = 1 (15) + 2\n",
            "15 = 7 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "100 = 5 (18) + 10\n",
            "18 = 1 (10) + 8\n",
            "10 = 1 (8) + 2\n",
            "8 = 4 (2) + 0\n",
            "100 = 5 (19) + 5\n",
            "19 = 3 (5) + 4\n",
            "5 = 1 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "100 = 5 (20) + 0\n",
            "100 = 4 (21) + 16\n",
            "21 = 1 (16) + 5\n",
            "16 = 3 (5) + 1\n",
            "5 = 5 (1) + 0\n",
            "100 = 4 (22) + 12\n",
            "22 = 1 (12) + 10\n",
            "12 = 1 (10) + 2\n",
            "10 = 5 (2) + 0\n",
            "100 = 4 (23) + 8\n",
            "23 = 2 (8) + 7\n",
            "8 = 1 (7) + 1\n",
            "7 = 7 (1) + 0\n",
            "100 = 4 (24) + 4\n",
            "24 = 6 (4) + 0\n",
            "100 = 4 (25) + 0\n",
            "100 = 3 (26) + 22\n",
            "26 = 1 (22) + 4\n",
            "22 = 5 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "100 = 3 (27) + 19\n",
            "27 = 1 (19) + 8\n",
            "19 = 2 (8) + 3\n",
            "8 = 2 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "100 = 3 (28) + 16\n",
            "28 = 1 (16) + 12\n",
            "16 = 1 (12) + 4\n",
            "12 = 3 (4) + 0\n",
            "100 = 3 (29) + 13\n",
            "29 = 2 (13) + 3\n",
            "13 = 4 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "100 = 3 (30) + 10\n",
            "30 = 3 (10) + 0\n",
            "100 = 3 (31) + 7\n",
            "31 = 4 (7) + 3\n",
            "7 = 2 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "100 = 3 (32) + 4\n",
            "32 = 8 (4) + 0\n",
            "100 = 3 (33) + 1\n",
            "33 = 33 (1) + 0\n",
            "100 = 2 (34) + 32\n",
            "34 = 1 (32) + 2\n",
            "32 = 16 (2) + 0\n",
            "100 = 2 (35) + 30\n",
            "35 = 1 (30) + 5\n",
            "30 = 6 (5) + 0\n",
            "100 = 2 (36) + 28\n",
            "36 = 1 (28) + 8\n",
            "28 = 3 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "100 = 2 (37) + 26\n",
            "37 = 1 (26) + 11\n",
            "26 = 2 (11) + 4\n",
            "11 = 2 (4) + 3\n",
            "4 = 1 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "100 = 2 (38) + 24\n",
            "38 = 1 (24) + 14\n",
            "24 = 1 (14) + 10\n",
            "14 = 1 (10) + 4\n",
            "10 = 2 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "100 = 2 (39) + 22\n",
            "39 = 1 (22) + 17\n",
            "22 = 1 (17) + 5\n",
            "17 = 3 (5) + 2\n",
            "5 = 2 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "100 = 2 (40) + 20\n",
            "40 = 2 (20) + 0\n",
            "100 = 2 (41) + 18\n",
            "41 = 2 (18) + 5\n",
            "18 = 3 (5) + 3\n",
            "5 = 1 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "100 = 2 (42) + 16\n",
            "42 = 2 (16) + 10\n",
            "16 = 1 (10) + 6\n",
            "10 = 1 (6) + 4\n",
            "6 = 1 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "100 = 2 (43) + 14\n",
            "43 = 3 (14) + 1\n",
            "14 = 14 (1) + 0\n",
            "100 = 2 (44) + 12\n",
            "44 = 3 (12) + 8\n",
            "12 = 1 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "100 = 2 (45) + 10\n",
            "45 = 4 (10) + 5\n",
            "10 = 2 (5) + 0\n",
            "100 = 2 (46) + 8\n",
            "46 = 5 (8) + 6\n",
            "8 = 1 (6) + 2\n",
            "6 = 3 (2) + 0\n",
            "100 = 2 (47) + 6\n",
            "47 = 7 (6) + 5\n",
            "6 = 1 (5) + 1\n",
            "5 = 5 (1) + 0\n",
            "100 = 2 (48) + 4\n",
            "48 = 12 (4) + 0\n",
            "100 = 2 (49) + 2\n",
            "49 = 24 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "100 = 2 (50) + 0\n",
            "100 = 1 (51) + 49\n",
            "51 = 1 (49) + 2\n",
            "49 = 24 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "100 = 1 (52) + 48\n",
            "52 = 1 (48) + 4\n",
            "48 = 12 (4) + 0\n",
            "100 = 1 (53) + 47\n",
            "53 = 1 (47) + 6\n",
            "47 = 7 (6) + 5\n",
            "6 = 1 (5) + 1\n",
            "5 = 5 (1) + 0\n",
            "100 = 1 (54) + 46\n",
            "54 = 1 (46) + 8\n",
            "46 = 5 (8) + 6\n",
            "8 = 1 (6) + 2\n",
            "6 = 3 (2) + 0\n",
            "100 = 1 (55) + 45\n",
            "55 = 1 (45) + 10\n",
            "45 = 4 (10) + 5\n",
            "10 = 2 (5) + 0\n",
            "100 = 1 (56) + 44\n",
            "56 = 1 (44) + 12\n",
            "44 = 3 (12) + 8\n",
            "12 = 1 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "100 = 1 (57) + 43\n",
            "57 = 1 (43) + 14\n",
            "43 = 3 (14) + 1\n",
            "14 = 14 (1) + 0\n",
            "100 = 1 (58) + 42\n",
            "58 = 1 (42) + 16\n",
            "42 = 2 (16) + 10\n",
            "16 = 1 (10) + 6\n",
            "10 = 1 (6) + 4\n",
            "6 = 1 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "100 = 1 (59) + 41\n",
            "59 = 1 (41) + 18\n",
            "41 = 2 (18) + 5\n",
            "18 = 3 (5) + 3\n",
            "5 = 1 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "100 = 1 (60) + 40\n",
            "60 = 1 (40) + 20\n",
            "40 = 2 (20) + 0\n",
            "100 = 1 (61) + 39\n",
            "61 = 1 (39) + 22\n",
            "39 = 1 (22) + 17\n",
            "22 = 1 (17) + 5\n",
            "17 = 3 (5) + 2\n",
            "5 = 2 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "100 = 1 (62) + 38\n",
            "62 = 1 (38) + 24\n",
            "38 = 1 (24) + 14\n",
            "24 = 1 (14) + 10\n",
            "14 = 1 (10) + 4\n",
            "10 = 2 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "100 = 1 (63) + 37\n",
            "63 = 1 (37) + 26\n",
            "37 = 1 (26) + 11\n",
            "26 = 2 (11) + 4\n",
            "11 = 2 (4) + 3\n",
            "4 = 1 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "100 = 1 (64) + 36\n",
            "64 = 1 (36) + 28\n",
            "36 = 1 (28) + 8\n",
            "28 = 3 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "100 = 1 (65) + 35\n",
            "65 = 1 (35) + 30\n",
            "35 = 1 (30) + 5\n",
            "30 = 6 (5) + 0\n",
            "100 = 1 (66) + 34\n",
            "66 = 1 (34) + 32\n",
            "34 = 1 (32) + 2\n",
            "32 = 16 (2) + 0\n",
            "100 = 1 (67) + 33\n",
            "67 = 2 (33) + 1\n",
            "33 = 33 (1) + 0\n",
            "100 = 1 (68) + 32\n",
            "68 = 2 (32) + 4\n",
            "32 = 8 (4) + 0\n",
            "100 = 1 (69) + 31\n",
            "69 = 2 (31) + 7\n",
            "31 = 4 (7) + 3\n",
            "7 = 2 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "100 = 1 (70) + 30\n",
            "70 = 2 (30) + 10\n",
            "30 = 3 (10) + 0\n",
            "100 = 1 (71) + 29\n",
            "71 = 2 (29) + 13\n",
            "29 = 2 (13) + 3\n",
            "13 = 4 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "100 = 1 (72) + 28\n",
            "72 = 2 (28) + 16\n",
            "28 = 1 (16) + 12\n",
            "16 = 1 (12) + 4\n",
            "12 = 3 (4) + 0\n",
            "100 = 1 (73) + 27\n",
            "73 = 2 (27) + 19\n",
            "27 = 1 (19) + 8\n",
            "19 = 2 (8) + 3\n",
            "8 = 2 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "100 = 1 (74) + 26\n",
            "74 = 2 (26) + 22\n",
            "26 = 1 (22) + 4\n",
            "22 = 5 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "100 = 1 (75) + 25\n",
            "75 = 3 (25) + 0\n",
            "100 = 1 (76) + 24\n",
            "76 = 3 (24) + 4\n",
            "24 = 6 (4) + 0\n",
            "100 = 1 (77) + 23\n",
            "77 = 3 (23) + 8\n",
            "23 = 2 (8) + 7\n",
            "8 = 1 (7) + 1\n",
            "7 = 7 (1) + 0\n",
            "100 = 1 (78) + 22\n",
            "78 = 3 (22) + 12\n",
            "22 = 1 (12) + 10\n",
            "12 = 1 (10) + 2\n",
            "10 = 5 (2) + 0\n",
            "100 = 1 (79) + 21\n",
            "79 = 3 (21) + 16\n",
            "21 = 1 (16) + 5\n",
            "16 = 3 (5) + 1\n",
            "5 = 5 (1) + 0\n",
            "100 = 1 (80) + 20\n",
            "80 = 4 (20) + 0\n",
            "100 = 1 (81) + 19\n",
            "81 = 4 (19) + 5\n",
            "19 = 3 (5) + 4\n",
            "5 = 1 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "100 = 1 (82) + 18\n",
            "82 = 4 (18) + 10\n",
            "18 = 1 (10) + 8\n",
            "10 = 1 (8) + 2\n",
            "8 = 4 (2) + 0\n",
            "100 = 1 (83) + 17\n",
            "83 = 4 (17) + 15\n",
            "17 = 1 (15) + 2\n",
            "15 = 7 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "100 = 1 (84) + 16\n",
            "84 = 5 (16) + 4\n",
            "16 = 4 (4) + 0\n",
            "100 = 1 (85) + 15\n",
            "85 = 5 (15) + 10\n",
            "15 = 1 (10) + 5\n",
            "10 = 2 (5) + 0\n",
            "100 = 1 (86) + 14\n",
            "86 = 6 (14) + 2\n",
            "14 = 7 (2) + 0\n",
            "100 = 1 (87) + 13\n",
            "87 = 6 (13) + 9\n",
            "13 = 1 (9) + 4\n",
            "9 = 2 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "100 = 1 (88) + 12\n",
            "88 = 7 (12) + 4\n",
            "12 = 3 (4) + 0\n",
            "100 = 1 (89) + 11\n",
            "89 = 8 (11) + 1\n",
            "11 = 11 (1) + 0\n",
            "100 = 1 (90) + 10\n",
            "90 = 9 (10) + 0\n",
            "100 = 1 (91) + 9\n",
            "91 = 10 (9) + 1\n",
            "9 = 9 (1) + 0\n",
            "100 = 1 (92) + 8\n",
            "92 = 11 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "100 = 1 (93) + 7\n",
            "93 = 13 (7) + 2\n",
            "7 = 3 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "100 = 1 (94) + 6\n",
            "94 = 15 (6) + 4\n",
            "6 = 1 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "100 = 1 (95) + 5\n",
            "95 = 19 (5) + 0\n",
            "100 = 1 (96) + 4\n",
            "96 = 24 (4) + 0\n",
            "100 = 1 (97) + 3\n",
            "97 = 32 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "100 = 1 (98) + 2\n",
            "98 = 49 (2) + 0\n",
            "100 = 1 (99) + 1\n",
            "99 = 99 (1) + 0\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "67EhxqUQ8fVy",
        "outputId": "8b8fe3ab-ad46-4a9b-820d-881e3b449baf"
      },
      "source": [
        "for i in range(1000):\n",
        "  Euclidean_algorithm(1000,i)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "\u001b[1;30;43mStreaming output truncated to the last 5000 lines.\u001b[0m\n",
            "88 = 3 (26) + 10\n",
            "26 = 2 (10) + 6\n",
            "10 = 1 (6) + 4\n",
            "6 = 1 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 8 (115) + 80\n",
            "115 = 1 (80) + 35\n",
            "80 = 2 (35) + 10\n",
            "35 = 3 (10) + 5\n",
            "10 = 2 (5) + 0\n",
            "1000 = 8 (116) + 72\n",
            "116 = 1 (72) + 44\n",
            "72 = 1 (44) + 28\n",
            "44 = 1 (28) + 16\n",
            "28 = 1 (16) + 12\n",
            "16 = 1 (12) + 4\n",
            "12 = 3 (4) + 0\n",
            "1000 = 8 (117) + 64\n",
            "117 = 1 (64) + 53\n",
            "64 = 1 (53) + 11\n",
            "53 = 4 (11) + 9\n",
            "11 = 1 (9) + 2\n",
            "9 = 4 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 8 (118) + 56\n",
            "118 = 2 (56) + 6\n",
            "56 = 9 (6) + 2\n",
            "6 = 3 (2) + 0\n",
            "1000 = 8 (119) + 48\n",
            "119 = 2 (48) + 23\n",
            "48 = 2 (23) + 2\n",
            "23 = 11 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 8 (120) + 40\n",
            "120 = 3 (40) + 0\n",
            "1000 = 8 (121) + 32\n",
            "121 = 3 (32) + 25\n",
            "32 = 1 (25) + 7\n",
            "25 = 3 (7) + 4\n",
            "7 = 1 (4) + 3\n",
            "4 = 1 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "1000 = 8 (122) + 24\n",
            "122 = 5 (24) + 2\n",
            "24 = 12 (2) + 0\n",
            "1000 = 8 (123) + 16\n",
            "123 = 7 (16) + 11\n",
            "16 = 1 (11) + 5\n",
            "11 = 2 (5) + 1\n",
            "5 = 5 (1) + 0\n",
            "1000 = 8 (124) + 8\n",
            "124 = 15 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "1000 = 8 (125) + 0\n",
            "1000 = 7 (126) + 118\n",
            "126 = 1 (118) + 8\n",
            "118 = 14 (8) + 6\n",
            "8 = 1 (6) + 2\n",
            "6 = 3 (2) + 0\n",
            "1000 = 7 (127) + 111\n",
            "127 = 1 (111) + 16\n",
            "111 = 6 (16) + 15\n",
            "16 = 1 (15) + 1\n",
            "15 = 15 (1) + 0\n",
            "1000 = 7 (128) + 104\n",
            "128 = 1 (104) + 24\n",
            "104 = 4 (24) + 8\n",
            "24 = 3 (8) + 0\n",
            "1000 = 7 (129) + 97\n",
            "129 = 1 (97) + 32\n",
            "97 = 3 (32) + 1\n",
            "32 = 32 (1) + 0\n",
            "1000 = 7 (130) + 90\n",
            "130 = 1 (90) + 40\n",
            "90 = 2 (40) + 10\n",
            "40 = 4 (10) + 0\n",
            "1000 = 7 (131) + 83\n",
            "131 = 1 (83) + 48\n",
            "83 = 1 (48) + 35\n",
            "48 = 1 (35) + 13\n",
            "35 = 2 (13) + 9\n",
            "13 = 1 (9) + 4\n",
            "9 = 2 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "1000 = 7 (132) + 76\n",
            "132 = 1 (76) + 56\n",
            "76 = 1 (56) + 20\n",
            "56 = 2 (20) + 16\n",
            "20 = 1 (16) + 4\n",
            "16 = 4 (4) + 0\n",
            "1000 = 7 (133) + 69\n",
            "133 = 1 (69) + 64\n",
            "69 = 1 (64) + 5\n",
            "64 = 12 (5) + 4\n",
            "5 = 1 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "1000 = 7 (134) + 62\n",
            "134 = 2 (62) + 10\n",
            "62 = 6 (10) + 2\n",
            "10 = 5 (2) + 0\n",
            "1000 = 7 (135) + 55\n",
            "135 = 2 (55) + 25\n",
            "55 = 2 (25) + 5\n",
            "25 = 5 (5) + 0\n",
            "1000 = 7 (136) + 48\n",
            "136 = 2 (48) + 40\n",
            "48 = 1 (40) + 8\n",
            "40 = 5 (8) + 0\n",
            "1000 = 7 (137) + 41\n",
            "137 = 3 (41) + 14\n",
            "41 = 2 (14) + 13\n",
            "14 = 1 (13) + 1\n",
            "13 = 13 (1) + 0\n",
            "1000 = 7 (138) + 34\n",
            "138 = 4 (34) + 2\n",
            "34 = 17 (2) + 0\n",
            "1000 = 7 (139) + 27\n",
            "139 = 5 (27) + 4\n",
            "27 = 6 (4) + 3\n",
            "4 = 1 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "1000 = 7 (140) + 20\n",
            "140 = 7 (20) + 0\n",
            "1000 = 7 (141) + 13\n",
            "141 = 10 (13) + 11\n",
            "13 = 1 (11) + 2\n",
            "11 = 5 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 7 (142) + 6\n",
            "142 = 23 (6) + 4\n",
            "6 = 1 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 6 (143) + 142\n",
            "143 = 1 (142) + 1\n",
            "142 = 142 (1) + 0\n",
            "1000 = 6 (144) + 136\n",
            "144 = 1 (136) + 8\n",
            "136 = 17 (8) + 0\n",
            "1000 = 6 (145) + 130\n",
            "145 = 1 (130) + 15\n",
            "130 = 8 (15) + 10\n",
            "15 = 1 (10) + 5\n",
            "10 = 2 (5) + 0\n",
            "1000 = 6 (146) + 124\n",
            "146 = 1 (124) + 22\n",
            "124 = 5 (22) + 14\n",
            "22 = 1 (14) + 8\n",
            "14 = 1 (8) + 6\n",
            "8 = 1 (6) + 2\n",
            "6 = 3 (2) + 0\n",
            "1000 = 6 (147) + 118\n",
            "147 = 1 (118) + 29\n",
            "118 = 4 (29) + 2\n",
            "29 = 14 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 6 (148) + 112\n",
            "148 = 1 (112) + 36\n",
            "112 = 3 (36) + 4\n",
            "36 = 9 (4) + 0\n",
            "1000 = 6 (149) + 106\n",
            "149 = 1 (106) + 43\n",
            "106 = 2 (43) + 20\n",
            "43 = 2 (20) + 3\n",
            "20 = 6 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 6 (150) + 100\n",
            "150 = 1 (100) + 50\n",
            "100 = 2 (50) + 0\n",
            "1000 = 6 (151) + 94\n",
            "151 = 1 (94) + 57\n",
            "94 = 1 (57) + 37\n",
            "57 = 1 (37) + 20\n",
            "37 = 1 (20) + 17\n",
            "20 = 1 (17) + 3\n",
            "17 = 5 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 6 (152) + 88\n",
            "152 = 1 (88) + 64\n",
            "88 = 1 (64) + 24\n",
            "64 = 2 (24) + 16\n",
            "24 = 1 (16) + 8\n",
            "16 = 2 (8) + 0\n",
            "1000 = 6 (153) + 82\n",
            "153 = 1 (82) + 71\n",
            "82 = 1 (71) + 11\n",
            "71 = 6 (11) + 5\n",
            "11 = 2 (5) + 1\n",
            "5 = 5 (1) + 0\n",
            "1000 = 6 (154) + 76\n",
            "154 = 2 (76) + 2\n",
            "76 = 38 (2) + 0\n",
            "1000 = 6 (155) + 70\n",
            "155 = 2 (70) + 15\n",
            "70 = 4 (15) + 10\n",
            "15 = 1 (10) + 5\n",
            "10 = 2 (5) + 0\n",
            "1000 = 6 (156) + 64\n",
            "156 = 2 (64) + 28\n",
            "64 = 2 (28) + 8\n",
            "28 = 3 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "1000 = 6 (157) + 58\n",
            "157 = 2 (58) + 41\n",
            "58 = 1 (41) + 17\n",
            "41 = 2 (17) + 7\n",
            "17 = 2 (7) + 3\n",
            "7 = 2 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "1000 = 6 (158) + 52\n",
            "158 = 3 (52) + 2\n",
            "52 = 26 (2) + 0\n",
            "1000 = 6 (159) + 46\n",
            "159 = 3 (46) + 21\n",
            "46 = 2 (21) + 4\n",
            "21 = 5 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "1000 = 6 (160) + 40\n",
            "160 = 4 (40) + 0\n",
            "1000 = 6 (161) + 34\n",
            "161 = 4 (34) + 25\n",
            "34 = 1 (25) + 9\n",
            "25 = 2 (9) + 7\n",
            "9 = 1 (7) + 2\n",
            "7 = 3 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 6 (162) + 28\n",
            "162 = 5 (28) + 22\n",
            "28 = 1 (22) + 6\n",
            "22 = 3 (6) + 4\n",
            "6 = 1 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 6 (163) + 22\n",
            "163 = 7 (22) + 9\n",
            "22 = 2 (9) + 4\n",
            "9 = 2 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "1000 = 6 (164) + 16\n",
            "164 = 10 (16) + 4\n",
            "16 = 4 (4) + 0\n",
            "1000 = 6 (165) + 10\n",
            "165 = 16 (10) + 5\n",
            "10 = 2 (5) + 0\n",
            "1000 = 6 (166) + 4\n",
            "166 = 41 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 5 (167) + 165\n",
            "167 = 1 (165) + 2\n",
            "165 = 82 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 5 (168) + 160\n",
            "168 = 1 (160) + 8\n",
            "160 = 20 (8) + 0\n",
            "1000 = 5 (169) + 155\n",
            "169 = 1 (155) + 14\n",
            "155 = 11 (14) + 1\n",
            "14 = 14 (1) + 0\n",
            "1000 = 5 (170) + 150\n",
            "170 = 1 (150) + 20\n",
            "150 = 7 (20) + 10\n",
            "20 = 2 (10) + 0\n",
            "1000 = 5 (171) + 145\n",
            "171 = 1 (145) + 26\n",
            "145 = 5 (26) + 15\n",
            "26 = 1 (15) + 11\n",
            "15 = 1 (11) + 4\n",
            "11 = 2 (4) + 3\n",
            "4 = 1 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "1000 = 5 (172) + 140\n",
            "172 = 1 (140) + 32\n",
            "140 = 4 (32) + 12\n",
            "32 = 2 (12) + 8\n",
            "12 = 1 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "1000 = 5 (173) + 135\n",
            "173 = 1 (135) + 38\n",
            "135 = 3 (38) + 21\n",
            "38 = 1 (21) + 17\n",
            "21 = 1 (17) + 4\n",
            "17 = 4 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "1000 = 5 (174) + 130\n",
            "174 = 1 (130) + 44\n",
            "130 = 2 (44) + 42\n",
            "44 = 1 (42) + 2\n",
            "42 = 21 (2) + 0\n",
            "1000 = 5 (175) + 125\n",
            "175 = 1 (125) + 50\n",
            "125 = 2 (50) + 25\n",
            "50 = 2 (25) + 0\n",
            "1000 = 5 (176) + 120\n",
            "176 = 1 (120) + 56\n",
            "120 = 2 (56) + 8\n",
            "56 = 7 (8) + 0\n",
            "1000 = 5 (177) + 115\n",
            "177 = 1 (115) + 62\n",
            "115 = 1 (62) + 53\n",
            "62 = 1 (53) + 9\n",
            "53 = 5 (9) + 8\n",
            "9 = 1 (8) + 1\n",
            "8 = 8 (1) + 0\n",
            "1000 = 5 (178) + 110\n",
            "178 = 1 (110) + 68\n",
            "110 = 1 (68) + 42\n",
            "68 = 1 (42) + 26\n",
            "42 = 1 (26) + 16\n",
            "26 = 1 (16) + 10\n",
            "16 = 1 (10) + 6\n",
            "10 = 1 (6) + 4\n",
            "6 = 1 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 5 (179) + 105\n",
            "179 = 1 (105) + 74\n",
            "105 = 1 (74) + 31\n",
            "74 = 2 (31) + 12\n",
            "31 = 2 (12) + 7\n",
            "12 = 1 (7) + 5\n",
            "7 = 1 (5) + 2\n",
            "5 = 2 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 5 (180) + 100\n",
            "180 = 1 (100) + 80\n",
            "100 = 1 (80) + 20\n",
            "80 = 4 (20) + 0\n",
            "1000 = 5 (181) + 95\n",
            "181 = 1 (95) + 86\n",
            "95 = 1 (86) + 9\n",
            "86 = 9 (9) + 5\n",
            "9 = 1 (5) + 4\n",
            "5 = 1 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "1000 = 5 (182) + 90\n",
            "182 = 2 (90) + 2\n",
            "90 = 45 (2) + 0\n",
            "1000 = 5 (183) + 85\n",
            "183 = 2 (85) + 13\n",
            "85 = 6 (13) + 7\n",
            "13 = 1 (7) + 6\n",
            "7 = 1 (6) + 1\n",
            "6 = 6 (1) + 0\n",
            "1000 = 5 (184) + 80\n",
            "184 = 2 (80) + 24\n",
            "80 = 3 (24) + 8\n",
            "24 = 3 (8) + 0\n",
            "1000 = 5 (185) + 75\n",
            "185 = 2 (75) + 35\n",
            "75 = 2 (35) + 5\n",
            "35 = 7 (5) + 0\n",
            "1000 = 5 (186) + 70\n",
            "186 = 2 (70) + 46\n",
            "70 = 1 (46) + 24\n",
            "46 = 1 (24) + 22\n",
            "24 = 1 (22) + 2\n",
            "22 = 11 (2) + 0\n",
            "1000 = 5 (187) + 65\n",
            "187 = 2 (65) + 57\n",
            "65 = 1 (57) + 8\n",
            "57 = 7 (8) + 1\n",
            "8 = 8 (1) + 0\n",
            "1000 = 5 (188) + 60\n",
            "188 = 3 (60) + 8\n",
            "60 = 7 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "1000 = 5 (189) + 55\n",
            "189 = 3 (55) + 24\n",
            "55 = 2 (24) + 7\n",
            "24 = 3 (7) + 3\n",
            "7 = 2 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "1000 = 5 (190) + 50\n",
            "190 = 3 (50) + 40\n",
            "50 = 1 (40) + 10\n",
            "40 = 4 (10) + 0\n",
            "1000 = 5 (191) + 45\n",
            "191 = 4 (45) + 11\n",
            "45 = 4 (11) + 1\n",
            "11 = 11 (1) + 0\n",
            "1000 = 5 (192) + 40\n",
            "192 = 4 (40) + 32\n",
            "40 = 1 (32) + 8\n",
            "32 = 4 (8) + 0\n",
            "1000 = 5 (193) + 35\n",
            "193 = 5 (35) + 18\n",
            "35 = 1 (18) + 17\n",
            "18 = 1 (17) + 1\n",
            "17 = 17 (1) + 0\n",
            "1000 = 5 (194) + 30\n",
            "194 = 6 (30) + 14\n",
            "30 = 2 (14) + 2\n",
            "14 = 7 (2) + 0\n",
            "1000 = 5 (195) + 25\n",
            "195 = 7 (25) + 20\n",
            "25 = 1 (20) + 5\n",
            "20 = 4 (5) + 0\n",
            "1000 = 5 (196) + 20\n",
            "196 = 9 (20) + 16\n",
            "20 = 1 (16) + 4\n",
            "16 = 4 (4) + 0\n",
            "1000 = 5 (197) + 15\n",
            "197 = 13 (15) + 2\n",
            "15 = 7 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 5 (198) + 10\n",
            "198 = 19 (10) + 8\n",
            "10 = 1 (8) + 2\n",
            "8 = 4 (2) + 0\n",
            "1000 = 5 (199) + 5\n",
            "199 = 39 (5) + 4\n",
            "5 = 1 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "1000 = 5 (200) + 0\n",
            "1000 = 4 (201) + 196\n",
            "201 = 1 (196) + 5\n",
            "196 = 39 (5) + 1\n",
            "5 = 5 (1) + 0\n",
            "1000 = 4 (202) + 192\n",
            "202 = 1 (192) + 10\n",
            "192 = 19 (10) + 2\n",
            "10 = 5 (2) + 0\n",
            "1000 = 4 (203) + 188\n",
            "203 = 1 (188) + 15\n",
            "188 = 12 (15) + 8\n",
            "15 = 1 (8) + 7\n",
            "8 = 1 (7) + 1\n",
            "7 = 7 (1) + 0\n",
            "1000 = 4 (204) + 184\n",
            "204 = 1 (184) + 20\n",
            "184 = 9 (20) + 4\n",
            "20 = 5 (4) + 0\n",
            "1000 = 4 (205) + 180\n",
            "205 = 1 (180) + 25\n",
            "180 = 7 (25) + 5\n",
            "25 = 5 (5) + 0\n",
            "1000 = 4 (206) + 176\n",
            "206 = 1 (176) + 30\n",
            "176 = 5 (30) + 26\n",
            "30 = 1 (26) + 4\n",
            "26 = 6 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 4 (207) + 172\n",
            "207 = 1 (172) + 35\n",
            "172 = 4 (35) + 32\n",
            "35 = 1 (32) + 3\n",
            "32 = 10 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 4 (208) + 168\n",
            "208 = 1 (168) + 40\n",
            "168 = 4 (40) + 8\n",
            "40 = 5 (8) + 0\n",
            "1000 = 4 (209) + 164\n",
            "209 = 1 (164) + 45\n",
            "164 = 3 (45) + 29\n",
            "45 = 1 (29) + 16\n",
            "29 = 1 (16) + 13\n",
            "16 = 1 (13) + 3\n",
            "13 = 4 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "1000 = 4 (210) + 160\n",
            "210 = 1 (160) + 50\n",
            "160 = 3 (50) + 10\n",
            "50 = 5 (10) + 0\n",
            "1000 = 4 (211) + 156\n",
            "211 = 1 (156) + 55\n",
            "156 = 2 (55) + 46\n",
            "55 = 1 (46) + 9\n",
            "46 = 5 (9) + 1\n",
            "9 = 9 (1) + 0\n",
            "1000 = 4 (212) + 152\n",
            "212 = 1 (152) + 60\n",
            "152 = 2 (60) + 32\n",
            "60 = 1 (32) + 28\n",
            "32 = 1 (28) + 4\n",
            "28 = 7 (4) + 0\n",
            "1000 = 4 (213) + 148\n",
            "213 = 1 (148) + 65\n",
            "148 = 2 (65) + 18\n",
            "65 = 3 (18) + 11\n",
            "18 = 1 (11) + 7\n",
            "11 = 1 (7) + 4\n",
            "7 = 1 (4) + 3\n",
            "4 = 1 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "1000 = 4 (214) + 144\n",
            "214 = 1 (144) + 70\n",
            "144 = 2 (70) + 4\n",
            "70 = 17 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 4 (215) + 140\n",
            "215 = 1 (140) + 75\n",
            "140 = 1 (75) + 65\n",
            "75 = 1 (65) + 10\n",
            "65 = 6 (10) + 5\n",
            "10 = 2 (5) + 0\n",
            "1000 = 4 (216) + 136\n",
            "216 = 1 (136) + 80\n",
            "136 = 1 (80) + 56\n",
            "80 = 1 (56) + 24\n",
            "56 = 2 (24) + 8\n",
            "24 = 3 (8) + 0\n",
            "1000 = 4 (217) + 132\n",
            "217 = 1 (132) + 85\n",
            "132 = 1 (85) + 47\n",
            "85 = 1 (47) + 38\n",
            "47 = 1 (38) + 9\n",
            "38 = 4 (9) + 2\n",
            "9 = 4 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 4 (218) + 128\n",
            "218 = 1 (128) + 90\n",
            "128 = 1 (90) + 38\n",
            "90 = 2 (38) + 14\n",
            "38 = 2 (14) + 10\n",
            "14 = 1 (10) + 4\n",
            "10 = 2 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 4 (219) + 124\n",
            "219 = 1 (124) + 95\n",
            "124 = 1 (95) + 29\n",
            "95 = 3 (29) + 8\n",
            "29 = 3 (8) + 5\n",
            "8 = 1 (5) + 3\n",
            "5 = 1 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 4 (220) + 120\n",
            "220 = 1 (120) + 100\n",
            "120 = 1 (100) + 20\n",
            "100 = 5 (20) + 0\n",
            "1000 = 4 (221) + 116\n",
            "221 = 1 (116) + 105\n",
            "116 = 1 (105) + 11\n",
            "105 = 9 (11) + 6\n",
            "11 = 1 (6) + 5\n",
            "6 = 1 (5) + 1\n",
            "5 = 5 (1) + 0\n",
            "1000 = 4 (222) + 112\n",
            "222 = 1 (112) + 110\n",
            "112 = 1 (110) + 2\n",
            "110 = 55 (2) + 0\n",
            "1000 = 4 (223) + 108\n",
            "223 = 2 (108) + 7\n",
            "108 = 15 (7) + 3\n",
            "7 = 2 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "1000 = 4 (224) + 104\n",
            "224 = 2 (104) + 16\n",
            "104 = 6 (16) + 8\n",
            "16 = 2 (8) + 0\n",
            "1000 = 4 (225) + 100\n",
            "225 = 2 (100) + 25\n",
            "100 = 4 (25) + 0\n",
            "1000 = 4 (226) + 96\n",
            "226 = 2 (96) + 34\n",
            "96 = 2 (34) + 28\n",
            "34 = 1 (28) + 6\n",
            "28 = 4 (6) + 4\n",
            "6 = 1 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 4 (227) + 92\n",
            "227 = 2 (92) + 43\n",
            "92 = 2 (43) + 6\n",
            "43 = 7 (6) + 1\n",
            "6 = 6 (1) + 0\n",
            "1000 = 4 (228) + 88\n",
            "228 = 2 (88) + 52\n",
            "88 = 1 (52) + 36\n",
            "52 = 1 (36) + 16\n",
            "36 = 2 (16) + 4\n",
            "16 = 4 (4) + 0\n",
            "1000 = 4 (229) + 84\n",
            "229 = 2 (84) + 61\n",
            "84 = 1 (61) + 23\n",
            "61 = 2 (23) + 15\n",
            "23 = 1 (15) + 8\n",
            "15 = 1 (8) + 7\n",
            "8 = 1 (7) + 1\n",
            "7 = 7 (1) + 0\n",
            "1000 = 4 (230) + 80\n",
            "230 = 2 (80) + 70\n",
            "80 = 1 (70) + 10\n",
            "70 = 7 (10) + 0\n",
            "1000 = 4 (231) + 76\n",
            "231 = 3 (76) + 3\n",
            "76 = 25 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "1000 = 4 (232) + 72\n",
            "232 = 3 (72) + 16\n",
            "72 = 4 (16) + 8\n",
            "16 = 2 (8) + 0\n",
            "1000 = 4 (233) + 68\n",
            "233 = 3 (68) + 29\n",
            "68 = 2 (29) + 10\n",
            "29 = 2 (10) + 9\n",
            "10 = 1 (9) + 1\n",
            "9 = 9 (1) + 0\n",
            "1000 = 4 (234) + 64\n",
            "234 = 3 (64) + 42\n",
            "64 = 1 (42) + 22\n",
            "42 = 1 (22) + 20\n",
            "22 = 1 (20) + 2\n",
            "20 = 10 (2) + 0\n",
            "1000 = 4 (235) + 60\n",
            "235 = 3 (60) + 55\n",
            "60 = 1 (55) + 5\n",
            "55 = 11 (5) + 0\n",
            "1000 = 4 (236) + 56\n",
            "236 = 4 (56) + 12\n",
            "56 = 4 (12) + 8\n",
            "12 = 1 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "1000 = 4 (237) + 52\n",
            "237 = 4 (52) + 29\n",
            "52 = 1 (29) + 23\n",
            "29 = 1 (23) + 6\n",
            "23 = 3 (6) + 5\n",
            "6 = 1 (5) + 1\n",
            "5 = 5 (1) + 0\n",
            "1000 = 4 (238) + 48\n",
            "238 = 4 (48) + 46\n",
            "48 = 1 (46) + 2\n",
            "46 = 23 (2) + 0\n",
            "1000 = 4 (239) + 44\n",
            "239 = 5 (44) + 19\n",
            "44 = 2 (19) + 6\n",
            "19 = 3 (6) + 1\n",
            "6 = 6 (1) + 0\n",
            "1000 = 4 (240) + 40\n",
            "240 = 6 (40) + 0\n",
            "1000 = 4 (241) + 36\n",
            "241 = 6 (36) + 25\n",
            "36 = 1 (25) + 11\n",
            "25 = 2 (11) + 3\n",
            "11 = 3 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 4 (242) + 32\n",
            "242 = 7 (32) + 18\n",
            "32 = 1 (18) + 14\n",
            "18 = 1 (14) + 4\n",
            "14 = 3 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 4 (243) + 28\n",
            "243 = 8 (28) + 19\n",
            "28 = 1 (19) + 9\n",
            "19 = 2 (9) + 1\n",
            "9 = 9 (1) + 0\n",
            "1000 = 4 (244) + 24\n",
            "244 = 10 (24) + 4\n",
            "24 = 6 (4) + 0\n",
            "1000 = 4 (245) + 20\n",
            "245 = 12 (20) + 5\n",
            "20 = 4 (5) + 0\n",
            "1000 = 4 (246) + 16\n",
            "246 = 15 (16) + 6\n",
            "16 = 2 (6) + 4\n",
            "6 = 1 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 4 (247) + 12\n",
            "247 = 20 (12) + 7\n",
            "12 = 1 (7) + 5\n",
            "7 = 1 (5) + 2\n",
            "5 = 2 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 4 (248) + 8\n",
            "248 = 31 (8) + 0\n",
            "1000 = 4 (249) + 4\n",
            "249 = 62 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "1000 = 4 (250) + 0\n",
            "1000 = 3 (251) + 247\n",
            "251 = 1 (247) + 4\n",
            "247 = 61 (4) + 3\n",
            "4 = 1 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "1000 = 3 (252) + 244\n",
            "252 = 1 (244) + 8\n",
            "244 = 30 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "1000 = 3 (253) + 241\n",
            "253 = 1 (241) + 12\n",
            "241 = 20 (12) + 1\n",
            "12 = 12 (1) + 0\n",
            "1000 = 3 (254) + 238\n",
            "254 = 1 (238) + 16\n",
            "238 = 14 (16) + 14\n",
            "16 = 1 (14) + 2\n",
            "14 = 7 (2) + 0\n",
            "1000 = 3 (255) + 235\n",
            "255 = 1 (235) + 20\n",
            "235 = 11 (20) + 15\n",
            "20 = 1 (15) + 5\n",
            "15 = 3 (5) + 0\n",
            "1000 = 3 (256) + 232\n",
            "256 = 1 (232) + 24\n",
            "232 = 9 (24) + 16\n",
            "24 = 1 (16) + 8\n",
            "16 = 2 (8) + 0\n",
            "1000 = 3 (257) + 229\n",
            "257 = 1 (229) + 28\n",
            "229 = 8 (28) + 5\n",
            "28 = 5 (5) + 3\n",
            "5 = 1 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 3 (258) + 226\n",
            "258 = 1 (226) + 32\n",
            "226 = 7 (32) + 2\n",
            "32 = 16 (2) + 0\n",
            "1000 = 3 (259) + 223\n",
            "259 = 1 (223) + 36\n",
            "223 = 6 (36) + 7\n",
            "36 = 5 (7) + 1\n",
            "7 = 7 (1) + 0\n",
            "1000 = 3 (260) + 220\n",
            "260 = 1 (220) + 40\n",
            "220 = 5 (40) + 20\n",
            "40 = 2 (20) + 0\n",
            "1000 = 3 (261) + 217\n",
            "261 = 1 (217) + 44\n",
            "217 = 4 (44) + 41\n",
            "44 = 1 (41) + 3\n",
            "41 = 13 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 3 (262) + 214\n",
            "262 = 1 (214) + 48\n",
            "214 = 4 (48) + 22\n",
            "48 = 2 (22) + 4\n",
            "22 = 5 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 3 (263) + 211\n",
            "263 = 1 (211) + 52\n",
            "211 = 4 (52) + 3\n",
            "52 = 17 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "1000 = 3 (264) + 208\n",
            "264 = 1 (208) + 56\n",
            "208 = 3 (56) + 40\n",
            "56 = 1 (40) + 16\n",
            "40 = 2 (16) + 8\n",
            "16 = 2 (8) + 0\n",
            "1000 = 3 (265) + 205\n",
            "265 = 1 (205) + 60\n",
            "205 = 3 (60) + 25\n",
            "60 = 2 (25) + 10\n",
            "25 = 2 (10) + 5\n",
            "10 = 2 (5) + 0\n",
            "1000 = 3 (266) + 202\n",
            "266 = 1 (202) + 64\n",
            "202 = 3 (64) + 10\n",
            "64 = 6 (10) + 4\n",
            "10 = 2 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 3 (267) + 199\n",
            "267 = 1 (199) + 68\n",
            "199 = 2 (68) + 63\n",
            "68 = 1 (63) + 5\n",
            "63 = 12 (5) + 3\n",
            "5 = 1 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 3 (268) + 196\n",
            "268 = 1 (196) + 72\n",
            "196 = 2 (72) + 52\n",
            "72 = 1 (52) + 20\n",
            "52 = 2 (20) + 12\n",
            "20 = 1 (12) + 8\n",
            "12 = 1 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "1000 = 3 (269) + 193\n",
            "269 = 1 (193) + 76\n",
            "193 = 2 (76) + 41\n",
            "76 = 1 (41) + 35\n",
            "41 = 1 (35) + 6\n",
            "35 = 5 (6) + 5\n",
            "6 = 1 (5) + 1\n",
            "5 = 5 (1) + 0\n",
            "1000 = 3 (270) + 190\n",
            "270 = 1 (190) + 80\n",
            "190 = 2 (80) + 30\n",
            "80 = 2 (30) + 20\n",
            "30 = 1 (20) + 10\n",
            "20 = 2 (10) + 0\n",
            "1000 = 3 (271) + 187\n",
            "271 = 1 (187) + 84\n",
            "187 = 2 (84) + 19\n",
            "84 = 4 (19) + 8\n",
            "19 = 2 (8) + 3\n",
            "8 = 2 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 3 (272) + 184\n",
            "272 = 1 (184) + 88\n",
            "184 = 2 (88) + 8\n",
            "88 = 11 (8) + 0\n",
            "1000 = 3 (273) + 181\n",
            "273 = 1 (181) + 92\n",
            "181 = 1 (92) + 89\n",
            "92 = 1 (89) + 3\n",
            "89 = 29 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 3 (274) + 178\n",
            "274 = 1 (178) + 96\n",
            "178 = 1 (96) + 82\n",
            "96 = 1 (82) + 14\n",
            "82 = 5 (14) + 12\n",
            "14 = 1 (12) + 2\n",
            "12 = 6 (2) + 0\n",
            "1000 = 3 (275) + 175\n",
            "275 = 1 (175) + 100\n",
            "175 = 1 (100) + 75\n",
            "100 = 1 (75) + 25\n",
            "75 = 3 (25) + 0\n",
            "1000 = 3 (276) + 172\n",
            "276 = 1 (172) + 104\n",
            "172 = 1 (104) + 68\n",
            "104 = 1 (68) + 36\n",
            "68 = 1 (36) + 32\n",
            "36 = 1 (32) + 4\n",
            "32 = 8 (4) + 0\n",
            "1000 = 3 (277) + 169\n",
            "277 = 1 (169) + 108\n",
            "169 = 1 (108) + 61\n",
            "108 = 1 (61) + 47\n",
            "61 = 1 (47) + 14\n",
            "47 = 3 (14) + 5\n",
            "14 = 2 (5) + 4\n",
            "5 = 1 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "1000 = 3 (278) + 166\n",
            "278 = 1 (166) + 112\n",
            "166 = 1 (112) + 54\n",
            "112 = 2 (54) + 4\n",
            "54 = 13 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 3 (279) + 163\n",
            "279 = 1 (163) + 116\n",
            "163 = 1 (116) + 47\n",
            "116 = 2 (47) + 22\n",
            "47 = 2 (22) + 3\n",
            "22 = 7 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "1000 = 3 (280) + 160\n",
            "280 = 1 (160) + 120\n",
            "160 = 1 (120) + 40\n",
            "120 = 3 (40) + 0\n",
            "1000 = 3 (281) + 157\n",
            "281 = 1 (157) + 124\n",
            "157 = 1 (124) + 33\n",
            "124 = 3 (33) + 25\n",
            "33 = 1 (25) + 8\n",
            "25 = 3 (8) + 1\n",
            "8 = 8 (1) + 0\n",
            "1000 = 3 (282) + 154\n",
            "282 = 1 (154) + 128\n",
            "154 = 1 (128) + 26\n",
            "128 = 4 (26) + 24\n",
            "26 = 1 (24) + 2\n",
            "24 = 12 (2) + 0\n",
            "1000 = 3 (283) + 151\n",
            "283 = 1 (151) + 132\n",
            "151 = 1 (132) + 19\n",
            "132 = 6 (19) + 18\n",
            "19 = 1 (18) + 1\n",
            "18 = 18 (1) + 0\n",
            "1000 = 3 (284) + 148\n",
            "284 = 1 (148) + 136\n",
            "148 = 1 (136) + 12\n",
            "136 = 11 (12) + 4\n",
            "12 = 3 (4) + 0\n",
            "1000 = 3 (285) + 145\n",
            "285 = 1 (145) + 140\n",
            "145 = 1 (140) + 5\n",
            "140 = 28 (5) + 0\n",
            "1000 = 3 (286) + 142\n",
            "286 = 2 (142) + 2\n",
            "142 = 71 (2) + 0\n",
            "1000 = 3 (287) + 139\n",
            "287 = 2 (139) + 9\n",
            "139 = 15 (9) + 4\n",
            "9 = 2 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "1000 = 3 (288) + 136\n",
            "288 = 2 (136) + 16\n",
            "136 = 8 (16) + 8\n",
            "16 = 2 (8) + 0\n",
            "1000 = 3 (289) + 133\n",
            "289 = 2 (133) + 23\n",
            "133 = 5 (23) + 18\n",
            "23 = 1 (18) + 5\n",
            "18 = 3 (5) + 3\n",
            "5 = 1 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 3 (290) + 130\n",
            "290 = 2 (130) + 30\n",
            "130 = 4 (30) + 10\n",
            "30 = 3 (10) + 0\n",
            "1000 = 3 (291) + 127\n",
            "291 = 2 (127) + 37\n",
            "127 = 3 (37) + 16\n",
            "37 = 2 (16) + 5\n",
            "16 = 3 (5) + 1\n",
            "5 = 5 (1) + 0\n",
            "1000 = 3 (292) + 124\n",
            "292 = 2 (124) + 44\n",
            "124 = 2 (44) + 36\n",
            "44 = 1 (36) + 8\n",
            "36 = 4 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "1000 = 3 (293) + 121\n",
            "293 = 2 (121) + 51\n",
            "121 = 2 (51) + 19\n",
            "51 = 2 (19) + 13\n",
            "19 = 1 (13) + 6\n",
            "13 = 2 (6) + 1\n",
            "6 = 6 (1) + 0\n",
            "1000 = 3 (294) + 118\n",
            "294 = 2 (118) + 58\n",
            "118 = 2 (58) + 2\n",
            "58 = 29 (2) + 0\n",
            "1000 = 3 (295) + 115\n",
            "295 = 2 (115) + 65\n",
            "115 = 1 (65) + 50\n",
            "65 = 1 (50) + 15\n",
            "50 = 3 (15) + 5\n",
            "15 = 3 (5) + 0\n",
            "1000 = 3 (296) + 112\n",
            "296 = 2 (112) + 72\n",
            "112 = 1 (72) + 40\n",
            "72 = 1 (40) + 32\n",
            "40 = 1 (32) + 8\n",
            "32 = 4 (8) + 0\n",
            "1000 = 3 (297) + 109\n",
            "297 = 2 (109) + 79\n",
            "109 = 1 (79) + 30\n",
            "79 = 2 (30) + 19\n",
            "30 = 1 (19) + 11\n",
            "19 = 1 (11) + 8\n",
            "11 = 1 (8) + 3\n",
            "8 = 2 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 3 (298) + 106\n",
            "298 = 2 (106) + 86\n",
            "106 = 1 (86) + 20\n",
            "86 = 4 (20) + 6\n",
            "20 = 3 (6) + 2\n",
            "6 = 3 (2) + 0\n",
            "1000 = 3 (299) + 103\n",
            "299 = 2 (103) + 93\n",
            "103 = 1 (93) + 10\n",
            "93 = 9 (10) + 3\n",
            "10 = 3 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "1000 = 3 (300) + 100\n",
            "300 = 3 (100) + 0\n",
            "1000 = 3 (301) + 97\n",
            "301 = 3 (97) + 10\n",
            "97 = 9 (10) + 7\n",
            "10 = 1 (7) + 3\n",
            "7 = 2 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "1000 = 3 (302) + 94\n",
            "302 = 3 (94) + 20\n",
            "94 = 4 (20) + 14\n",
            "20 = 1 (14) + 6\n",
            "14 = 2 (6) + 2\n",
            "6 = 3 (2) + 0\n",
            "1000 = 3 (303) + 91\n",
            "303 = 3 (91) + 30\n",
            "91 = 3 (30) + 1\n",
            "30 = 30 (1) + 0\n",
            "1000 = 3 (304) + 88\n",
            "304 = 3 (88) + 40\n",
            "88 = 2 (40) + 8\n",
            "40 = 5 (8) + 0\n",
            "1000 = 3 (305) + 85\n",
            "305 = 3 (85) + 50\n",
            "85 = 1 (50) + 35\n",
            "50 = 1 (35) + 15\n",
            "35 = 2 (15) + 5\n",
            "15 = 3 (5) + 0\n",
            "1000 = 3 (306) + 82\n",
            "306 = 3 (82) + 60\n",
            "82 = 1 (60) + 22\n",
            "60 = 2 (22) + 16\n",
            "22 = 1 (16) + 6\n",
            "16 = 2 (6) + 4\n",
            "6 = 1 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 3 (307) + 79\n",
            "307 = 3 (79) + 70\n",
            "79 = 1 (70) + 9\n",
            "70 = 7 (9) + 7\n",
            "9 = 1 (7) + 2\n",
            "7 = 3 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 3 (308) + 76\n",
            "308 = 4 (76) + 4\n",
            "76 = 19 (4) + 0\n",
            "1000 = 3 (309) + 73\n",
            "309 = 4 (73) + 17\n",
            "73 = 4 (17) + 5\n",
            "17 = 3 (5) + 2\n",
            "5 = 2 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 3 (310) + 70\n",
            "310 = 4 (70) + 30\n",
            "70 = 2 (30) + 10\n",
            "30 = 3 (10) + 0\n",
            "1000 = 3 (311) + 67\n",
            "311 = 4 (67) + 43\n",
            "67 = 1 (43) + 24\n",
            "43 = 1 (24) + 19\n",
            "24 = 1 (19) + 5\n",
            "19 = 3 (5) + 4\n",
            "5 = 1 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "1000 = 3 (312) + 64\n",
            "312 = 4 (64) + 56\n",
            "64 = 1 (56) + 8\n",
            "56 = 7 (8) + 0\n",
            "1000 = 3 (313) + 61\n",
            "313 = 5 (61) + 8\n",
            "61 = 7 (8) + 5\n",
            "8 = 1 (5) + 3\n",
            "5 = 1 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 3 (314) + 58\n",
            "314 = 5 (58) + 24\n",
            "58 = 2 (24) + 10\n",
            "24 = 2 (10) + 4\n",
            "10 = 2 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 3 (315) + 55\n",
            "315 = 5 (55) + 40\n",
            "55 = 1 (40) + 15\n",
            "40 = 2 (15) + 10\n",
            "15 = 1 (10) + 5\n",
            "10 = 2 (5) + 0\n",
            "1000 = 3 (316) + 52\n",
            "316 = 6 (52) + 4\n",
            "52 = 13 (4) + 0\n",
            "1000 = 3 (317) + 49\n",
            "317 = 6 (49) + 23\n",
            "49 = 2 (23) + 3\n",
            "23 = 7 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 3 (318) + 46\n",
            "318 = 6 (46) + 42\n",
            "46 = 1 (42) + 4\n",
            "42 = 10 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 3 (319) + 43\n",
            "319 = 7 (43) + 18\n",
            "43 = 2 (18) + 7\n",
            "18 = 2 (7) + 4\n",
            "7 = 1 (4) + 3\n",
            "4 = 1 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "1000 = 3 (320) + 40\n",
            "320 = 8 (40) + 0\n",
            "1000 = 3 (321) + 37\n",
            "321 = 8 (37) + 25\n",
            "37 = 1 (25) + 12\n",
            "25 = 2 (12) + 1\n",
            "12 = 12 (1) + 0\n",
            "1000 = 3 (322) + 34\n",
            "322 = 9 (34) + 16\n",
            "34 = 2 (16) + 2\n",
            "16 = 8 (2) + 0\n",
            "1000 = 3 (323) + 31\n",
            "323 = 10 (31) + 13\n",
            "31 = 2 (13) + 5\n",
            "13 = 2 (5) + 3\n",
            "5 = 1 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 3 (324) + 28\n",
            "324 = 11 (28) + 16\n",
            "28 = 1 (16) + 12\n",
            "16 = 1 (12) + 4\n",
            "12 = 3 (4) + 0\n",
            "1000 = 3 (325) + 25\n",
            "325 = 13 (25) + 0\n",
            "1000 = 3 (326) + 22\n",
            "326 = 14 (22) + 18\n",
            "22 = 1 (18) + 4\n",
            "18 = 4 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 3 (327) + 19\n",
            "327 = 17 (19) + 4\n",
            "19 = 4 (4) + 3\n",
            "4 = 1 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "1000 = 3 (328) + 16\n",
            "328 = 20 (16) + 8\n",
            "16 = 2 (8) + 0\n",
            "1000 = 3 (329) + 13\n",
            "329 = 25 (13) + 4\n",
            "13 = 3 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "1000 = 3 (330) + 10\n",
            "330 = 33 (10) + 0\n",
            "1000 = 3 (331) + 7\n",
            "331 = 47 (7) + 2\n",
            "7 = 3 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 3 (332) + 4\n",
            "332 = 83 (4) + 0\n",
            "1000 = 3 (333) + 1\n",
            "333 = 333 (1) + 0\n",
            "1000 = 2 (334) + 332\n",
            "334 = 1 (332) + 2\n",
            "332 = 166 (2) + 0\n",
            "1000 = 2 (335) + 330\n",
            "335 = 1 (330) + 5\n",
            "330 = 66 (5) + 0\n",
            "1000 = 2 (336) + 328\n",
            "336 = 1 (328) + 8\n",
            "328 = 41 (8) + 0\n",
            "1000 = 2 (337) + 326\n",
            "337 = 1 (326) + 11\n",
            "326 = 29 (11) + 7\n",
            "11 = 1 (7) + 4\n",
            "7 = 1 (4) + 3\n",
            "4 = 1 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "1000 = 2 (338) + 324\n",
            "338 = 1 (324) + 14\n",
            "324 = 23 (14) + 2\n",
            "14 = 7 (2) + 0\n",
            "1000 = 2 (339) + 322\n",
            "339 = 1 (322) + 17\n",
            "322 = 18 (17) + 16\n",
            "17 = 1 (16) + 1\n",
            "16 = 16 (1) + 0\n",
            "1000 = 2 (340) + 320\n",
            "340 = 1 (320) + 20\n",
            "320 = 16 (20) + 0\n",
            "1000 = 2 (341) + 318\n",
            "341 = 1 (318) + 23\n",
            "318 = 13 (23) + 19\n",
            "23 = 1 (19) + 4\n",
            "19 = 4 (4) + 3\n",
            "4 = 1 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "1000 = 2 (342) + 316\n",
            "342 = 1 (316) + 26\n",
            "316 = 12 (26) + 4\n",
            "26 = 6 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 2 (343) + 314\n",
            "343 = 1 (314) + 29\n",
            "314 = 10 (29) + 24\n",
            "29 = 1 (24) + 5\n",
            "24 = 4 (5) + 4\n",
            "5 = 1 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "1000 = 2 (344) + 312\n",
            "344 = 1 (312) + 32\n",
            "312 = 9 (32) + 24\n",
            "32 = 1 (24) + 8\n",
            "24 = 3 (8) + 0\n",
            "1000 = 2 (345) + 310\n",
            "345 = 1 (310) + 35\n",
            "310 = 8 (35) + 30\n",
            "35 = 1 (30) + 5\n",
            "30 = 6 (5) + 0\n",
            "1000 = 2 (346) + 308\n",
            "346 = 1 (308) + 38\n",
            "308 = 8 (38) + 4\n",
            "38 = 9 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 2 (347) + 306\n",
            "347 = 1 (306) + 41\n",
            "306 = 7 (41) + 19\n",
            "41 = 2 (19) + 3\n",
            "19 = 6 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "1000 = 2 (348) + 304\n",
            "348 = 1 (304) + 44\n",
            "304 = 6 (44) + 40\n",
            "44 = 1 (40) + 4\n",
            "40 = 10 (4) + 0\n",
            "1000 = 2 (349) + 302\n",
            "349 = 1 (302) + 47\n",
            "302 = 6 (47) + 20\n",
            "47 = 2 (20) + 7\n",
            "20 = 2 (7) + 6\n",
            "7 = 1 (6) + 1\n",
            "6 = 6 (1) + 0\n",
            "1000 = 2 (350) + 300\n",
            "350 = 1 (300) + 50\n",
            "300 = 6 (50) + 0\n",
            "1000 = 2 (351) + 298\n",
            "351 = 1 (298) + 53\n",
            "298 = 5 (53) + 33\n",
            "53 = 1 (33) + 20\n",
            "33 = 1 (20) + 13\n",
            "20 = 1 (13) + 7\n",
            "13 = 1 (7) + 6\n",
            "7 = 1 (6) + 1\n",
            "6 = 6 (1) + 0\n",
            "1000 = 2 (352) + 296\n",
            "352 = 1 (296) + 56\n",
            "296 = 5 (56) + 16\n",
            "56 = 3 (16) + 8\n",
            "16 = 2 (8) + 0\n",
            "1000 = 2 (353) + 294\n",
            "353 = 1 (294) + 59\n",
            "294 = 4 (59) + 58\n",
            "59 = 1 (58) + 1\n",
            "58 = 58 (1) + 0\n",
            "1000 = 2 (354) + 292\n",
            "354 = 1 (292) + 62\n",
            "292 = 4 (62) + 44\n",
            "62 = 1 (44) + 18\n",
            "44 = 2 (18) + 8\n",
            "18 = 2 (8) + 2\n",
            "8 = 4 (2) + 0\n",
            "1000 = 2 (355) + 290\n",
            "355 = 1 (290) + 65\n",
            "290 = 4 (65) + 30\n",
            "65 = 2 (30) + 5\n",
            "30 = 6 (5) + 0\n",
            "1000 = 2 (356) + 288\n",
            "356 = 1 (288) + 68\n",
            "288 = 4 (68) + 16\n",
            "68 = 4 (16) + 4\n",
            "16 = 4 (4) + 0\n",
            "1000 = 2 (357) + 286\n",
            "357 = 1 (286) + 71\n",
            "286 = 4 (71) + 2\n",
            "71 = 35 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 2 (358) + 284\n",
            "358 = 1 (284) + 74\n",
            "284 = 3 (74) + 62\n",
            "74 = 1 (62) + 12\n",
            "62 = 5 (12) + 2\n",
            "12 = 6 (2) + 0\n",
            "1000 = 2 (359) + 282\n",
            "359 = 1 (282) + 77\n",
            "282 = 3 (77) + 51\n",
            "77 = 1 (51) + 26\n",
            "51 = 1 (26) + 25\n",
            "26 = 1 (25) + 1\n",
            "25 = 25 (1) + 0\n",
            "1000 = 2 (360) + 280\n",
            "360 = 1 (280) + 80\n",
            "280 = 3 (80) + 40\n",
            "80 = 2 (40) + 0\n",
            "1000 = 2 (361) + 278\n",
            "361 = 1 (278) + 83\n",
            "278 = 3 (83) + 29\n",
            "83 = 2 (29) + 25\n",
            "29 = 1 (25) + 4\n",
            "25 = 6 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "1000 = 2 (362) + 276\n",
            "362 = 1 (276) + 86\n",
            "276 = 3 (86) + 18\n",
            "86 = 4 (18) + 14\n",
            "18 = 1 (14) + 4\n",
            "14 = 3 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 2 (363) + 274\n",
            "363 = 1 (274) + 89\n",
            "274 = 3 (89) + 7\n",
            "89 = 12 (7) + 5\n",
            "7 = 1 (5) + 2\n",
            "5 = 2 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 2 (364) + 272\n",
            "364 = 1 (272) + 92\n",
            "272 = 2 (92) + 88\n",
            "92 = 1 (88) + 4\n",
            "88 = 22 (4) + 0\n",
            "1000 = 2 (365) + 270\n",
            "365 = 1 (270) + 95\n",
            "270 = 2 (95) + 80\n",
            "95 = 1 (80) + 15\n",
            "80 = 5 (15) + 5\n",
            "15 = 3 (5) + 0\n",
            "1000 = 2 (366) + 268\n",
            "366 = 1 (268) + 98\n",
            "268 = 2 (98) + 72\n",
            "98 = 1 (72) + 26\n",
            "72 = 2 (26) + 20\n",
            "26 = 1 (20) + 6\n",
            "20 = 3 (6) + 2\n",
            "6 = 3 (2) + 0\n",
            "1000 = 2 (367) + 266\n",
            "367 = 1 (266) + 101\n",
            "266 = 2 (101) + 64\n",
            "101 = 1 (64) + 37\n",
            "64 = 1 (37) + 27\n",
            "37 = 1 (27) + 10\n",
            "27 = 2 (10) + 7\n",
            "10 = 1 (7) + 3\n",
            "7 = 2 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "1000 = 2 (368) + 264\n",
            "368 = 1 (264) + 104\n",
            "264 = 2 (104) + 56\n",
            "104 = 1 (56) + 48\n",
            "56 = 1 (48) + 8\n",
            "48 = 6 (8) + 0\n",
            "1000 = 2 (369) + 262\n",
            "369 = 1 (262) + 107\n",
            "262 = 2 (107) + 48\n",
            "107 = 2 (48) + 11\n",
            "48 = 4 (11) + 4\n",
            "11 = 2 (4) + 3\n",
            "4 = 1 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "1000 = 2 (370) + 260\n",
            "370 = 1 (260) + 110\n",
            "260 = 2 (110) + 40\n",
            "110 = 2 (40) + 30\n",
            "40 = 1 (30) + 10\n",
            "30 = 3 (10) + 0\n",
            "1000 = 2 (371) + 258\n",
            "371 = 1 (258) + 113\n",
            "258 = 2 (113) + 32\n",
            "113 = 3 (32) + 17\n",
            "32 = 1 (17) + 15\n",
            "17 = 1 (15) + 2\n",
            "15 = 7 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 2 (372) + 256\n",
            "372 = 1 (256) + 116\n",
            "256 = 2 (116) + 24\n",
            "116 = 4 (24) + 20\n",
            "24 = 1 (20) + 4\n",
            "20 = 5 (4) + 0\n",
            "1000 = 2 (373) + 254\n",
            "373 = 1 (254) + 119\n",
            "254 = 2 (119) + 16\n",
            "119 = 7 (16) + 7\n",
            "16 = 2 (7) + 2\n",
            "7 = 3 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 2 (374) + 252\n",
            "374 = 1 (252) + 122\n",
            "252 = 2 (122) + 8\n",
            "122 = 15 (8) + 2\n",
            "8 = 4 (2) + 0\n",
            "1000 = 2 (375) + 250\n",
            "375 = 1 (250) + 125\n",
            "250 = 2 (125) + 0\n",
            "1000 = 2 (376) + 248\n",
            "376 = 1 (248) + 128\n",
            "248 = 1 (128) + 120\n",
            "128 = 1 (120) + 8\n",
            "120 = 15 (8) + 0\n",
            "1000 = 2 (377) + 246\n",
            "377 = 1 (246) + 131\n",
            "246 = 1 (131) + 115\n",
            "131 = 1 (115) + 16\n",
            "115 = 7 (16) + 3\n",
            "16 = 5 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "1000 = 2 (378) + 244\n",
            "378 = 1 (244) + 134\n",
            "244 = 1 (134) + 110\n",
            "134 = 1 (110) + 24\n",
            "110 = 4 (24) + 14\n",
            "24 = 1 (14) + 10\n",
            "14 = 1 (10) + 4\n",
            "10 = 2 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 2 (379) + 242\n",
            "379 = 1 (242) + 137\n",
            "242 = 1 (137) + 105\n",
            "137 = 1 (105) + 32\n",
            "105 = 3 (32) + 9\n",
            "32 = 3 (9) + 5\n",
            "9 = 1 (5) + 4\n",
            "5 = 1 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "1000 = 2 (380) + 240\n",
            "380 = 1 (240) + 140\n",
            "240 = 1 (140) + 100\n",
            "140 = 1 (100) + 40\n",
            "100 = 2 (40) + 20\n",
            "40 = 2 (20) + 0\n",
            "1000 = 2 (381) + 238\n",
            "381 = 1 (238) + 143\n",
            "238 = 1 (143) + 95\n",
            "143 = 1 (95) + 48\n",
            "95 = 1 (48) + 47\n",
            "48 = 1 (47) + 1\n",
            "47 = 47 (1) + 0\n",
            "1000 = 2 (382) + 236\n",
            "382 = 1 (236) + 146\n",
            "236 = 1 (146) + 90\n",
            "146 = 1 (90) + 56\n",
            "90 = 1 (56) + 34\n",
            "56 = 1 (34) + 22\n",
            "34 = 1 (22) + 12\n",
            "22 = 1 (12) + 10\n",
            "12 = 1 (10) + 2\n",
            "10 = 5 (2) + 0\n",
            "1000 = 2 (383) + 234\n",
            "383 = 1 (234) + 149\n",
            "234 = 1 (149) + 85\n",
            "149 = 1 (85) + 64\n",
            "85 = 1 (64) + 21\n",
            "64 = 3 (21) + 1\n",
            "21 = 21 (1) + 0\n",
            "1000 = 2 (384) + 232\n",
            "384 = 1 (232) + 152\n",
            "232 = 1 (152) + 80\n",
            "152 = 1 (80) + 72\n",
            "80 = 1 (72) + 8\n",
            "72 = 9 (8) + 0\n",
            "1000 = 2 (385) + 230\n",
            "385 = 1 (230) + 155\n",
            "230 = 1 (155) + 75\n",
            "155 = 2 (75) + 5\n",
            "75 = 15 (5) + 0\n",
            "1000 = 2 (386) + 228\n",
            "386 = 1 (228) + 158\n",
            "228 = 1 (158) + 70\n",
            "158 = 2 (70) + 18\n",
            "70 = 3 (18) + 16\n",
            "18 = 1 (16) + 2\n",
            "16 = 8 (2) + 0\n",
            "1000 = 2 (387) + 226\n",
            "387 = 1 (226) + 161\n",
            "226 = 1 (161) + 65\n",
            "161 = 2 (65) + 31\n",
            "65 = 2 (31) + 3\n",
            "31 = 10 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "1000 = 2 (388) + 224\n",
            "388 = 1 (224) + 164\n",
            "224 = 1 (164) + 60\n",
            "164 = 2 (60) + 44\n",
            "60 = 1 (44) + 16\n",
            "44 = 2 (16) + 12\n",
            "16 = 1 (12) + 4\n",
            "12 = 3 (4) + 0\n",
            "1000 = 2 (389) + 222\n",
            "389 = 1 (222) + 167\n",
            "222 = 1 (167) + 55\n",
            "167 = 3 (55) + 2\n",
            "55 = 27 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 2 (390) + 220\n",
            "390 = 1 (220) + 170\n",
            "220 = 1 (170) + 50\n",
            "170 = 3 (50) + 20\n",
            "50 = 2 (20) + 10\n",
            "20 = 2 (10) + 0\n",
            "1000 = 2 (391) + 218\n",
            "391 = 1 (218) + 173\n",
            "218 = 1 (173) + 45\n",
            "173 = 3 (45) + 38\n",
            "45 = 1 (38) + 7\n",
            "38 = 5 (7) + 3\n",
            "7 = 2 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "1000 = 2 (392) + 216\n",
            "392 = 1 (216) + 176\n",
            "216 = 1 (176) + 40\n",
            "176 = 4 (40) + 16\n",
            "40 = 2 (16) + 8\n",
            "16 = 2 (8) + 0\n",
            "1000 = 2 (393) + 214\n",
            "393 = 1 (214) + 179\n",
            "214 = 1 (179) + 35\n",
            "179 = 5 (35) + 4\n",
            "35 = 8 (4) + 3\n",
            "4 = 1 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "1000 = 2 (394) + 212\n",
            "394 = 1 (212) + 182\n",
            "212 = 1 (182) + 30\n",
            "182 = 6 (30) + 2\n",
            "30 = 15 (2) + 0\n",
            "1000 = 2 (395) + 210\n",
            "395 = 1 (210) + 185\n",
            "210 = 1 (185) + 25\n",
            "185 = 7 (25) + 10\n",
            "25 = 2 (10) + 5\n",
            "10 = 2 (5) + 0\n",
            "1000 = 2 (396) + 208\n",
            "396 = 1 (208) + 188\n",
            "208 = 1 (188) + 20\n",
            "188 = 9 (20) + 8\n",
            "20 = 2 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "1000 = 2 (397) + 206\n",
            "397 = 1 (206) + 191\n",
            "206 = 1 (191) + 15\n",
            "191 = 12 (15) + 11\n",
            "15 = 1 (11) + 4\n",
            "11 = 2 (4) + 3\n",
            "4 = 1 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "1000 = 2 (398) + 204\n",
            "398 = 1 (204) + 194\n",
            "204 = 1 (194) + 10\n",
            "194 = 19 (10) + 4\n",
            "10 = 2 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 2 (399) + 202\n",
            "399 = 1 (202) + 197\n",
            "202 = 1 (197) + 5\n",
            "197 = 39 (5) + 2\n",
            "5 = 2 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 2 (400) + 200\n",
            "400 = 2 (200) + 0\n",
            "1000 = 2 (401) + 198\n",
            "401 = 2 (198) + 5\n",
            "198 = 39 (5) + 3\n",
            "5 = 1 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 2 (402) + 196\n",
            "402 = 2 (196) + 10\n",
            "196 = 19 (10) + 6\n",
            "10 = 1 (6) + 4\n",
            "6 = 1 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 2 (403) + 194\n",
            "403 = 2 (194) + 15\n",
            "194 = 12 (15) + 14\n",
            "15 = 1 (14) + 1\n",
            "14 = 14 (1) + 0\n",
            "1000 = 2 (404) + 192\n",
            "404 = 2 (192) + 20\n",
            "192 = 9 (20) + 12\n",
            "20 = 1 (12) + 8\n",
            "12 = 1 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "1000 = 2 (405) + 190\n",
            "405 = 2 (190) + 25\n",
            "190 = 7 (25) + 15\n",
            "25 = 1 (15) + 10\n",
            "15 = 1 (10) + 5\n",
            "10 = 2 (5) + 0\n",
            "1000 = 2 (406) + 188\n",
            "406 = 2 (188) + 30\n",
            "188 = 6 (30) + 8\n",
            "30 = 3 (8) + 6\n",
            "8 = 1 (6) + 2\n",
            "6 = 3 (2) + 0\n",
            "1000 = 2 (407) + 186\n",
            "407 = 2 (186) + 35\n",
            "186 = 5 (35) + 11\n",
            "35 = 3 (11) + 2\n",
            "11 = 5 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 2 (408) + 184\n",
            "408 = 2 (184) + 40\n",
            "184 = 4 (40) + 24\n",
            "40 = 1 (24) + 16\n",
            "24 = 1 (16) + 8\n",
            "16 = 2 (8) + 0\n",
            "1000 = 2 (409) + 182\n",
            "409 = 2 (182) + 45\n",
            "182 = 4 (45) + 2\n",
            "45 = 22 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 2 (410) + 180\n",
            "410 = 2 (180) + 50\n",
            "180 = 3 (50) + 30\n",
            "50 = 1 (30) + 20\n",
            "30 = 1 (20) + 10\n",
            "20 = 2 (10) + 0\n",
            "1000 = 2 (411) + 178\n",
            "411 = 2 (178) + 55\n",
            "178 = 3 (55) + 13\n",
            "55 = 4 (13) + 3\n",
            "13 = 4 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "1000 = 2 (412) + 176\n",
            "412 = 2 (176) + 60\n",
            "176 = 2 (60) + 56\n",
            "60 = 1 (56) + 4\n",
            "56 = 14 (4) + 0\n",
            "1000 = 2 (413) + 174\n",
            "413 = 2 (174) + 65\n",
            "174 = 2 (65) + 44\n",
            "65 = 1 (44) + 21\n",
            "44 = 2 (21) + 2\n",
            "21 = 10 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 2 (414) + 172\n",
            "414 = 2 (172) + 70\n",
            "172 = 2 (70) + 32\n",
            "70 = 2 (32) + 6\n",
            "32 = 5 (6) + 2\n",
            "6 = 3 (2) + 0\n",
            "1000 = 2 (415) + 170\n",
            "415 = 2 (170) + 75\n",
            "170 = 2 (75) + 20\n",
            "75 = 3 (20) + 15\n",
            "20 = 1 (15) + 5\n",
            "15 = 3 (5) + 0\n",
            "1000 = 2 (416) + 168\n",
            "416 = 2 (168) + 80\n",
            "168 = 2 (80) + 8\n",
            "80 = 10 (8) + 0\n",
            "1000 = 2 (417) + 166\n",
            "417 = 2 (166) + 85\n",
            "166 = 1 (85) + 81\n",
            "85 = 1 (81) + 4\n",
            "81 = 20 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "1000 = 2 (418) + 164\n",
            "418 = 2 (164) + 90\n",
            "164 = 1 (90) + 74\n",
            "90 = 1 (74) + 16\n",
            "74 = 4 (16) + 10\n",
            "16 = 1 (10) + 6\n",
            "10 = 1 (6) + 4\n",
            "6 = 1 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 2 (419) + 162\n",
            "419 = 2 (162) + 95\n",
            "162 = 1 (95) + 67\n",
            "95 = 1 (67) + 28\n",
            "67 = 2 (28) + 11\n",
            "28 = 2 (11) + 6\n",
            "11 = 1 (6) + 5\n",
            "6 = 1 (5) + 1\n",
            "5 = 5 (1) + 0\n",
            "1000 = 2 (420) + 160\n",
            "420 = 2 (160) + 100\n",
            "160 = 1 (100) + 60\n",
            "100 = 1 (60) + 40\n",
            "60 = 1 (40) + 20\n",
            "40 = 2 (20) + 0\n",
            "1000 = 2 (421) + 158\n",
            "421 = 2 (158) + 105\n",
            "158 = 1 (105) + 53\n",
            "105 = 1 (53) + 52\n",
            "53 = 1 (52) + 1\n",
            "52 = 52 (1) + 0\n",
            "1000 = 2 (422) + 156\n",
            "422 = 2 (156) + 110\n",
            "156 = 1 (110) + 46\n",
            "110 = 2 (46) + 18\n",
            "46 = 2 (18) + 10\n",
            "18 = 1 (10) + 8\n",
            "10 = 1 (8) + 2\n",
            "8 = 4 (2) + 0\n",
            "1000 = 2 (423) + 154\n",
            "423 = 2 (154) + 115\n",
            "154 = 1 (115) + 39\n",
            "115 = 2 (39) + 37\n",
            "39 = 1 (37) + 2\n",
            "37 = 18 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 2 (424) + 152\n",
            "424 = 2 (152) + 120\n",
            "152 = 1 (120) + 32\n",
            "120 = 3 (32) + 24\n",
            "32 = 1 (24) + 8\n",
            "24 = 3 (8) + 0\n",
            "1000 = 2 (425) + 150\n",
            "425 = 2 (150) + 125\n",
            "150 = 1 (125) + 25\n",
            "125 = 5 (25) + 0\n",
            "1000 = 2 (426) + 148\n",
            "426 = 2 (148) + 130\n",
            "148 = 1 (130) + 18\n",
            "130 = 7 (18) + 4\n",
            "18 = 4 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 2 (427) + 146\n",
            "427 = 2 (146) + 135\n",
            "146 = 1 (135) + 11\n",
            "135 = 12 (11) + 3\n",
            "11 = 3 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 2 (428) + 144\n",
            "428 = 2 (144) + 140\n",
            "144 = 1 (140) + 4\n",
            "140 = 35 (4) + 0\n",
            "1000 = 2 (429) + 142\n",
            "429 = 3 (142) + 3\n",
            "142 = 47 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "1000 = 2 (430) + 140\n",
            "430 = 3 (140) + 10\n",
            "140 = 14 (10) + 0\n",
            "1000 = 2 (431) + 138\n",
            "431 = 3 (138) + 17\n",
            "138 = 8 (17) + 2\n",
            "17 = 8 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 2 (432) + 136\n",
            "432 = 3 (136) + 24\n",
            "136 = 5 (24) + 16\n",
            "24 = 1 (16) + 8\n",
            "16 = 2 (8) + 0\n",
            "1000 = 2 (433) + 134\n",
            "433 = 3 (134) + 31\n",
            "134 = 4 (31) + 10\n",
            "31 = 3 (10) + 1\n",
            "10 = 10 (1) + 0\n",
            "1000 = 2 (434) + 132\n",
            "434 = 3 (132) + 38\n",
            "132 = 3 (38) + 18\n",
            "38 = 2 (18) + 2\n",
            "18 = 9 (2) + 0\n",
            "1000 = 2 (435) + 130\n",
            "435 = 3 (130) + 45\n",
            "130 = 2 (45) + 40\n",
            "45 = 1 (40) + 5\n",
            "40 = 8 (5) + 0\n",
            "1000 = 2 (436) + 128\n",
            "436 = 3 (128) + 52\n",
            "128 = 2 (52) + 24\n",
            "52 = 2 (24) + 4\n",
            "24 = 6 (4) + 0\n",
            "1000 = 2 (437) + 126\n",
            "437 = 3 (126) + 59\n",
            "126 = 2 (59) + 8\n",
            "59 = 7 (8) + 3\n",
            "8 = 2 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 2 (438) + 124\n",
            "438 = 3 (124) + 66\n",
            "124 = 1 (66) + 58\n",
            "66 = 1 (58) + 8\n",
            "58 = 7 (8) + 2\n",
            "8 = 4 (2) + 0\n",
            "1000 = 2 (439) + 122\n",
            "439 = 3 (122) + 73\n",
            "122 = 1 (73) + 49\n",
            "73 = 1 (49) + 24\n",
            "49 = 2 (24) + 1\n",
            "24 = 24 (1) + 0\n",
            "1000 = 2 (440) + 120\n",
            "440 = 3 (120) + 80\n",
            "120 = 1 (80) + 40\n",
            "80 = 2 (40) + 0\n",
            "1000 = 2 (441) + 118\n",
            "441 = 3 (118) + 87\n",
            "118 = 1 (87) + 31\n",
            "87 = 2 (31) + 25\n",
            "31 = 1 (25) + 6\n",
            "25 = 4 (6) + 1\n",
            "6 = 6 (1) + 0\n",
            "1000 = 2 (442) + 116\n",
            "442 = 3 (116) + 94\n",
            "116 = 1 (94) + 22\n",
            "94 = 4 (22) + 6\n",
            "22 = 3 (6) + 4\n",
            "6 = 1 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 2 (443) + 114\n",
            "443 = 3 (114) + 101\n",
            "114 = 1 (101) + 13\n",
            "101 = 7 (13) + 10\n",
            "13 = 1 (10) + 3\n",
            "10 = 3 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "1000 = 2 (444) + 112\n",
            "444 = 3 (112) + 108\n",
            "112 = 1 (108) + 4\n",
            "108 = 27 (4) + 0\n",
            "1000 = 2 (445) + 110\n",
            "445 = 4 (110) + 5\n",
            "110 = 22 (5) + 0\n",
            "1000 = 2 (446) + 108\n",
            "446 = 4 (108) + 14\n",
            "108 = 7 (14) + 10\n",
            "14 = 1 (10) + 4\n",
            "10 = 2 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 2 (447) + 106\n",
            "447 = 4 (106) + 23\n",
            "106 = 4 (23) + 14\n",
            "23 = 1 (14) + 9\n",
            "14 = 1 (9) + 5\n",
            "9 = 1 (5) + 4\n",
            "5 = 1 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "1000 = 2 (448) + 104\n",
            "448 = 4 (104) + 32\n",
            "104 = 3 (32) + 8\n",
            "32 = 4 (8) + 0\n",
            "1000 = 2 (449) + 102\n",
            "449 = 4 (102) + 41\n",
            "102 = 2 (41) + 20\n",
            "41 = 2 (20) + 1\n",
            "20 = 20 (1) + 0\n",
            "1000 = 2 (450) + 100\n",
            "450 = 4 (100) + 50\n",
            "100 = 2 (50) + 0\n",
            "1000 = 2 (451) + 98\n",
            "451 = 4 (98) + 59\n",
            "98 = 1 (59) + 39\n",
            "59 = 1 (39) + 20\n",
            "39 = 1 (20) + 19\n",
            "20 = 1 (19) + 1\n",
            "19 = 19 (1) + 0\n",
            "1000 = 2 (452) + 96\n",
            "452 = 4 (96) + 68\n",
            "96 = 1 (68) + 28\n",
            "68 = 2 (28) + 12\n",
            "28 = 2 (12) + 4\n",
            "12 = 3 (4) + 0\n",
            "1000 = 2 (453) + 94\n",
            "453 = 4 (94) + 77\n",
            "94 = 1 (77) + 17\n",
            "77 = 4 (17) + 9\n",
            "17 = 1 (9) + 8\n",
            "9 = 1 (8) + 1\n",
            "8 = 8 (1) + 0\n",
            "1000 = 2 (454) + 92\n",
            "454 = 4 (92) + 86\n",
            "92 = 1 (86) + 6\n",
            "86 = 14 (6) + 2\n",
            "6 = 3 (2) + 0\n",
            "1000 = 2 (455) + 90\n",
            "455 = 5 (90) + 5\n",
            "90 = 18 (5) + 0\n",
            "1000 = 2 (456) + 88\n",
            "456 = 5 (88) + 16\n",
            "88 = 5 (16) + 8\n",
            "16 = 2 (8) + 0\n",
            "1000 = 2 (457) + 86\n",
            "457 = 5 (86) + 27\n",
            "86 = 3 (27) + 5\n",
            "27 = 5 (5) + 2\n",
            "5 = 2 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 2 (458) + 84\n",
            "458 = 5 (84) + 38\n",
            "84 = 2 (38) + 8\n",
            "38 = 4 (8) + 6\n",
            "8 = 1 (6) + 2\n",
            "6 = 3 (2) + 0\n",
            "1000 = 2 (459) + 82\n",
            "459 = 5 (82) + 49\n",
            "82 = 1 (49) + 33\n",
            "49 = 1 (33) + 16\n",
            "33 = 2 (16) + 1\n",
            "16 = 16 (1) + 0\n",
            "1000 = 2 (460) + 80\n",
            "460 = 5 (80) + 60\n",
            "80 = 1 (60) + 20\n",
            "60 = 3 (20) + 0\n",
            "1000 = 2 (461) + 78\n",
            "461 = 5 (78) + 71\n",
            "78 = 1 (71) + 7\n",
            "71 = 10 (7) + 1\n",
            "7 = 7 (1) + 0\n",
            "1000 = 2 (462) + 76\n",
            "462 = 6 (76) + 6\n",
            "76 = 12 (6) + 4\n",
            "6 = 1 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 2 (463) + 74\n",
            "463 = 6 (74) + 19\n",
            "74 = 3 (19) + 17\n",
            "19 = 1 (17) + 2\n",
            "17 = 8 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 2 (464) + 72\n",
            "464 = 6 (72) + 32\n",
            "72 = 2 (32) + 8\n",
            "32 = 4 (8) + 0\n",
            "1000 = 2 (465) + 70\n",
            "465 = 6 (70) + 45\n",
            "70 = 1 (45) + 25\n",
            "45 = 1 (25) + 20\n",
            "25 = 1 (20) + 5\n",
            "20 = 4 (5) + 0\n",
            "1000 = 2 (466) + 68\n",
            "466 = 6 (68) + 58\n",
            "68 = 1 (58) + 10\n",
            "58 = 5 (10) + 8\n",
            "10 = 1 (8) + 2\n",
            "8 = 4 (2) + 0\n",
            "1000 = 2 (467) + 66\n",
            "467 = 7 (66) + 5\n",
            "66 = 13 (5) + 1\n",
            "5 = 5 (1) + 0\n",
            "1000 = 2 (468) + 64\n",
            "468 = 7 (64) + 20\n",
            "64 = 3 (20) + 4\n",
            "20 = 5 (4) + 0\n",
            "1000 = 2 (469) + 62\n",
            "469 = 7 (62) + 35\n",
            "62 = 1 (35) + 27\n",
            "35 = 1 (27) + 8\n",
            "27 = 3 (8) + 3\n",
            "8 = 2 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 2 (470) + 60\n",
            "470 = 7 (60) + 50\n",
            "60 = 1 (50) + 10\n",
            "50 = 5 (10) + 0\n",
            "1000 = 2 (471) + 58\n",
            "471 = 8 (58) + 7\n",
            "58 = 8 (7) + 2\n",
            "7 = 3 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 2 (472) + 56\n",
            "472 = 8 (56) + 24\n",
            "56 = 2 (24) + 8\n",
            "24 = 3 (8) + 0\n",
            "1000 = 2 (473) + 54\n",
            "473 = 8 (54) + 41\n",
            "54 = 1 (41) + 13\n",
            "41 = 3 (13) + 2\n",
            "13 = 6 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 2 (474) + 52\n",
            "474 = 9 (52) + 6\n",
            "52 = 8 (6) + 4\n",
            "6 = 1 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 2 (475) + 50\n",
            "475 = 9 (50) + 25\n",
            "50 = 2 (25) + 0\n",
            "1000 = 2 (476) + 48\n",
            "476 = 9 (48) + 44\n",
            "48 = 1 (44) + 4\n",
            "44 = 11 (4) + 0\n",
            "1000 = 2 (477) + 46\n",
            "477 = 10 (46) + 17\n",
            "46 = 2 (17) + 12\n",
            "17 = 1 (12) + 5\n",
            "12 = 2 (5) + 2\n",
            "5 = 2 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 2 (478) + 44\n",
            "478 = 10 (44) + 38\n",
            "44 = 1 (38) + 6\n",
            "38 = 6 (6) + 2\n",
            "6 = 3 (2) + 0\n",
            "1000 = 2 (479) + 42\n",
            "479 = 11 (42) + 17\n",
            "42 = 2 (17) + 8\n",
            "17 = 2 (8) + 1\n",
            "8 = 8 (1) + 0\n",
            "1000 = 2 (480) + 40\n",
            "480 = 12 (40) + 0\n",
            "1000 = 2 (481) + 38\n",
            "481 = 12 (38) + 25\n",
            "38 = 1 (25) + 13\n",
            "25 = 1 (13) + 12\n",
            "13 = 1 (12) + 1\n",
            "12 = 12 (1) + 0\n",
            "1000 = 2 (482) + 36\n",
            "482 = 13 (36) + 14\n",
            "36 = 2 (14) + 8\n",
            "14 = 1 (8) + 6\n",
            "8 = 1 (6) + 2\n",
            "6 = 3 (2) + 0\n",
            "1000 = 2 (483) + 34\n",
            "483 = 14 (34) + 7\n",
            "34 = 4 (7) + 6\n",
            "7 = 1 (6) + 1\n",
            "6 = 6 (1) + 0\n",
            "1000 = 2 (484) + 32\n",
            "484 = 15 (32) + 4\n",
            "32 = 8 (4) + 0\n",
            "1000 = 2 (485) + 30\n",
            "485 = 16 (30) + 5\n",
            "30 = 6 (5) + 0\n",
            "1000 = 2 (486) + 28\n",
            "486 = 17 (28) + 10\n",
            "28 = 2 (10) + 8\n",
            "10 = 1 (8) + 2\n",
            "8 = 4 (2) + 0\n",
            "1000 = 2 (487) + 26\n",
            "487 = 18 (26) + 19\n",
            "26 = 1 (19) + 7\n",
            "19 = 2 (7) + 5\n",
            "7 = 1 (5) + 2\n",
            "5 = 2 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 2 (488) + 24\n",
            "488 = 20 (24) + 8\n",
            "24 = 3 (8) + 0\n",
            "1000 = 2 (489) + 22\n",
            "489 = 22 (22) + 5\n",
            "22 = 4 (5) + 2\n",
            "5 = 2 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 2 (490) + 20\n",
            "490 = 24 (20) + 10\n",
            "20 = 2 (10) + 0\n",
            "1000 = 2 (491) + 18\n",
            "491 = 27 (18) + 5\n",
            "18 = 3 (5) + 3\n",
            "5 = 1 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 2 (492) + 16\n",
            "492 = 30 (16) + 12\n",
            "16 = 1 (12) + 4\n",
            "12 = 3 (4) + 0\n",
            "1000 = 2 (493) + 14\n",
            "493 = 35 (14) + 3\n",
            "14 = 4 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 2 (494) + 12\n",
            "494 = 41 (12) + 2\n",
            "12 = 6 (2) + 0\n",
            "1000 = 2 (495) + 10\n",
            "495 = 49 (10) + 5\n",
            "10 = 2 (5) + 0\n",
            "1000 = 2 (496) + 8\n",
            "496 = 62 (8) + 0\n",
            "1000 = 2 (497) + 6\n",
            "497 = 82 (6) + 5\n",
            "6 = 1 (5) + 1\n",
            "5 = 5 (1) + 0\n",
            "1000 = 2 (498) + 4\n",
            "498 = 124 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 2 (499) + 2\n",
            "499 = 249 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 2 (500) + 0\n",
            "1000 = 1 (501) + 499\n",
            "501 = 1 (499) + 2\n",
            "499 = 249 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (502) + 498\n",
            "502 = 1 (498) + 4\n",
            "498 = 124 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 1 (503) + 497\n",
            "503 = 1 (497) + 6\n",
            "497 = 82 (6) + 5\n",
            "6 = 1 (5) + 1\n",
            "5 = 5 (1) + 0\n",
            "1000 = 1 (504) + 496\n",
            "504 = 1 (496) + 8\n",
            "496 = 62 (8) + 0\n",
            "1000 = 1 (505) + 495\n",
            "505 = 1 (495) + 10\n",
            "495 = 49 (10) + 5\n",
            "10 = 2 (5) + 0\n",
            "1000 = 1 (506) + 494\n",
            "506 = 1 (494) + 12\n",
            "494 = 41 (12) + 2\n",
            "12 = 6 (2) + 0\n",
            "1000 = 1 (507) + 493\n",
            "507 = 1 (493) + 14\n",
            "493 = 35 (14) + 3\n",
            "14 = 4 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (508) + 492\n",
            "508 = 1 (492) + 16\n",
            "492 = 30 (16) + 12\n",
            "16 = 1 (12) + 4\n",
            "12 = 3 (4) + 0\n",
            "1000 = 1 (509) + 491\n",
            "509 = 1 (491) + 18\n",
            "491 = 27 (18) + 5\n",
            "18 = 3 (5) + 3\n",
            "5 = 1 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (510) + 490\n",
            "510 = 1 (490) + 20\n",
            "490 = 24 (20) + 10\n",
            "20 = 2 (10) + 0\n",
            "1000 = 1 (511) + 489\n",
            "511 = 1 (489) + 22\n",
            "489 = 22 (22) + 5\n",
            "22 = 4 (5) + 2\n",
            "5 = 2 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (512) + 488\n",
            "512 = 1 (488) + 24\n",
            "488 = 20 (24) + 8\n",
            "24 = 3 (8) + 0\n",
            "1000 = 1 (513) + 487\n",
            "513 = 1 (487) + 26\n",
            "487 = 18 (26) + 19\n",
            "26 = 1 (19) + 7\n",
            "19 = 2 (7) + 5\n",
            "7 = 1 (5) + 2\n",
            "5 = 2 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (514) + 486\n",
            "514 = 1 (486) + 28\n",
            "486 = 17 (28) + 10\n",
            "28 = 2 (10) + 8\n",
            "10 = 1 (8) + 2\n",
            "8 = 4 (2) + 0\n",
            "1000 = 1 (515) + 485\n",
            "515 = 1 (485) + 30\n",
            "485 = 16 (30) + 5\n",
            "30 = 6 (5) + 0\n",
            "1000 = 1 (516) + 484\n",
            "516 = 1 (484) + 32\n",
            "484 = 15 (32) + 4\n",
            "32 = 8 (4) + 0\n",
            "1000 = 1 (517) + 483\n",
            "517 = 1 (483) + 34\n",
            "483 = 14 (34) + 7\n",
            "34 = 4 (7) + 6\n",
            "7 = 1 (6) + 1\n",
            "6 = 6 (1) + 0\n",
            "1000 = 1 (518) + 482\n",
            "518 = 1 (482) + 36\n",
            "482 = 13 (36) + 14\n",
            "36 = 2 (14) + 8\n",
            "14 = 1 (8) + 6\n",
            "8 = 1 (6) + 2\n",
            "6 = 3 (2) + 0\n",
            "1000 = 1 (519) + 481\n",
            "519 = 1 (481) + 38\n",
            "481 = 12 (38) + 25\n",
            "38 = 1 (25) + 13\n",
            "25 = 1 (13) + 12\n",
            "13 = 1 (12) + 1\n",
            "12 = 12 (1) + 0\n",
            "1000 = 1 (520) + 480\n",
            "520 = 1 (480) + 40\n",
            "480 = 12 (40) + 0\n",
            "1000 = 1 (521) + 479\n",
            "521 = 1 (479) + 42\n",
            "479 = 11 (42) + 17\n",
            "42 = 2 (17) + 8\n",
            "17 = 2 (8) + 1\n",
            "8 = 8 (1) + 0\n",
            "1000 = 1 (522) + 478\n",
            "522 = 1 (478) + 44\n",
            "478 = 10 (44) + 38\n",
            "44 = 1 (38) + 6\n",
            "38 = 6 (6) + 2\n",
            "6 = 3 (2) + 0\n",
            "1000 = 1 (523) + 477\n",
            "523 = 1 (477) + 46\n",
            "477 = 10 (46) + 17\n",
            "46 = 2 (17) + 12\n",
            "17 = 1 (12) + 5\n",
            "12 = 2 (5) + 2\n",
            "5 = 2 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (524) + 476\n",
            "524 = 1 (476) + 48\n",
            "476 = 9 (48) + 44\n",
            "48 = 1 (44) + 4\n",
            "44 = 11 (4) + 0\n",
            "1000 = 1 (525) + 475\n",
            "525 = 1 (475) + 50\n",
            "475 = 9 (50) + 25\n",
            "50 = 2 (25) + 0\n",
            "1000 = 1 (526) + 474\n",
            "526 = 1 (474) + 52\n",
            "474 = 9 (52) + 6\n",
            "52 = 8 (6) + 4\n",
            "6 = 1 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 1 (527) + 473\n",
            "527 = 1 (473) + 54\n",
            "473 = 8 (54) + 41\n",
            "54 = 1 (41) + 13\n",
            "41 = 3 (13) + 2\n",
            "13 = 6 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (528) + 472\n",
            "528 = 1 (472) + 56\n",
            "472 = 8 (56) + 24\n",
            "56 = 2 (24) + 8\n",
            "24 = 3 (8) + 0\n",
            "1000 = 1 (529) + 471\n",
            "529 = 1 (471) + 58\n",
            "471 = 8 (58) + 7\n",
            "58 = 8 (7) + 2\n",
            "7 = 3 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (530) + 470\n",
            "530 = 1 (470) + 60\n",
            "470 = 7 (60) + 50\n",
            "60 = 1 (50) + 10\n",
            "50 = 5 (10) + 0\n",
            "1000 = 1 (531) + 469\n",
            "531 = 1 (469) + 62\n",
            "469 = 7 (62) + 35\n",
            "62 = 1 (35) + 27\n",
            "35 = 1 (27) + 8\n",
            "27 = 3 (8) + 3\n",
            "8 = 2 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (532) + 468\n",
            "532 = 1 (468) + 64\n",
            "468 = 7 (64) + 20\n",
            "64 = 3 (20) + 4\n",
            "20 = 5 (4) + 0\n",
            "1000 = 1 (533) + 467\n",
            "533 = 1 (467) + 66\n",
            "467 = 7 (66) + 5\n",
            "66 = 13 (5) + 1\n",
            "5 = 5 (1) + 0\n",
            "1000 = 1 (534) + 466\n",
            "534 = 1 (466) + 68\n",
            "466 = 6 (68) + 58\n",
            "68 = 1 (58) + 10\n",
            "58 = 5 (10) + 8\n",
            "10 = 1 (8) + 2\n",
            "8 = 4 (2) + 0\n",
            "1000 = 1 (535) + 465\n",
            "535 = 1 (465) + 70\n",
            "465 = 6 (70) + 45\n",
            "70 = 1 (45) + 25\n",
            "45 = 1 (25) + 20\n",
            "25 = 1 (20) + 5\n",
            "20 = 4 (5) + 0\n",
            "1000 = 1 (536) + 464\n",
            "536 = 1 (464) + 72\n",
            "464 = 6 (72) + 32\n",
            "72 = 2 (32) + 8\n",
            "32 = 4 (8) + 0\n",
            "1000 = 1 (537) + 463\n",
            "537 = 1 (463) + 74\n",
            "463 = 6 (74) + 19\n",
            "74 = 3 (19) + 17\n",
            "19 = 1 (17) + 2\n",
            "17 = 8 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (538) + 462\n",
            "538 = 1 (462) + 76\n",
            "462 = 6 (76) + 6\n",
            "76 = 12 (6) + 4\n",
            "6 = 1 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 1 (539) + 461\n",
            "539 = 1 (461) + 78\n",
            "461 = 5 (78) + 71\n",
            "78 = 1 (71) + 7\n",
            "71 = 10 (7) + 1\n",
            "7 = 7 (1) + 0\n",
            "1000 = 1 (540) + 460\n",
            "540 = 1 (460) + 80\n",
            "460 = 5 (80) + 60\n",
            "80 = 1 (60) + 20\n",
            "60 = 3 (20) + 0\n",
            "1000 = 1 (541) + 459\n",
            "541 = 1 (459) + 82\n",
            "459 = 5 (82) + 49\n",
            "82 = 1 (49) + 33\n",
            "49 = 1 (33) + 16\n",
            "33 = 2 (16) + 1\n",
            "16 = 16 (1) + 0\n",
            "1000 = 1 (542) + 458\n",
            "542 = 1 (458) + 84\n",
            "458 = 5 (84) + 38\n",
            "84 = 2 (38) + 8\n",
            "38 = 4 (8) + 6\n",
            "8 = 1 (6) + 2\n",
            "6 = 3 (2) + 0\n",
            "1000 = 1 (543) + 457\n",
            "543 = 1 (457) + 86\n",
            "457 = 5 (86) + 27\n",
            "86 = 3 (27) + 5\n",
            "27 = 5 (5) + 2\n",
            "5 = 2 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (544) + 456\n",
            "544 = 1 (456) + 88\n",
            "456 = 5 (88) + 16\n",
            "88 = 5 (16) + 8\n",
            "16 = 2 (8) + 0\n",
            "1000 = 1 (545) + 455\n",
            "545 = 1 (455) + 90\n",
            "455 = 5 (90) + 5\n",
            "90 = 18 (5) + 0\n",
            "1000 = 1 (546) + 454\n",
            "546 = 1 (454) + 92\n",
            "454 = 4 (92) + 86\n",
            "92 = 1 (86) + 6\n",
            "86 = 14 (6) + 2\n",
            "6 = 3 (2) + 0\n",
            "1000 = 1 (547) + 453\n",
            "547 = 1 (453) + 94\n",
            "453 = 4 (94) + 77\n",
            "94 = 1 (77) + 17\n",
            "77 = 4 (17) + 9\n",
            "17 = 1 (9) + 8\n",
            "9 = 1 (8) + 1\n",
            "8 = 8 (1) + 0\n",
            "1000 = 1 (548) + 452\n",
            "548 = 1 (452) + 96\n",
            "452 = 4 (96) + 68\n",
            "96 = 1 (68) + 28\n",
            "68 = 2 (28) + 12\n",
            "28 = 2 (12) + 4\n",
            "12 = 3 (4) + 0\n",
            "1000 = 1 (549) + 451\n",
            "549 = 1 (451) + 98\n",
            "451 = 4 (98) + 59\n",
            "98 = 1 (59) + 39\n",
            "59 = 1 (39) + 20\n",
            "39 = 1 (20) + 19\n",
            "20 = 1 (19) + 1\n",
            "19 = 19 (1) + 0\n",
            "1000 = 1 (550) + 450\n",
            "550 = 1 (450) + 100\n",
            "450 = 4 (100) + 50\n",
            "100 = 2 (50) + 0\n",
            "1000 = 1 (551) + 449\n",
            "551 = 1 (449) + 102\n",
            "449 = 4 (102) + 41\n",
            "102 = 2 (41) + 20\n",
            "41 = 2 (20) + 1\n",
            "20 = 20 (1) + 0\n",
            "1000 = 1 (552) + 448\n",
            "552 = 1 (448) + 104\n",
            "448 = 4 (104) + 32\n",
            "104 = 3 (32) + 8\n",
            "32 = 4 (8) + 0\n",
            "1000 = 1 (553) + 447\n",
            "553 = 1 (447) + 106\n",
            "447 = 4 (106) + 23\n",
            "106 = 4 (23) + 14\n",
            "23 = 1 (14) + 9\n",
            "14 = 1 (9) + 5\n",
            "9 = 1 (5) + 4\n",
            "5 = 1 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "1000 = 1 (554) + 446\n",
            "554 = 1 (446) + 108\n",
            "446 = 4 (108) + 14\n",
            "108 = 7 (14) + 10\n",
            "14 = 1 (10) + 4\n",
            "10 = 2 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 1 (555) + 445\n",
            "555 = 1 (445) + 110\n",
            "445 = 4 (110) + 5\n",
            "110 = 22 (5) + 0\n",
            "1000 = 1 (556) + 444\n",
            "556 = 1 (444) + 112\n",
            "444 = 3 (112) + 108\n",
            "112 = 1 (108) + 4\n",
            "108 = 27 (4) + 0\n",
            "1000 = 1 (557) + 443\n",
            "557 = 1 (443) + 114\n",
            "443 = 3 (114) + 101\n",
            "114 = 1 (101) + 13\n",
            "101 = 7 (13) + 10\n",
            "13 = 1 (10) + 3\n",
            "10 = 3 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "1000 = 1 (558) + 442\n",
            "558 = 1 (442) + 116\n",
            "442 = 3 (116) + 94\n",
            "116 = 1 (94) + 22\n",
            "94 = 4 (22) + 6\n",
            "22 = 3 (6) + 4\n",
            "6 = 1 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 1 (559) + 441\n",
            "559 = 1 (441) + 118\n",
            "441 = 3 (118) + 87\n",
            "118 = 1 (87) + 31\n",
            "87 = 2 (31) + 25\n",
            "31 = 1 (25) + 6\n",
            "25 = 4 (6) + 1\n",
            "6 = 6 (1) + 0\n",
            "1000 = 1 (560) + 440\n",
            "560 = 1 (440) + 120\n",
            "440 = 3 (120) + 80\n",
            "120 = 1 (80) + 40\n",
            "80 = 2 (40) + 0\n",
            "1000 = 1 (561) + 439\n",
            "561 = 1 (439) + 122\n",
            "439 = 3 (122) + 73\n",
            "122 = 1 (73) + 49\n",
            "73 = 1 (49) + 24\n",
            "49 = 2 (24) + 1\n",
            "24 = 24 (1) + 0\n",
            "1000 = 1 (562) + 438\n",
            "562 = 1 (438) + 124\n",
            "438 = 3 (124) + 66\n",
            "124 = 1 (66) + 58\n",
            "66 = 1 (58) + 8\n",
            "58 = 7 (8) + 2\n",
            "8 = 4 (2) + 0\n",
            "1000 = 1 (563) + 437\n",
            "563 = 1 (437) + 126\n",
            "437 = 3 (126) + 59\n",
            "126 = 2 (59) + 8\n",
            "59 = 7 (8) + 3\n",
            "8 = 2 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (564) + 436\n",
            "564 = 1 (436) + 128\n",
            "436 = 3 (128) + 52\n",
            "128 = 2 (52) + 24\n",
            "52 = 2 (24) + 4\n",
            "24 = 6 (4) + 0\n",
            "1000 = 1 (565) + 435\n",
            "565 = 1 (435) + 130\n",
            "435 = 3 (130) + 45\n",
            "130 = 2 (45) + 40\n",
            "45 = 1 (40) + 5\n",
            "40 = 8 (5) + 0\n",
            "1000 = 1 (566) + 434\n",
            "566 = 1 (434) + 132\n",
            "434 = 3 (132) + 38\n",
            "132 = 3 (38) + 18\n",
            "38 = 2 (18) + 2\n",
            "18 = 9 (2) + 0\n",
            "1000 = 1 (567) + 433\n",
            "567 = 1 (433) + 134\n",
            "433 = 3 (134) + 31\n",
            "134 = 4 (31) + 10\n",
            "31 = 3 (10) + 1\n",
            "10 = 10 (1) + 0\n",
            "1000 = 1 (568) + 432\n",
            "568 = 1 (432) + 136\n",
            "432 = 3 (136) + 24\n",
            "136 = 5 (24) + 16\n",
            "24 = 1 (16) + 8\n",
            "16 = 2 (8) + 0\n",
            "1000 = 1 (569) + 431\n",
            "569 = 1 (431) + 138\n",
            "431 = 3 (138) + 17\n",
            "138 = 8 (17) + 2\n",
            "17 = 8 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (570) + 430\n",
            "570 = 1 (430) + 140\n",
            "430 = 3 (140) + 10\n",
            "140 = 14 (10) + 0\n",
            "1000 = 1 (571) + 429\n",
            "571 = 1 (429) + 142\n",
            "429 = 3 (142) + 3\n",
            "142 = 47 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "1000 = 1 (572) + 428\n",
            "572 = 1 (428) + 144\n",
            "428 = 2 (144) + 140\n",
            "144 = 1 (140) + 4\n",
            "140 = 35 (4) + 0\n",
            "1000 = 1 (573) + 427\n",
            "573 = 1 (427) + 146\n",
            "427 = 2 (146) + 135\n",
            "146 = 1 (135) + 11\n",
            "135 = 12 (11) + 3\n",
            "11 = 3 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (574) + 426\n",
            "574 = 1 (426) + 148\n",
            "426 = 2 (148) + 130\n",
            "148 = 1 (130) + 18\n",
            "130 = 7 (18) + 4\n",
            "18 = 4 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 1 (575) + 425\n",
            "575 = 1 (425) + 150\n",
            "425 = 2 (150) + 125\n",
            "150 = 1 (125) + 25\n",
            "125 = 5 (25) + 0\n",
            "1000 = 1 (576) + 424\n",
            "576 = 1 (424) + 152\n",
            "424 = 2 (152) + 120\n",
            "152 = 1 (120) + 32\n",
            "120 = 3 (32) + 24\n",
            "32 = 1 (24) + 8\n",
            "24 = 3 (8) + 0\n",
            "1000 = 1 (577) + 423\n",
            "577 = 1 (423) + 154\n",
            "423 = 2 (154) + 115\n",
            "154 = 1 (115) + 39\n",
            "115 = 2 (39) + 37\n",
            "39 = 1 (37) + 2\n",
            "37 = 18 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (578) + 422\n",
            "578 = 1 (422) + 156\n",
            "422 = 2 (156) + 110\n",
            "156 = 1 (110) + 46\n",
            "110 = 2 (46) + 18\n",
            "46 = 2 (18) + 10\n",
            "18 = 1 (10) + 8\n",
            "10 = 1 (8) + 2\n",
            "8 = 4 (2) + 0\n",
            "1000 = 1 (579) + 421\n",
            "579 = 1 (421) + 158\n",
            "421 = 2 (158) + 105\n",
            "158 = 1 (105) + 53\n",
            "105 = 1 (53) + 52\n",
            "53 = 1 (52) + 1\n",
            "52 = 52 (1) + 0\n",
            "1000 = 1 (580) + 420\n",
            "580 = 1 (420) + 160\n",
            "420 = 2 (160) + 100\n",
            "160 = 1 (100) + 60\n",
            "100 = 1 (60) + 40\n",
            "60 = 1 (40) + 20\n",
            "40 = 2 (20) + 0\n",
            "1000 = 1 (581) + 419\n",
            "581 = 1 (419) + 162\n",
            "419 = 2 (162) + 95\n",
            "162 = 1 (95) + 67\n",
            "95 = 1 (67) + 28\n",
            "67 = 2 (28) + 11\n",
            "28 = 2 (11) + 6\n",
            "11 = 1 (6) + 5\n",
            "6 = 1 (5) + 1\n",
            "5 = 5 (1) + 0\n",
            "1000 = 1 (582) + 418\n",
            "582 = 1 (418) + 164\n",
            "418 = 2 (164) + 90\n",
            "164 = 1 (90) + 74\n",
            "90 = 1 (74) + 16\n",
            "74 = 4 (16) + 10\n",
            "16 = 1 (10) + 6\n",
            "10 = 1 (6) + 4\n",
            "6 = 1 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 1 (583) + 417\n",
            "583 = 1 (417) + 166\n",
            "417 = 2 (166) + 85\n",
            "166 = 1 (85) + 81\n",
            "85 = 1 (81) + 4\n",
            "81 = 20 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "1000 = 1 (584) + 416\n",
            "584 = 1 (416) + 168\n",
            "416 = 2 (168) + 80\n",
            "168 = 2 (80) + 8\n",
            "80 = 10 (8) + 0\n",
            "1000 = 1 (585) + 415\n",
            "585 = 1 (415) + 170\n",
            "415 = 2 (170) + 75\n",
            "170 = 2 (75) + 20\n",
            "75 = 3 (20) + 15\n",
            "20 = 1 (15) + 5\n",
            "15 = 3 (5) + 0\n",
            "1000 = 1 (586) + 414\n",
            "586 = 1 (414) + 172\n",
            "414 = 2 (172) + 70\n",
            "172 = 2 (70) + 32\n",
            "70 = 2 (32) + 6\n",
            "32 = 5 (6) + 2\n",
            "6 = 3 (2) + 0\n",
            "1000 = 1 (587) + 413\n",
            "587 = 1 (413) + 174\n",
            "413 = 2 (174) + 65\n",
            "174 = 2 (65) + 44\n",
            "65 = 1 (44) + 21\n",
            "44 = 2 (21) + 2\n",
            "21 = 10 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (588) + 412\n",
            "588 = 1 (412) + 176\n",
            "412 = 2 (176) + 60\n",
            "176 = 2 (60) + 56\n",
            "60 = 1 (56) + 4\n",
            "56 = 14 (4) + 0\n",
            "1000 = 1 (589) + 411\n",
            "589 = 1 (411) + 178\n",
            "411 = 2 (178) + 55\n",
            "178 = 3 (55) + 13\n",
            "55 = 4 (13) + 3\n",
            "13 = 4 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "1000 = 1 (590) + 410\n",
            "590 = 1 (410) + 180\n",
            "410 = 2 (180) + 50\n",
            "180 = 3 (50) + 30\n",
            "50 = 1 (30) + 20\n",
            "30 = 1 (20) + 10\n",
            "20 = 2 (10) + 0\n",
            "1000 = 1 (591) + 409\n",
            "591 = 1 (409) + 182\n",
            "409 = 2 (182) + 45\n",
            "182 = 4 (45) + 2\n",
            "45 = 22 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (592) + 408\n",
            "592 = 1 (408) + 184\n",
            "408 = 2 (184) + 40\n",
            "184 = 4 (40) + 24\n",
            "40 = 1 (24) + 16\n",
            "24 = 1 (16) + 8\n",
            "16 = 2 (8) + 0\n",
            "1000 = 1 (593) + 407\n",
            "593 = 1 (407) + 186\n",
            "407 = 2 (186) + 35\n",
            "186 = 5 (35) + 11\n",
            "35 = 3 (11) + 2\n",
            "11 = 5 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (594) + 406\n",
            "594 = 1 (406) + 188\n",
            "406 = 2 (188) + 30\n",
            "188 = 6 (30) + 8\n",
            "30 = 3 (8) + 6\n",
            "8 = 1 (6) + 2\n",
            "6 = 3 (2) + 0\n",
            "1000 = 1 (595) + 405\n",
            "595 = 1 (405) + 190\n",
            "405 = 2 (190) + 25\n",
            "190 = 7 (25) + 15\n",
            "25 = 1 (15) + 10\n",
            "15 = 1 (10) + 5\n",
            "10 = 2 (5) + 0\n",
            "1000 = 1 (596) + 404\n",
            "596 = 1 (404) + 192\n",
            "404 = 2 (192) + 20\n",
            "192 = 9 (20) + 12\n",
            "20 = 1 (12) + 8\n",
            "12 = 1 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "1000 = 1 (597) + 403\n",
            "597 = 1 (403) + 194\n",
            "403 = 2 (194) + 15\n",
            "194 = 12 (15) + 14\n",
            "15 = 1 (14) + 1\n",
            "14 = 14 (1) + 0\n",
            "1000 = 1 (598) + 402\n",
            "598 = 1 (402) + 196\n",
            "402 = 2 (196) + 10\n",
            "196 = 19 (10) + 6\n",
            "10 = 1 (6) + 4\n",
            "6 = 1 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 1 (599) + 401\n",
            "599 = 1 (401) + 198\n",
            "401 = 2 (198) + 5\n",
            "198 = 39 (5) + 3\n",
            "5 = 1 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (600) + 400\n",
            "600 = 1 (400) + 200\n",
            "400 = 2 (200) + 0\n",
            "1000 = 1 (601) + 399\n",
            "601 = 1 (399) + 202\n",
            "399 = 1 (202) + 197\n",
            "202 = 1 (197) + 5\n",
            "197 = 39 (5) + 2\n",
            "5 = 2 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (602) + 398\n",
            "602 = 1 (398) + 204\n",
            "398 = 1 (204) + 194\n",
            "204 = 1 (194) + 10\n",
            "194 = 19 (10) + 4\n",
            "10 = 2 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 1 (603) + 397\n",
            "603 = 1 (397) + 206\n",
            "397 = 1 (206) + 191\n",
            "206 = 1 (191) + 15\n",
            "191 = 12 (15) + 11\n",
            "15 = 1 (11) + 4\n",
            "11 = 2 (4) + 3\n",
            "4 = 1 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "1000 = 1 (604) + 396\n",
            "604 = 1 (396) + 208\n",
            "396 = 1 (208) + 188\n",
            "208 = 1 (188) + 20\n",
            "188 = 9 (20) + 8\n",
            "20 = 2 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "1000 = 1 (605) + 395\n",
            "605 = 1 (395) + 210\n",
            "395 = 1 (210) + 185\n",
            "210 = 1 (185) + 25\n",
            "185 = 7 (25) + 10\n",
            "25 = 2 (10) + 5\n",
            "10 = 2 (5) + 0\n",
            "1000 = 1 (606) + 394\n",
            "606 = 1 (394) + 212\n",
            "394 = 1 (212) + 182\n",
            "212 = 1 (182) + 30\n",
            "182 = 6 (30) + 2\n",
            "30 = 15 (2) + 0\n",
            "1000 = 1 (607) + 393\n",
            "607 = 1 (393) + 214\n",
            "393 = 1 (214) + 179\n",
            "214 = 1 (179) + 35\n",
            "179 = 5 (35) + 4\n",
            "35 = 8 (4) + 3\n",
            "4 = 1 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "1000 = 1 (608) + 392\n",
            "608 = 1 (392) + 216\n",
            "392 = 1 (216) + 176\n",
            "216 = 1 (176) + 40\n",
            "176 = 4 (40) + 16\n",
            "40 = 2 (16) + 8\n",
            "16 = 2 (8) + 0\n",
            "1000 = 1 (609) + 391\n",
            "609 = 1 (391) + 218\n",
            "391 = 1 (218) + 173\n",
            "218 = 1 (173) + 45\n",
            "173 = 3 (45) + 38\n",
            "45 = 1 (38) + 7\n",
            "38 = 5 (7) + 3\n",
            "7 = 2 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "1000 = 1 (610) + 390\n",
            "610 = 1 (390) + 220\n",
            "390 = 1 (220) + 170\n",
            "220 = 1 (170) + 50\n",
            "170 = 3 (50) + 20\n",
            "50 = 2 (20) + 10\n",
            "20 = 2 (10) + 0\n",
            "1000 = 1 (611) + 389\n",
            "611 = 1 (389) + 222\n",
            "389 = 1 (222) + 167\n",
            "222 = 1 (167) + 55\n",
            "167 = 3 (55) + 2\n",
            "55 = 27 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (612) + 388\n",
            "612 = 1 (388) + 224\n",
            "388 = 1 (224) + 164\n",
            "224 = 1 (164) + 60\n",
            "164 = 2 (60) + 44\n",
            "60 = 1 (44) + 16\n",
            "44 = 2 (16) + 12\n",
            "16 = 1 (12) + 4\n",
            "12 = 3 (4) + 0\n",
            "1000 = 1 (613) + 387\n",
            "613 = 1 (387) + 226\n",
            "387 = 1 (226) + 161\n",
            "226 = 1 (161) + 65\n",
            "161 = 2 (65) + 31\n",
            "65 = 2 (31) + 3\n",
            "31 = 10 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "1000 = 1 (614) + 386\n",
            "614 = 1 (386) + 228\n",
            "386 = 1 (228) + 158\n",
            "228 = 1 (158) + 70\n",
            "158 = 2 (70) + 18\n",
            "70 = 3 (18) + 16\n",
            "18 = 1 (16) + 2\n",
            "16 = 8 (2) + 0\n",
            "1000 = 1 (615) + 385\n",
            "615 = 1 (385) + 230\n",
            "385 = 1 (230) + 155\n",
            "230 = 1 (155) + 75\n",
            "155 = 2 (75) + 5\n",
            "75 = 15 (5) + 0\n",
            "1000 = 1 (616) + 384\n",
            "616 = 1 (384) + 232\n",
            "384 = 1 (232) + 152\n",
            "232 = 1 (152) + 80\n",
            "152 = 1 (80) + 72\n",
            "80 = 1 (72) + 8\n",
            "72 = 9 (8) + 0\n",
            "1000 = 1 (617) + 383\n",
            "617 = 1 (383) + 234\n",
            "383 = 1 (234) + 149\n",
            "234 = 1 (149) + 85\n",
            "149 = 1 (85) + 64\n",
            "85 = 1 (64) + 21\n",
            "64 = 3 (21) + 1\n",
            "21 = 21 (1) + 0\n",
            "1000 = 1 (618) + 382\n",
            "618 = 1 (382) + 236\n",
            "382 = 1 (236) + 146\n",
            "236 = 1 (146) + 90\n",
            "146 = 1 (90) + 56\n",
            "90 = 1 (56) + 34\n",
            "56 = 1 (34) + 22\n",
            "34 = 1 (22) + 12\n",
            "22 = 1 (12) + 10\n",
            "12 = 1 (10) + 2\n",
            "10 = 5 (2) + 0\n",
            "1000 = 1 (619) + 381\n",
            "619 = 1 (381) + 238\n",
            "381 = 1 (238) + 143\n",
            "238 = 1 (143) + 95\n",
            "143 = 1 (95) + 48\n",
            "95 = 1 (48) + 47\n",
            "48 = 1 (47) + 1\n",
            "47 = 47 (1) + 0\n",
            "1000 = 1 (620) + 380\n",
            "620 = 1 (380) + 240\n",
            "380 = 1 (240) + 140\n",
            "240 = 1 (140) + 100\n",
            "140 = 1 (100) + 40\n",
            "100 = 2 (40) + 20\n",
            "40 = 2 (20) + 0\n",
            "1000 = 1 (621) + 379\n",
            "621 = 1 (379) + 242\n",
            "379 = 1 (242) + 137\n",
            "242 = 1 (137) + 105\n",
            "137 = 1 (105) + 32\n",
            "105 = 3 (32) + 9\n",
            "32 = 3 (9) + 5\n",
            "9 = 1 (5) + 4\n",
            "5 = 1 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "1000 = 1 (622) + 378\n",
            "622 = 1 (378) + 244\n",
            "378 = 1 (244) + 134\n",
            "244 = 1 (134) + 110\n",
            "134 = 1 (110) + 24\n",
            "110 = 4 (24) + 14\n",
            "24 = 1 (14) + 10\n",
            "14 = 1 (10) + 4\n",
            "10 = 2 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 1 (623) + 377\n",
            "623 = 1 (377) + 246\n",
            "377 = 1 (246) + 131\n",
            "246 = 1 (131) + 115\n",
            "131 = 1 (115) + 16\n",
            "115 = 7 (16) + 3\n",
            "16 = 5 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "1000 = 1 (624) + 376\n",
            "624 = 1 (376) + 248\n",
            "376 = 1 (248) + 128\n",
            "248 = 1 (128) + 120\n",
            "128 = 1 (120) + 8\n",
            "120 = 15 (8) + 0\n",
            "1000 = 1 (625) + 375\n",
            "625 = 1 (375) + 250\n",
            "375 = 1 (250) + 125\n",
            "250 = 2 (125) + 0\n",
            "1000 = 1 (626) + 374\n",
            "626 = 1 (374) + 252\n",
            "374 = 1 (252) + 122\n",
            "252 = 2 (122) + 8\n",
            "122 = 15 (8) + 2\n",
            "8 = 4 (2) + 0\n",
            "1000 = 1 (627) + 373\n",
            "627 = 1 (373) + 254\n",
            "373 = 1 (254) + 119\n",
            "254 = 2 (119) + 16\n",
            "119 = 7 (16) + 7\n",
            "16 = 2 (7) + 2\n",
            "7 = 3 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (628) + 372\n",
            "628 = 1 (372) + 256\n",
            "372 = 1 (256) + 116\n",
            "256 = 2 (116) + 24\n",
            "116 = 4 (24) + 20\n",
            "24 = 1 (20) + 4\n",
            "20 = 5 (4) + 0\n",
            "1000 = 1 (629) + 371\n",
            "629 = 1 (371) + 258\n",
            "371 = 1 (258) + 113\n",
            "258 = 2 (113) + 32\n",
            "113 = 3 (32) + 17\n",
            "32 = 1 (17) + 15\n",
            "17 = 1 (15) + 2\n",
            "15 = 7 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (630) + 370\n",
            "630 = 1 (370) + 260\n",
            "370 = 1 (260) + 110\n",
            "260 = 2 (110) + 40\n",
            "110 = 2 (40) + 30\n",
            "40 = 1 (30) + 10\n",
            "30 = 3 (10) + 0\n",
            "1000 = 1 (631) + 369\n",
            "631 = 1 (369) + 262\n",
            "369 = 1 (262) + 107\n",
            "262 = 2 (107) + 48\n",
            "107 = 2 (48) + 11\n",
            "48 = 4 (11) + 4\n",
            "11 = 2 (4) + 3\n",
            "4 = 1 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "1000 = 1 (632) + 368\n",
            "632 = 1 (368) + 264\n",
            "368 = 1 (264) + 104\n",
            "264 = 2 (104) + 56\n",
            "104 = 1 (56) + 48\n",
            "56 = 1 (48) + 8\n",
            "48 = 6 (8) + 0\n",
            "1000 = 1 (633) + 367\n",
            "633 = 1 (367) + 266\n",
            "367 = 1 (266) + 101\n",
            "266 = 2 (101) + 64\n",
            "101 = 1 (64) + 37\n",
            "64 = 1 (37) + 27\n",
            "37 = 1 (27) + 10\n",
            "27 = 2 (10) + 7\n",
            "10 = 1 (7) + 3\n",
            "7 = 2 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "1000 = 1 (634) + 366\n",
            "634 = 1 (366) + 268\n",
            "366 = 1 (268) + 98\n",
            "268 = 2 (98) + 72\n",
            "98 = 1 (72) + 26\n",
            "72 = 2 (26) + 20\n",
            "26 = 1 (20) + 6\n",
            "20 = 3 (6) + 2\n",
            "6 = 3 (2) + 0\n",
            "1000 = 1 (635) + 365\n",
            "635 = 1 (365) + 270\n",
            "365 = 1 (270) + 95\n",
            "270 = 2 (95) + 80\n",
            "95 = 1 (80) + 15\n",
            "80 = 5 (15) + 5\n",
            "15 = 3 (5) + 0\n",
            "1000 = 1 (636) + 364\n",
            "636 = 1 (364) + 272\n",
            "364 = 1 (272) + 92\n",
            "272 = 2 (92) + 88\n",
            "92 = 1 (88) + 4\n",
            "88 = 22 (4) + 0\n",
            "1000 = 1 (637) + 363\n",
            "637 = 1 (363) + 274\n",
            "363 = 1 (274) + 89\n",
            "274 = 3 (89) + 7\n",
            "89 = 12 (7) + 5\n",
            "7 = 1 (5) + 2\n",
            "5 = 2 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (638) + 362\n",
            "638 = 1 (362) + 276\n",
            "362 = 1 (276) + 86\n",
            "276 = 3 (86) + 18\n",
            "86 = 4 (18) + 14\n",
            "18 = 1 (14) + 4\n",
            "14 = 3 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 1 (639) + 361\n",
            "639 = 1 (361) + 278\n",
            "361 = 1 (278) + 83\n",
            "278 = 3 (83) + 29\n",
            "83 = 2 (29) + 25\n",
            "29 = 1 (25) + 4\n",
            "25 = 6 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "1000 = 1 (640) + 360\n",
            "640 = 1 (360) + 280\n",
            "360 = 1 (280) + 80\n",
            "280 = 3 (80) + 40\n",
            "80 = 2 (40) + 0\n",
            "1000 = 1 (641) + 359\n",
            "641 = 1 (359) + 282\n",
            "359 = 1 (282) + 77\n",
            "282 = 3 (77) + 51\n",
            "77 = 1 (51) + 26\n",
            "51 = 1 (26) + 25\n",
            "26 = 1 (25) + 1\n",
            "25 = 25 (1) + 0\n",
            "1000 = 1 (642) + 358\n",
            "642 = 1 (358) + 284\n",
            "358 = 1 (284) + 74\n",
            "284 = 3 (74) + 62\n",
            "74 = 1 (62) + 12\n",
            "62 = 5 (12) + 2\n",
            "12 = 6 (2) + 0\n",
            "1000 = 1 (643) + 357\n",
            "643 = 1 (357) + 286\n",
            "357 = 1 (286) + 71\n",
            "286 = 4 (71) + 2\n",
            "71 = 35 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (644) + 356\n",
            "644 = 1 (356) + 288\n",
            "356 = 1 (288) + 68\n",
            "288 = 4 (68) + 16\n",
            "68 = 4 (16) + 4\n",
            "16 = 4 (4) + 0\n",
            "1000 = 1 (645) + 355\n",
            "645 = 1 (355) + 290\n",
            "355 = 1 (290) + 65\n",
            "290 = 4 (65) + 30\n",
            "65 = 2 (30) + 5\n",
            "30 = 6 (5) + 0\n",
            "1000 = 1 (646) + 354\n",
            "646 = 1 (354) + 292\n",
            "354 = 1 (292) + 62\n",
            "292 = 4 (62) + 44\n",
            "62 = 1 (44) + 18\n",
            "44 = 2 (18) + 8\n",
            "18 = 2 (8) + 2\n",
            "8 = 4 (2) + 0\n",
            "1000 = 1 (647) + 353\n",
            "647 = 1 (353) + 294\n",
            "353 = 1 (294) + 59\n",
            "294 = 4 (59) + 58\n",
            "59 = 1 (58) + 1\n",
            "58 = 58 (1) + 0\n",
            "1000 = 1 (648) + 352\n",
            "648 = 1 (352) + 296\n",
            "352 = 1 (296) + 56\n",
            "296 = 5 (56) + 16\n",
            "56 = 3 (16) + 8\n",
            "16 = 2 (8) + 0\n",
            "1000 = 1 (649) + 351\n",
            "649 = 1 (351) + 298\n",
            "351 = 1 (298) + 53\n",
            "298 = 5 (53) + 33\n",
            "53 = 1 (33) + 20\n",
            "33 = 1 (20) + 13\n",
            "20 = 1 (13) + 7\n",
            "13 = 1 (7) + 6\n",
            "7 = 1 (6) + 1\n",
            "6 = 6 (1) + 0\n",
            "1000 = 1 (650) + 350\n",
            "650 = 1 (350) + 300\n",
            "350 = 1 (300) + 50\n",
            "300 = 6 (50) + 0\n",
            "1000 = 1 (651) + 349\n",
            "651 = 1 (349) + 302\n",
            "349 = 1 (302) + 47\n",
            "302 = 6 (47) + 20\n",
            "47 = 2 (20) + 7\n",
            "20 = 2 (7) + 6\n",
            "7 = 1 (6) + 1\n",
            "6 = 6 (1) + 0\n",
            "1000 = 1 (652) + 348\n",
            "652 = 1 (348) + 304\n",
            "348 = 1 (304) + 44\n",
            "304 = 6 (44) + 40\n",
            "44 = 1 (40) + 4\n",
            "40 = 10 (4) + 0\n",
            "1000 = 1 (653) + 347\n",
            "653 = 1 (347) + 306\n",
            "347 = 1 (306) + 41\n",
            "306 = 7 (41) + 19\n",
            "41 = 2 (19) + 3\n",
            "19 = 6 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "1000 = 1 (654) + 346\n",
            "654 = 1 (346) + 308\n",
            "346 = 1 (308) + 38\n",
            "308 = 8 (38) + 4\n",
            "38 = 9 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 1 (655) + 345\n",
            "655 = 1 (345) + 310\n",
            "345 = 1 (310) + 35\n",
            "310 = 8 (35) + 30\n",
            "35 = 1 (30) + 5\n",
            "30 = 6 (5) + 0\n",
            "1000 = 1 (656) + 344\n",
            "656 = 1 (344) + 312\n",
            "344 = 1 (312) + 32\n",
            "312 = 9 (32) + 24\n",
            "32 = 1 (24) + 8\n",
            "24 = 3 (8) + 0\n",
            "1000 = 1 (657) + 343\n",
            "657 = 1 (343) + 314\n",
            "343 = 1 (314) + 29\n",
            "314 = 10 (29) + 24\n",
            "29 = 1 (24) + 5\n",
            "24 = 4 (5) + 4\n",
            "5 = 1 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "1000 = 1 (658) + 342\n",
            "658 = 1 (342) + 316\n",
            "342 = 1 (316) + 26\n",
            "316 = 12 (26) + 4\n",
            "26 = 6 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 1 (659) + 341\n",
            "659 = 1 (341) + 318\n",
            "341 = 1 (318) + 23\n",
            "318 = 13 (23) + 19\n",
            "23 = 1 (19) + 4\n",
            "19 = 4 (4) + 3\n",
            "4 = 1 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "1000 = 1 (660) + 340\n",
            "660 = 1 (340) + 320\n",
            "340 = 1 (320) + 20\n",
            "320 = 16 (20) + 0\n",
            "1000 = 1 (661) + 339\n",
            "661 = 1 (339) + 322\n",
            "339 = 1 (322) + 17\n",
            "322 = 18 (17) + 16\n",
            "17 = 1 (16) + 1\n",
            "16 = 16 (1) + 0\n",
            "1000 = 1 (662) + 338\n",
            "662 = 1 (338) + 324\n",
            "338 = 1 (324) + 14\n",
            "324 = 23 (14) + 2\n",
            "14 = 7 (2) + 0\n",
            "1000 = 1 (663) + 337\n",
            "663 = 1 (337) + 326\n",
            "337 = 1 (326) + 11\n",
            "326 = 29 (11) + 7\n",
            "11 = 1 (7) + 4\n",
            "7 = 1 (4) + 3\n",
            "4 = 1 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "1000 = 1 (664) + 336\n",
            "664 = 1 (336) + 328\n",
            "336 = 1 (328) + 8\n",
            "328 = 41 (8) + 0\n",
            "1000 = 1 (665) + 335\n",
            "665 = 1 (335) + 330\n",
            "335 = 1 (330) + 5\n",
            "330 = 66 (5) + 0\n",
            "1000 = 1 (666) + 334\n",
            "666 = 1 (334) + 332\n",
            "334 = 1 (332) + 2\n",
            "332 = 166 (2) + 0\n",
            "1000 = 1 (667) + 333\n",
            "667 = 2 (333) + 1\n",
            "333 = 333 (1) + 0\n",
            "1000 = 1 (668) + 332\n",
            "668 = 2 (332) + 4\n",
            "332 = 83 (4) + 0\n",
            "1000 = 1 (669) + 331\n",
            "669 = 2 (331) + 7\n",
            "331 = 47 (7) + 2\n",
            "7 = 3 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (670) + 330\n",
            "670 = 2 (330) + 10\n",
            "330 = 33 (10) + 0\n",
            "1000 = 1 (671) + 329\n",
            "671 = 2 (329) + 13\n",
            "329 = 25 (13) + 4\n",
            "13 = 3 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "1000 = 1 (672) + 328\n",
            "672 = 2 (328) + 16\n",
            "328 = 20 (16) + 8\n",
            "16 = 2 (8) + 0\n",
            "1000 = 1 (673) + 327\n",
            "673 = 2 (327) + 19\n",
            "327 = 17 (19) + 4\n",
            "19 = 4 (4) + 3\n",
            "4 = 1 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "1000 = 1 (674) + 326\n",
            "674 = 2 (326) + 22\n",
            "326 = 14 (22) + 18\n",
            "22 = 1 (18) + 4\n",
            "18 = 4 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 1 (675) + 325\n",
            "675 = 2 (325) + 25\n",
            "325 = 13 (25) + 0\n",
            "1000 = 1 (676) + 324\n",
            "676 = 2 (324) + 28\n",
            "324 = 11 (28) + 16\n",
            "28 = 1 (16) + 12\n",
            "16 = 1 (12) + 4\n",
            "12 = 3 (4) + 0\n",
            "1000 = 1 (677) + 323\n",
            "677 = 2 (323) + 31\n",
            "323 = 10 (31) + 13\n",
            "31 = 2 (13) + 5\n",
            "13 = 2 (5) + 3\n",
            "5 = 1 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (678) + 322\n",
            "678 = 2 (322) + 34\n",
            "322 = 9 (34) + 16\n",
            "34 = 2 (16) + 2\n",
            "16 = 8 (2) + 0\n",
            "1000 = 1 (679) + 321\n",
            "679 = 2 (321) + 37\n",
            "321 = 8 (37) + 25\n",
            "37 = 1 (25) + 12\n",
            "25 = 2 (12) + 1\n",
            "12 = 12 (1) + 0\n",
            "1000 = 1 (680) + 320\n",
            "680 = 2 (320) + 40\n",
            "320 = 8 (40) + 0\n",
            "1000 = 1 (681) + 319\n",
            "681 = 2 (319) + 43\n",
            "319 = 7 (43) + 18\n",
            "43 = 2 (18) + 7\n",
            "18 = 2 (7) + 4\n",
            "7 = 1 (4) + 3\n",
            "4 = 1 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "1000 = 1 (682) + 318\n",
            "682 = 2 (318) + 46\n",
            "318 = 6 (46) + 42\n",
            "46 = 1 (42) + 4\n",
            "42 = 10 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 1 (683) + 317\n",
            "683 = 2 (317) + 49\n",
            "317 = 6 (49) + 23\n",
            "49 = 2 (23) + 3\n",
            "23 = 7 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (684) + 316\n",
            "684 = 2 (316) + 52\n",
            "316 = 6 (52) + 4\n",
            "52 = 13 (4) + 0\n",
            "1000 = 1 (685) + 315\n",
            "685 = 2 (315) + 55\n",
            "315 = 5 (55) + 40\n",
            "55 = 1 (40) + 15\n",
            "40 = 2 (15) + 10\n",
            "15 = 1 (10) + 5\n",
            "10 = 2 (5) + 0\n",
            "1000 = 1 (686) + 314\n",
            "686 = 2 (314) + 58\n",
            "314 = 5 (58) + 24\n",
            "58 = 2 (24) + 10\n",
            "24 = 2 (10) + 4\n",
            "10 = 2 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 1 (687) + 313\n",
            "687 = 2 (313) + 61\n",
            "313 = 5 (61) + 8\n",
            "61 = 7 (8) + 5\n",
            "8 = 1 (5) + 3\n",
            "5 = 1 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (688) + 312\n",
            "688 = 2 (312) + 64\n",
            "312 = 4 (64) + 56\n",
            "64 = 1 (56) + 8\n",
            "56 = 7 (8) + 0\n",
            "1000 = 1 (689) + 311\n",
            "689 = 2 (311) + 67\n",
            "311 = 4 (67) + 43\n",
            "67 = 1 (43) + 24\n",
            "43 = 1 (24) + 19\n",
            "24 = 1 (19) + 5\n",
            "19 = 3 (5) + 4\n",
            "5 = 1 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "1000 = 1 (690) + 310\n",
            "690 = 2 (310) + 70\n",
            "310 = 4 (70) + 30\n",
            "70 = 2 (30) + 10\n",
            "30 = 3 (10) + 0\n",
            "1000 = 1 (691) + 309\n",
            "691 = 2 (309) + 73\n",
            "309 = 4 (73) + 17\n",
            "73 = 4 (17) + 5\n",
            "17 = 3 (5) + 2\n",
            "5 = 2 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (692) + 308\n",
            "692 = 2 (308) + 76\n",
            "308 = 4 (76) + 4\n",
            "76 = 19 (4) + 0\n",
            "1000 = 1 (693) + 307\n",
            "693 = 2 (307) + 79\n",
            "307 = 3 (79) + 70\n",
            "79 = 1 (70) + 9\n",
            "70 = 7 (9) + 7\n",
            "9 = 1 (7) + 2\n",
            "7 = 3 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (694) + 306\n",
            "694 = 2 (306) + 82\n",
            "306 = 3 (82) + 60\n",
            "82 = 1 (60) + 22\n",
            "60 = 2 (22) + 16\n",
            "22 = 1 (16) + 6\n",
            "16 = 2 (6) + 4\n",
            "6 = 1 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 1 (695) + 305\n",
            "695 = 2 (305) + 85\n",
            "305 = 3 (85) + 50\n",
            "85 = 1 (50) + 35\n",
            "50 = 1 (35) + 15\n",
            "35 = 2 (15) + 5\n",
            "15 = 3 (5) + 0\n",
            "1000 = 1 (696) + 304\n",
            "696 = 2 (304) + 88\n",
            "304 = 3 (88) + 40\n",
            "88 = 2 (40) + 8\n",
            "40 = 5 (8) + 0\n",
            "1000 = 1 (697) + 303\n",
            "697 = 2 (303) + 91\n",
            "303 = 3 (91) + 30\n",
            "91 = 3 (30) + 1\n",
            "30 = 30 (1) + 0\n",
            "1000 = 1 (698) + 302\n",
            "698 = 2 (302) + 94\n",
            "302 = 3 (94) + 20\n",
            "94 = 4 (20) + 14\n",
            "20 = 1 (14) + 6\n",
            "14 = 2 (6) + 2\n",
            "6 = 3 (2) + 0\n",
            "1000 = 1 (699) + 301\n",
            "699 = 2 (301) + 97\n",
            "301 = 3 (97) + 10\n",
            "97 = 9 (10) + 7\n",
            "10 = 1 (7) + 3\n",
            "7 = 2 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "1000 = 1 (700) + 300\n",
            "700 = 2 (300) + 100\n",
            "300 = 3 (100) + 0\n",
            "1000 = 1 (701) + 299\n",
            "701 = 2 (299) + 103\n",
            "299 = 2 (103) + 93\n",
            "103 = 1 (93) + 10\n",
            "93 = 9 (10) + 3\n",
            "10 = 3 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "1000 = 1 (702) + 298\n",
            "702 = 2 (298) + 106\n",
            "298 = 2 (106) + 86\n",
            "106 = 1 (86) + 20\n",
            "86 = 4 (20) + 6\n",
            "20 = 3 (6) + 2\n",
            "6 = 3 (2) + 0\n",
            "1000 = 1 (703) + 297\n",
            "703 = 2 (297) + 109\n",
            "297 = 2 (109) + 79\n",
            "109 = 1 (79) + 30\n",
            "79 = 2 (30) + 19\n",
            "30 = 1 (19) + 11\n",
            "19 = 1 (11) + 8\n",
            "11 = 1 (8) + 3\n",
            "8 = 2 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (704) + 296\n",
            "704 = 2 (296) + 112\n",
            "296 = 2 (112) + 72\n",
            "112 = 1 (72) + 40\n",
            "72 = 1 (40) + 32\n",
            "40 = 1 (32) + 8\n",
            "32 = 4 (8) + 0\n",
            "1000 = 1 (705) + 295\n",
            "705 = 2 (295) + 115\n",
            "295 = 2 (115) + 65\n",
            "115 = 1 (65) + 50\n",
            "65 = 1 (50) + 15\n",
            "50 = 3 (15) + 5\n",
            "15 = 3 (5) + 0\n",
            "1000 = 1 (706) + 294\n",
            "706 = 2 (294) + 118\n",
            "294 = 2 (118) + 58\n",
            "118 = 2 (58) + 2\n",
            "58 = 29 (2) + 0\n",
            "1000 = 1 (707) + 293\n",
            "707 = 2 (293) + 121\n",
            "293 = 2 (121) + 51\n",
            "121 = 2 (51) + 19\n",
            "51 = 2 (19) + 13\n",
            "19 = 1 (13) + 6\n",
            "13 = 2 (6) + 1\n",
            "6 = 6 (1) + 0\n",
            "1000 = 1 (708) + 292\n",
            "708 = 2 (292) + 124\n",
            "292 = 2 (124) + 44\n",
            "124 = 2 (44) + 36\n",
            "44 = 1 (36) + 8\n",
            "36 = 4 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "1000 = 1 (709) + 291\n",
            "709 = 2 (291) + 127\n",
            "291 = 2 (127) + 37\n",
            "127 = 3 (37) + 16\n",
            "37 = 2 (16) + 5\n",
            "16 = 3 (5) + 1\n",
            "5 = 5 (1) + 0\n",
            "1000 = 1 (710) + 290\n",
            "710 = 2 (290) + 130\n",
            "290 = 2 (130) + 30\n",
            "130 = 4 (30) + 10\n",
            "30 = 3 (10) + 0\n",
            "1000 = 1 (711) + 289\n",
            "711 = 2 (289) + 133\n",
            "289 = 2 (133) + 23\n",
            "133 = 5 (23) + 18\n",
            "23 = 1 (18) + 5\n",
            "18 = 3 (5) + 3\n",
            "5 = 1 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (712) + 288\n",
            "712 = 2 (288) + 136\n",
            "288 = 2 (136) + 16\n",
            "136 = 8 (16) + 8\n",
            "16 = 2 (8) + 0\n",
            "1000 = 1 (713) + 287\n",
            "713 = 2 (287) + 139\n",
            "287 = 2 (139) + 9\n",
            "139 = 15 (9) + 4\n",
            "9 = 2 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "1000 = 1 (714) + 286\n",
            "714 = 2 (286) + 142\n",
            "286 = 2 (142) + 2\n",
            "142 = 71 (2) + 0\n",
            "1000 = 1 (715) + 285\n",
            "715 = 2 (285) + 145\n",
            "285 = 1 (145) + 140\n",
            "145 = 1 (140) + 5\n",
            "140 = 28 (5) + 0\n",
            "1000 = 1 (716) + 284\n",
            "716 = 2 (284) + 148\n",
            "284 = 1 (148) + 136\n",
            "148 = 1 (136) + 12\n",
            "136 = 11 (12) + 4\n",
            "12 = 3 (4) + 0\n",
            "1000 = 1 (717) + 283\n",
            "717 = 2 (283) + 151\n",
            "283 = 1 (151) + 132\n",
            "151 = 1 (132) + 19\n",
            "132 = 6 (19) + 18\n",
            "19 = 1 (18) + 1\n",
            "18 = 18 (1) + 0\n",
            "1000 = 1 (718) + 282\n",
            "718 = 2 (282) + 154\n",
            "282 = 1 (154) + 128\n",
            "154 = 1 (128) + 26\n",
            "128 = 4 (26) + 24\n",
            "26 = 1 (24) + 2\n",
            "24 = 12 (2) + 0\n",
            "1000 = 1 (719) + 281\n",
            "719 = 2 (281) + 157\n",
            "281 = 1 (157) + 124\n",
            "157 = 1 (124) + 33\n",
            "124 = 3 (33) + 25\n",
            "33 = 1 (25) + 8\n",
            "25 = 3 (8) + 1\n",
            "8 = 8 (1) + 0\n",
            "1000 = 1 (720) + 280\n",
            "720 = 2 (280) + 160\n",
            "280 = 1 (160) + 120\n",
            "160 = 1 (120) + 40\n",
            "120 = 3 (40) + 0\n",
            "1000 = 1 (721) + 279\n",
            "721 = 2 (279) + 163\n",
            "279 = 1 (163) + 116\n",
            "163 = 1 (116) + 47\n",
            "116 = 2 (47) + 22\n",
            "47 = 2 (22) + 3\n",
            "22 = 7 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "1000 = 1 (722) + 278\n",
            "722 = 2 (278) + 166\n",
            "278 = 1 (166) + 112\n",
            "166 = 1 (112) + 54\n",
            "112 = 2 (54) + 4\n",
            "54 = 13 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 1 (723) + 277\n",
            "723 = 2 (277) + 169\n",
            "277 = 1 (169) + 108\n",
            "169 = 1 (108) + 61\n",
            "108 = 1 (61) + 47\n",
            "61 = 1 (47) + 14\n",
            "47 = 3 (14) + 5\n",
            "14 = 2 (5) + 4\n",
            "5 = 1 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "1000 = 1 (724) + 276\n",
            "724 = 2 (276) + 172\n",
            "276 = 1 (172) + 104\n",
            "172 = 1 (104) + 68\n",
            "104 = 1 (68) + 36\n",
            "68 = 1 (36) + 32\n",
            "36 = 1 (32) + 4\n",
            "32 = 8 (4) + 0\n",
            "1000 = 1 (725) + 275\n",
            "725 = 2 (275) + 175\n",
            "275 = 1 (175) + 100\n",
            "175 = 1 (100) + 75\n",
            "100 = 1 (75) + 25\n",
            "75 = 3 (25) + 0\n",
            "1000 = 1 (726) + 274\n",
            "726 = 2 (274) + 178\n",
            "274 = 1 (178) + 96\n",
            "178 = 1 (96) + 82\n",
            "96 = 1 (82) + 14\n",
            "82 = 5 (14) + 12\n",
            "14 = 1 (12) + 2\n",
            "12 = 6 (2) + 0\n",
            "1000 = 1 (727) + 273\n",
            "727 = 2 (273) + 181\n",
            "273 = 1 (181) + 92\n",
            "181 = 1 (92) + 89\n",
            "92 = 1 (89) + 3\n",
            "89 = 29 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (728) + 272\n",
            "728 = 2 (272) + 184\n",
            "272 = 1 (184) + 88\n",
            "184 = 2 (88) + 8\n",
            "88 = 11 (8) + 0\n",
            "1000 = 1 (729) + 271\n",
            "729 = 2 (271) + 187\n",
            "271 = 1 (187) + 84\n",
            "187 = 2 (84) + 19\n",
            "84 = 4 (19) + 8\n",
            "19 = 2 (8) + 3\n",
            "8 = 2 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (730) + 270\n",
            "730 = 2 (270) + 190\n",
            "270 = 1 (190) + 80\n",
            "190 = 2 (80) + 30\n",
            "80 = 2 (30) + 20\n",
            "30 = 1 (20) + 10\n",
            "20 = 2 (10) + 0\n",
            "1000 = 1 (731) + 269\n",
            "731 = 2 (269) + 193\n",
            "269 = 1 (193) + 76\n",
            "193 = 2 (76) + 41\n",
            "76 = 1 (41) + 35\n",
            "41 = 1 (35) + 6\n",
            "35 = 5 (6) + 5\n",
            "6 = 1 (5) + 1\n",
            "5 = 5 (1) + 0\n",
            "1000 = 1 (732) + 268\n",
            "732 = 2 (268) + 196\n",
            "268 = 1 (196) + 72\n",
            "196 = 2 (72) + 52\n",
            "72 = 1 (52) + 20\n",
            "52 = 2 (20) + 12\n",
            "20 = 1 (12) + 8\n",
            "12 = 1 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "1000 = 1 (733) + 267\n",
            "733 = 2 (267) + 199\n",
            "267 = 1 (199) + 68\n",
            "199 = 2 (68) + 63\n",
            "68 = 1 (63) + 5\n",
            "63 = 12 (5) + 3\n",
            "5 = 1 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (734) + 266\n",
            "734 = 2 (266) + 202\n",
            "266 = 1 (202) + 64\n",
            "202 = 3 (64) + 10\n",
            "64 = 6 (10) + 4\n",
            "10 = 2 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 1 (735) + 265\n",
            "735 = 2 (265) + 205\n",
            "265 = 1 (205) + 60\n",
            "205 = 3 (60) + 25\n",
            "60 = 2 (25) + 10\n",
            "25 = 2 (10) + 5\n",
            "10 = 2 (5) + 0\n",
            "1000 = 1 (736) + 264\n",
            "736 = 2 (264) + 208\n",
            "264 = 1 (208) + 56\n",
            "208 = 3 (56) + 40\n",
            "56 = 1 (40) + 16\n",
            "40 = 2 (16) + 8\n",
            "16 = 2 (8) + 0\n",
            "1000 = 1 (737) + 263\n",
            "737 = 2 (263) + 211\n",
            "263 = 1 (211) + 52\n",
            "211 = 4 (52) + 3\n",
            "52 = 17 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "1000 = 1 (738) + 262\n",
            "738 = 2 (262) + 214\n",
            "262 = 1 (214) + 48\n",
            "214 = 4 (48) + 22\n",
            "48 = 2 (22) + 4\n",
            "22 = 5 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 1 (739) + 261\n",
            "739 = 2 (261) + 217\n",
            "261 = 1 (217) + 44\n",
            "217 = 4 (44) + 41\n",
            "44 = 1 (41) + 3\n",
            "41 = 13 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (740) + 260\n",
            "740 = 2 (260) + 220\n",
            "260 = 1 (220) + 40\n",
            "220 = 5 (40) + 20\n",
            "40 = 2 (20) + 0\n",
            "1000 = 1 (741) + 259\n",
            "741 = 2 (259) + 223\n",
            "259 = 1 (223) + 36\n",
            "223 = 6 (36) + 7\n",
            "36 = 5 (7) + 1\n",
            "7 = 7 (1) + 0\n",
            "1000 = 1 (742) + 258\n",
            "742 = 2 (258) + 226\n",
            "258 = 1 (226) + 32\n",
            "226 = 7 (32) + 2\n",
            "32 = 16 (2) + 0\n",
            "1000 = 1 (743) + 257\n",
            "743 = 2 (257) + 229\n",
            "257 = 1 (229) + 28\n",
            "229 = 8 (28) + 5\n",
            "28 = 5 (5) + 3\n",
            "5 = 1 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (744) + 256\n",
            "744 = 2 (256) + 232\n",
            "256 = 1 (232) + 24\n",
            "232 = 9 (24) + 16\n",
            "24 = 1 (16) + 8\n",
            "16 = 2 (8) + 0\n",
            "1000 = 1 (745) + 255\n",
            "745 = 2 (255) + 235\n",
            "255 = 1 (235) + 20\n",
            "235 = 11 (20) + 15\n",
            "20 = 1 (15) + 5\n",
            "15 = 3 (5) + 0\n",
            "1000 = 1 (746) + 254\n",
            "746 = 2 (254) + 238\n",
            "254 = 1 (238) + 16\n",
            "238 = 14 (16) + 14\n",
            "16 = 1 (14) + 2\n",
            "14 = 7 (2) + 0\n",
            "1000 = 1 (747) + 253\n",
            "747 = 2 (253) + 241\n",
            "253 = 1 (241) + 12\n",
            "241 = 20 (12) + 1\n",
            "12 = 12 (1) + 0\n",
            "1000 = 1 (748) + 252\n",
            "748 = 2 (252) + 244\n",
            "252 = 1 (244) + 8\n",
            "244 = 30 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "1000 = 1 (749) + 251\n",
            "749 = 2 (251) + 247\n",
            "251 = 1 (247) + 4\n",
            "247 = 61 (4) + 3\n",
            "4 = 1 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "1000 = 1 (750) + 250\n",
            "750 = 3 (250) + 0\n",
            "1000 = 1 (751) + 249\n",
            "751 = 3 (249) + 4\n",
            "249 = 62 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "1000 = 1 (752) + 248\n",
            "752 = 3 (248) + 8\n",
            "248 = 31 (8) + 0\n",
            "1000 = 1 (753) + 247\n",
            "753 = 3 (247) + 12\n",
            "247 = 20 (12) + 7\n",
            "12 = 1 (7) + 5\n",
            "7 = 1 (5) + 2\n",
            "5 = 2 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (754) + 246\n",
            "754 = 3 (246) + 16\n",
            "246 = 15 (16) + 6\n",
            "16 = 2 (6) + 4\n",
            "6 = 1 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 1 (755) + 245\n",
            "755 = 3 (245) + 20\n",
            "245 = 12 (20) + 5\n",
            "20 = 4 (5) + 0\n",
            "1000 = 1 (756) + 244\n",
            "756 = 3 (244) + 24\n",
            "244 = 10 (24) + 4\n",
            "24 = 6 (4) + 0\n",
            "1000 = 1 (757) + 243\n",
            "757 = 3 (243) + 28\n",
            "243 = 8 (28) + 19\n",
            "28 = 1 (19) + 9\n",
            "19 = 2 (9) + 1\n",
            "9 = 9 (1) + 0\n",
            "1000 = 1 (758) + 242\n",
            "758 = 3 (242) + 32\n",
            "242 = 7 (32) + 18\n",
            "32 = 1 (18) + 14\n",
            "18 = 1 (14) + 4\n",
            "14 = 3 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 1 (759) + 241\n",
            "759 = 3 (241) + 36\n",
            "241 = 6 (36) + 25\n",
            "36 = 1 (25) + 11\n",
            "25 = 2 (11) + 3\n",
            "11 = 3 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (760) + 240\n",
            "760 = 3 (240) + 40\n",
            "240 = 6 (40) + 0\n",
            "1000 = 1 (761) + 239\n",
            "761 = 3 (239) + 44\n",
            "239 = 5 (44) + 19\n",
            "44 = 2 (19) + 6\n",
            "19 = 3 (6) + 1\n",
            "6 = 6 (1) + 0\n",
            "1000 = 1 (762) + 238\n",
            "762 = 3 (238) + 48\n",
            "238 = 4 (48) + 46\n",
            "48 = 1 (46) + 2\n",
            "46 = 23 (2) + 0\n",
            "1000 = 1 (763) + 237\n",
            "763 = 3 (237) + 52\n",
            "237 = 4 (52) + 29\n",
            "52 = 1 (29) + 23\n",
            "29 = 1 (23) + 6\n",
            "23 = 3 (6) + 5\n",
            "6 = 1 (5) + 1\n",
            "5 = 5 (1) + 0\n",
            "1000 = 1 (764) + 236\n",
            "764 = 3 (236) + 56\n",
            "236 = 4 (56) + 12\n",
            "56 = 4 (12) + 8\n",
            "12 = 1 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "1000 = 1 (765) + 235\n",
            "765 = 3 (235) + 60\n",
            "235 = 3 (60) + 55\n",
            "60 = 1 (55) + 5\n",
            "55 = 11 (5) + 0\n",
            "1000 = 1 (766) + 234\n",
            "766 = 3 (234) + 64\n",
            "234 = 3 (64) + 42\n",
            "64 = 1 (42) + 22\n",
            "42 = 1 (22) + 20\n",
            "22 = 1 (20) + 2\n",
            "20 = 10 (2) + 0\n",
            "1000 = 1 (767) + 233\n",
            "767 = 3 (233) + 68\n",
            "233 = 3 (68) + 29\n",
            "68 = 2 (29) + 10\n",
            "29 = 2 (10) + 9\n",
            "10 = 1 (9) + 1\n",
            "9 = 9 (1) + 0\n",
            "1000 = 1 (768) + 232\n",
            "768 = 3 (232) + 72\n",
            "232 = 3 (72) + 16\n",
            "72 = 4 (16) + 8\n",
            "16 = 2 (8) + 0\n",
            "1000 = 1 (769) + 231\n",
            "769 = 3 (231) + 76\n",
            "231 = 3 (76) + 3\n",
            "76 = 25 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "1000 = 1 (770) + 230\n",
            "770 = 3 (230) + 80\n",
            "230 = 2 (80) + 70\n",
            "80 = 1 (70) + 10\n",
            "70 = 7 (10) + 0\n",
            "1000 = 1 (771) + 229\n",
            "771 = 3 (229) + 84\n",
            "229 = 2 (84) + 61\n",
            "84 = 1 (61) + 23\n",
            "61 = 2 (23) + 15\n",
            "23 = 1 (15) + 8\n",
            "15 = 1 (8) + 7\n",
            "8 = 1 (7) + 1\n",
            "7 = 7 (1) + 0\n",
            "1000 = 1 (772) + 228\n",
            "772 = 3 (228) + 88\n",
            "228 = 2 (88) + 52\n",
            "88 = 1 (52) + 36\n",
            "52 = 1 (36) + 16\n",
            "36 = 2 (16) + 4\n",
            "16 = 4 (4) + 0\n",
            "1000 = 1 (773) + 227\n",
            "773 = 3 (227) + 92\n",
            "227 = 2 (92) + 43\n",
            "92 = 2 (43) + 6\n",
            "43 = 7 (6) + 1\n",
            "6 = 6 (1) + 0\n",
            "1000 = 1 (774) + 226\n",
            "774 = 3 (226) + 96\n",
            "226 = 2 (96) + 34\n",
            "96 = 2 (34) + 28\n",
            "34 = 1 (28) + 6\n",
            "28 = 4 (6) + 4\n",
            "6 = 1 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 1 (775) + 225\n",
            "775 = 3 (225) + 100\n",
            "225 = 2 (100) + 25\n",
            "100 = 4 (25) + 0\n",
            "1000 = 1 (776) + 224\n",
            "776 = 3 (224) + 104\n",
            "224 = 2 (104) + 16\n",
            "104 = 6 (16) + 8\n",
            "16 = 2 (8) + 0\n",
            "1000 = 1 (777) + 223\n",
            "777 = 3 (223) + 108\n",
            "223 = 2 (108) + 7\n",
            "108 = 15 (7) + 3\n",
            "7 = 2 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "1000 = 1 (778) + 222\n",
            "778 = 3 (222) + 112\n",
            "222 = 1 (112) + 110\n",
            "112 = 1 (110) + 2\n",
            "110 = 55 (2) + 0\n",
            "1000 = 1 (779) + 221\n",
            "779 = 3 (221) + 116\n",
            "221 = 1 (116) + 105\n",
            "116 = 1 (105) + 11\n",
            "105 = 9 (11) + 6\n",
            "11 = 1 (6) + 5\n",
            "6 = 1 (5) + 1\n",
            "5 = 5 (1) + 0\n",
            "1000 = 1 (780) + 220\n",
            "780 = 3 (220) + 120\n",
            "220 = 1 (120) + 100\n",
            "120 = 1 (100) + 20\n",
            "100 = 5 (20) + 0\n",
            "1000 = 1 (781) + 219\n",
            "781 = 3 (219) + 124\n",
            "219 = 1 (124) + 95\n",
            "124 = 1 (95) + 29\n",
            "95 = 3 (29) + 8\n",
            "29 = 3 (8) + 5\n",
            "8 = 1 (5) + 3\n",
            "5 = 1 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (782) + 218\n",
            "782 = 3 (218) + 128\n",
            "218 = 1 (128) + 90\n",
            "128 = 1 (90) + 38\n",
            "90 = 2 (38) + 14\n",
            "38 = 2 (14) + 10\n",
            "14 = 1 (10) + 4\n",
            "10 = 2 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 1 (783) + 217\n",
            "783 = 3 (217) + 132\n",
            "217 = 1 (132) + 85\n",
            "132 = 1 (85) + 47\n",
            "85 = 1 (47) + 38\n",
            "47 = 1 (38) + 9\n",
            "38 = 4 (9) + 2\n",
            "9 = 4 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (784) + 216\n",
            "784 = 3 (216) + 136\n",
            "216 = 1 (136) + 80\n",
            "136 = 1 (80) + 56\n",
            "80 = 1 (56) + 24\n",
            "56 = 2 (24) + 8\n",
            "24 = 3 (8) + 0\n",
            "1000 = 1 (785) + 215\n",
            "785 = 3 (215) + 140\n",
            "215 = 1 (140) + 75\n",
            "140 = 1 (75) + 65\n",
            "75 = 1 (65) + 10\n",
            "65 = 6 (10) + 5\n",
            "10 = 2 (5) + 0\n",
            "1000 = 1 (786) + 214\n",
            "786 = 3 (214) + 144\n",
            "214 = 1 (144) + 70\n",
            "144 = 2 (70) + 4\n",
            "70 = 17 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 1 (787) + 213\n",
            "787 = 3 (213) + 148\n",
            "213 = 1 (148) + 65\n",
            "148 = 2 (65) + 18\n",
            "65 = 3 (18) + 11\n",
            "18 = 1 (11) + 7\n",
            "11 = 1 (7) + 4\n",
            "7 = 1 (4) + 3\n",
            "4 = 1 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "1000 = 1 (788) + 212\n",
            "788 = 3 (212) + 152\n",
            "212 = 1 (152) + 60\n",
            "152 = 2 (60) + 32\n",
            "60 = 1 (32) + 28\n",
            "32 = 1 (28) + 4\n",
            "28 = 7 (4) + 0\n",
            "1000 = 1 (789) + 211\n",
            "789 = 3 (211) + 156\n",
            "211 = 1 (156) + 55\n",
            "156 = 2 (55) + 46\n",
            "55 = 1 (46) + 9\n",
            "46 = 5 (9) + 1\n",
            "9 = 9 (1) + 0\n",
            "1000 = 1 (790) + 210\n",
            "790 = 3 (210) + 160\n",
            "210 = 1 (160) + 50\n",
            "160 = 3 (50) + 10\n",
            "50 = 5 (10) + 0\n",
            "1000 = 1 (791) + 209\n",
            "791 = 3 (209) + 164\n",
            "209 = 1 (164) + 45\n",
            "164 = 3 (45) + 29\n",
            "45 = 1 (29) + 16\n",
            "29 = 1 (16) + 13\n",
            "16 = 1 (13) + 3\n",
            "13 = 4 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "1000 = 1 (792) + 208\n",
            "792 = 3 (208) + 168\n",
            "208 = 1 (168) + 40\n",
            "168 = 4 (40) + 8\n",
            "40 = 5 (8) + 0\n",
            "1000 = 1 (793) + 207\n",
            "793 = 3 (207) + 172\n",
            "207 = 1 (172) + 35\n",
            "172 = 4 (35) + 32\n",
            "35 = 1 (32) + 3\n",
            "32 = 10 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (794) + 206\n",
            "794 = 3 (206) + 176\n",
            "206 = 1 (176) + 30\n",
            "176 = 5 (30) + 26\n",
            "30 = 1 (26) + 4\n",
            "26 = 6 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 1 (795) + 205\n",
            "795 = 3 (205) + 180\n",
            "205 = 1 (180) + 25\n",
            "180 = 7 (25) + 5\n",
            "25 = 5 (5) + 0\n",
            "1000 = 1 (796) + 204\n",
            "796 = 3 (204) + 184\n",
            "204 = 1 (184) + 20\n",
            "184 = 9 (20) + 4\n",
            "20 = 5 (4) + 0\n",
            "1000 = 1 (797) + 203\n",
            "797 = 3 (203) + 188\n",
            "203 = 1 (188) + 15\n",
            "188 = 12 (15) + 8\n",
            "15 = 1 (8) + 7\n",
            "8 = 1 (7) + 1\n",
            "7 = 7 (1) + 0\n",
            "1000 = 1 (798) + 202\n",
            "798 = 3 (202) + 192\n",
            "202 = 1 (192) + 10\n",
            "192 = 19 (10) + 2\n",
            "10 = 5 (2) + 0\n",
            "1000 = 1 (799) + 201\n",
            "799 = 3 (201) + 196\n",
            "201 = 1 (196) + 5\n",
            "196 = 39 (5) + 1\n",
            "5 = 5 (1) + 0\n",
            "1000 = 1 (800) + 200\n",
            "800 = 4 (200) + 0\n",
            "1000 = 1 (801) + 199\n",
            "801 = 4 (199) + 5\n",
            "199 = 39 (5) + 4\n",
            "5 = 1 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "1000 = 1 (802) + 198\n",
            "802 = 4 (198) + 10\n",
            "198 = 19 (10) + 8\n",
            "10 = 1 (8) + 2\n",
            "8 = 4 (2) + 0\n",
            "1000 = 1 (803) + 197\n",
            "803 = 4 (197) + 15\n",
            "197 = 13 (15) + 2\n",
            "15 = 7 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (804) + 196\n",
            "804 = 4 (196) + 20\n",
            "196 = 9 (20) + 16\n",
            "20 = 1 (16) + 4\n",
            "16 = 4 (4) + 0\n",
            "1000 = 1 (805) + 195\n",
            "805 = 4 (195) + 25\n",
            "195 = 7 (25) + 20\n",
            "25 = 1 (20) + 5\n",
            "20 = 4 (5) + 0\n",
            "1000 = 1 (806) + 194\n",
            "806 = 4 (194) + 30\n",
            "194 = 6 (30) + 14\n",
            "30 = 2 (14) + 2\n",
            "14 = 7 (2) + 0\n",
            "1000 = 1 (807) + 193\n",
            "807 = 4 (193) + 35\n",
            "193 = 5 (35) + 18\n",
            "35 = 1 (18) + 17\n",
            "18 = 1 (17) + 1\n",
            "17 = 17 (1) + 0\n",
            "1000 = 1 (808) + 192\n",
            "808 = 4 (192) + 40\n",
            "192 = 4 (40) + 32\n",
            "40 = 1 (32) + 8\n",
            "32 = 4 (8) + 0\n",
            "1000 = 1 (809) + 191\n",
            "809 = 4 (191) + 45\n",
            "191 = 4 (45) + 11\n",
            "45 = 4 (11) + 1\n",
            "11 = 11 (1) + 0\n",
            "1000 = 1 (810) + 190\n",
            "810 = 4 (190) + 50\n",
            "190 = 3 (50) + 40\n",
            "50 = 1 (40) + 10\n",
            "40 = 4 (10) + 0\n",
            "1000 = 1 (811) + 189\n",
            "811 = 4 (189) + 55\n",
            "189 = 3 (55) + 24\n",
            "55 = 2 (24) + 7\n",
            "24 = 3 (7) + 3\n",
            "7 = 2 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "1000 = 1 (812) + 188\n",
            "812 = 4 (188) + 60\n",
            "188 = 3 (60) + 8\n",
            "60 = 7 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "1000 = 1 (813) + 187\n",
            "813 = 4 (187) + 65\n",
            "187 = 2 (65) + 57\n",
            "65 = 1 (57) + 8\n",
            "57 = 7 (8) + 1\n",
            "8 = 8 (1) + 0\n",
            "1000 = 1 (814) + 186\n",
            "814 = 4 (186) + 70\n",
            "186 = 2 (70) + 46\n",
            "70 = 1 (46) + 24\n",
            "46 = 1 (24) + 22\n",
            "24 = 1 (22) + 2\n",
            "22 = 11 (2) + 0\n",
            "1000 = 1 (815) + 185\n",
            "815 = 4 (185) + 75\n",
            "185 = 2 (75) + 35\n",
            "75 = 2 (35) + 5\n",
            "35 = 7 (5) + 0\n",
            "1000 = 1 (816) + 184\n",
            "816 = 4 (184) + 80\n",
            "184 = 2 (80) + 24\n",
            "80 = 3 (24) + 8\n",
            "24 = 3 (8) + 0\n",
            "1000 = 1 (817) + 183\n",
            "817 = 4 (183) + 85\n",
            "183 = 2 (85) + 13\n",
            "85 = 6 (13) + 7\n",
            "13 = 1 (7) + 6\n",
            "7 = 1 (6) + 1\n",
            "6 = 6 (1) + 0\n",
            "1000 = 1 (818) + 182\n",
            "818 = 4 (182) + 90\n",
            "182 = 2 (90) + 2\n",
            "90 = 45 (2) + 0\n",
            "1000 = 1 (819) + 181\n",
            "819 = 4 (181) + 95\n",
            "181 = 1 (95) + 86\n",
            "95 = 1 (86) + 9\n",
            "86 = 9 (9) + 5\n",
            "9 = 1 (5) + 4\n",
            "5 = 1 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "1000 = 1 (820) + 180\n",
            "820 = 4 (180) + 100\n",
            "180 = 1 (100) + 80\n",
            "100 = 1 (80) + 20\n",
            "80 = 4 (20) + 0\n",
            "1000 = 1 (821) + 179\n",
            "821 = 4 (179) + 105\n",
            "179 = 1 (105) + 74\n",
            "105 = 1 (74) + 31\n",
            "74 = 2 (31) + 12\n",
            "31 = 2 (12) + 7\n",
            "12 = 1 (7) + 5\n",
            "7 = 1 (5) + 2\n",
            "5 = 2 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (822) + 178\n",
            "822 = 4 (178) + 110\n",
            "178 = 1 (110) + 68\n",
            "110 = 1 (68) + 42\n",
            "68 = 1 (42) + 26\n",
            "42 = 1 (26) + 16\n",
            "26 = 1 (16) + 10\n",
            "16 = 1 (10) + 6\n",
            "10 = 1 (6) + 4\n",
            "6 = 1 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 1 (823) + 177\n",
            "823 = 4 (177) + 115\n",
            "177 = 1 (115) + 62\n",
            "115 = 1 (62) + 53\n",
            "62 = 1 (53) + 9\n",
            "53 = 5 (9) + 8\n",
            "9 = 1 (8) + 1\n",
            "8 = 8 (1) + 0\n",
            "1000 = 1 (824) + 176\n",
            "824 = 4 (176) + 120\n",
            "176 = 1 (120) + 56\n",
            "120 = 2 (56) + 8\n",
            "56 = 7 (8) + 0\n",
            "1000 = 1 (825) + 175\n",
            "825 = 4 (175) + 125\n",
            "175 = 1 (125) + 50\n",
            "125 = 2 (50) + 25\n",
            "50 = 2 (25) + 0\n",
            "1000 = 1 (826) + 174\n",
            "826 = 4 (174) + 130\n",
            "174 = 1 (130) + 44\n",
            "130 = 2 (44) + 42\n",
            "44 = 1 (42) + 2\n",
            "42 = 21 (2) + 0\n",
            "1000 = 1 (827) + 173\n",
            "827 = 4 (173) + 135\n",
            "173 = 1 (135) + 38\n",
            "135 = 3 (38) + 21\n",
            "38 = 1 (21) + 17\n",
            "21 = 1 (17) + 4\n",
            "17 = 4 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "1000 = 1 (828) + 172\n",
            "828 = 4 (172) + 140\n",
            "172 = 1 (140) + 32\n",
            "140 = 4 (32) + 12\n",
            "32 = 2 (12) + 8\n",
            "12 = 1 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "1000 = 1 (829) + 171\n",
            "829 = 4 (171) + 145\n",
            "171 = 1 (145) + 26\n",
            "145 = 5 (26) + 15\n",
            "26 = 1 (15) + 11\n",
            "15 = 1 (11) + 4\n",
            "11 = 2 (4) + 3\n",
            "4 = 1 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "1000 = 1 (830) + 170\n",
            "830 = 4 (170) + 150\n",
            "170 = 1 (150) + 20\n",
            "150 = 7 (20) + 10\n",
            "20 = 2 (10) + 0\n",
            "1000 = 1 (831) + 169\n",
            "831 = 4 (169) + 155\n",
            "169 = 1 (155) + 14\n",
            "155 = 11 (14) + 1\n",
            "14 = 14 (1) + 0\n",
            "1000 = 1 (832) + 168\n",
            "832 = 4 (168) + 160\n",
            "168 = 1 (160) + 8\n",
            "160 = 20 (8) + 0\n",
            "1000 = 1 (833) + 167\n",
            "833 = 4 (167) + 165\n",
            "167 = 1 (165) + 2\n",
            "165 = 82 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (834) + 166\n",
            "834 = 5 (166) + 4\n",
            "166 = 41 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 1 (835) + 165\n",
            "835 = 5 (165) + 10\n",
            "165 = 16 (10) + 5\n",
            "10 = 2 (5) + 0\n",
            "1000 = 1 (836) + 164\n",
            "836 = 5 (164) + 16\n",
            "164 = 10 (16) + 4\n",
            "16 = 4 (4) + 0\n",
            "1000 = 1 (837) + 163\n",
            "837 = 5 (163) + 22\n",
            "163 = 7 (22) + 9\n",
            "22 = 2 (9) + 4\n",
            "9 = 2 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "1000 = 1 (838) + 162\n",
            "838 = 5 (162) + 28\n",
            "162 = 5 (28) + 22\n",
            "28 = 1 (22) + 6\n",
            "22 = 3 (6) + 4\n",
            "6 = 1 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 1 (839) + 161\n",
            "839 = 5 (161) + 34\n",
            "161 = 4 (34) + 25\n",
            "34 = 1 (25) + 9\n",
            "25 = 2 (9) + 7\n",
            "9 = 1 (7) + 2\n",
            "7 = 3 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (840) + 160\n",
            "840 = 5 (160) + 40\n",
            "160 = 4 (40) + 0\n",
            "1000 = 1 (841) + 159\n",
            "841 = 5 (159) + 46\n",
            "159 = 3 (46) + 21\n",
            "46 = 2 (21) + 4\n",
            "21 = 5 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "1000 = 1 (842) + 158\n",
            "842 = 5 (158) + 52\n",
            "158 = 3 (52) + 2\n",
            "52 = 26 (2) + 0\n",
            "1000 = 1 (843) + 157\n",
            "843 = 5 (157) + 58\n",
            "157 = 2 (58) + 41\n",
            "58 = 1 (41) + 17\n",
            "41 = 2 (17) + 7\n",
            "17 = 2 (7) + 3\n",
            "7 = 2 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "1000 = 1 (844) + 156\n",
            "844 = 5 (156) + 64\n",
            "156 = 2 (64) + 28\n",
            "64 = 2 (28) + 8\n",
            "28 = 3 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "1000 = 1 (845) + 155\n",
            "845 = 5 (155) + 70\n",
            "155 = 2 (70) + 15\n",
            "70 = 4 (15) + 10\n",
            "15 = 1 (10) + 5\n",
            "10 = 2 (5) + 0\n",
            "1000 = 1 (846) + 154\n",
            "846 = 5 (154) + 76\n",
            "154 = 2 (76) + 2\n",
            "76 = 38 (2) + 0\n",
            "1000 = 1 (847) + 153\n",
            "847 = 5 (153) + 82\n",
            "153 = 1 (82) + 71\n",
            "82 = 1 (71) + 11\n",
            "71 = 6 (11) + 5\n",
            "11 = 2 (5) + 1\n",
            "5 = 5 (1) + 0\n",
            "1000 = 1 (848) + 152\n",
            "848 = 5 (152) + 88\n",
            "152 = 1 (88) + 64\n",
            "88 = 1 (64) + 24\n",
            "64 = 2 (24) + 16\n",
            "24 = 1 (16) + 8\n",
            "16 = 2 (8) + 0\n",
            "1000 = 1 (849) + 151\n",
            "849 = 5 (151) + 94\n",
            "151 = 1 (94) + 57\n",
            "94 = 1 (57) + 37\n",
            "57 = 1 (37) + 20\n",
            "37 = 1 (20) + 17\n",
            "20 = 1 (17) + 3\n",
            "17 = 5 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (850) + 150\n",
            "850 = 5 (150) + 100\n",
            "150 = 1 (100) + 50\n",
            "100 = 2 (50) + 0\n",
            "1000 = 1 (851) + 149\n",
            "851 = 5 (149) + 106\n",
            "149 = 1 (106) + 43\n",
            "106 = 2 (43) + 20\n",
            "43 = 2 (20) + 3\n",
            "20 = 6 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (852) + 148\n",
            "852 = 5 (148) + 112\n",
            "148 = 1 (112) + 36\n",
            "112 = 3 (36) + 4\n",
            "36 = 9 (4) + 0\n",
            "1000 = 1 (853) + 147\n",
            "853 = 5 (147) + 118\n",
            "147 = 1 (118) + 29\n",
            "118 = 4 (29) + 2\n",
            "29 = 14 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (854) + 146\n",
            "854 = 5 (146) + 124\n",
            "146 = 1 (124) + 22\n",
            "124 = 5 (22) + 14\n",
            "22 = 1 (14) + 8\n",
            "14 = 1 (8) + 6\n",
            "8 = 1 (6) + 2\n",
            "6 = 3 (2) + 0\n",
            "1000 = 1 (855) + 145\n",
            "855 = 5 (145) + 130\n",
            "145 = 1 (130) + 15\n",
            "130 = 8 (15) + 10\n",
            "15 = 1 (10) + 5\n",
            "10 = 2 (5) + 0\n",
            "1000 = 1 (856) + 144\n",
            "856 = 5 (144) + 136\n",
            "144 = 1 (136) + 8\n",
            "136 = 17 (8) + 0\n",
            "1000 = 1 (857) + 143\n",
            "857 = 5 (143) + 142\n",
            "143 = 1 (142) + 1\n",
            "142 = 142 (1) + 0\n",
            "1000 = 1 (858) + 142\n",
            "858 = 6 (142) + 6\n",
            "142 = 23 (6) + 4\n",
            "6 = 1 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 1 (859) + 141\n",
            "859 = 6 (141) + 13\n",
            "141 = 10 (13) + 11\n",
            "13 = 1 (11) + 2\n",
            "11 = 5 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (860) + 140\n",
            "860 = 6 (140) + 20\n",
            "140 = 7 (20) + 0\n",
            "1000 = 1 (861) + 139\n",
            "861 = 6 (139) + 27\n",
            "139 = 5 (27) + 4\n",
            "27 = 6 (4) + 3\n",
            "4 = 1 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "1000 = 1 (862) + 138\n",
            "862 = 6 (138) + 34\n",
            "138 = 4 (34) + 2\n",
            "34 = 17 (2) + 0\n",
            "1000 = 1 (863) + 137\n",
            "863 = 6 (137) + 41\n",
            "137 = 3 (41) + 14\n",
            "41 = 2 (14) + 13\n",
            "14 = 1 (13) + 1\n",
            "13 = 13 (1) + 0\n",
            "1000 = 1 (864) + 136\n",
            "864 = 6 (136) + 48\n",
            "136 = 2 (48) + 40\n",
            "48 = 1 (40) + 8\n",
            "40 = 5 (8) + 0\n",
            "1000 = 1 (865) + 135\n",
            "865 = 6 (135) + 55\n",
            "135 = 2 (55) + 25\n",
            "55 = 2 (25) + 5\n",
            "25 = 5 (5) + 0\n",
            "1000 = 1 (866) + 134\n",
            "866 = 6 (134) + 62\n",
            "134 = 2 (62) + 10\n",
            "62 = 6 (10) + 2\n",
            "10 = 5 (2) + 0\n",
            "1000 = 1 (867) + 133\n",
            "867 = 6 (133) + 69\n",
            "133 = 1 (69) + 64\n",
            "69 = 1 (64) + 5\n",
            "64 = 12 (5) + 4\n",
            "5 = 1 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "1000 = 1 (868) + 132\n",
            "868 = 6 (132) + 76\n",
            "132 = 1 (76) + 56\n",
            "76 = 1 (56) + 20\n",
            "56 = 2 (20) + 16\n",
            "20 = 1 (16) + 4\n",
            "16 = 4 (4) + 0\n",
            "1000 = 1 (869) + 131\n",
            "869 = 6 (131) + 83\n",
            "131 = 1 (83) + 48\n",
            "83 = 1 (48) + 35\n",
            "48 = 1 (35) + 13\n",
            "35 = 2 (13) + 9\n",
            "13 = 1 (9) + 4\n",
            "9 = 2 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "1000 = 1 (870) + 130\n",
            "870 = 6 (130) + 90\n",
            "130 = 1 (90) + 40\n",
            "90 = 2 (40) + 10\n",
            "40 = 4 (10) + 0\n",
            "1000 = 1 (871) + 129\n",
            "871 = 6 (129) + 97\n",
            "129 = 1 (97) + 32\n",
            "97 = 3 (32) + 1\n",
            "32 = 32 (1) + 0\n",
            "1000 = 1 (872) + 128\n",
            "872 = 6 (128) + 104\n",
            "128 = 1 (104) + 24\n",
            "104 = 4 (24) + 8\n",
            "24 = 3 (8) + 0\n",
            "1000 = 1 (873) + 127\n",
            "873 = 6 (127) + 111\n",
            "127 = 1 (111) + 16\n",
            "111 = 6 (16) + 15\n",
            "16 = 1 (15) + 1\n",
            "15 = 15 (1) + 0\n",
            "1000 = 1 (874) + 126\n",
            "874 = 6 (126) + 118\n",
            "126 = 1 (118) + 8\n",
            "118 = 14 (8) + 6\n",
            "8 = 1 (6) + 2\n",
            "6 = 3 (2) + 0\n",
            "1000 = 1 (875) + 125\n",
            "875 = 7 (125) + 0\n",
            "1000 = 1 (876) + 124\n",
            "876 = 7 (124) + 8\n",
            "124 = 15 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "1000 = 1 (877) + 123\n",
            "877 = 7 (123) + 16\n",
            "123 = 7 (16) + 11\n",
            "16 = 1 (11) + 5\n",
            "11 = 2 (5) + 1\n",
            "5 = 5 (1) + 0\n",
            "1000 = 1 (878) + 122\n",
            "878 = 7 (122) + 24\n",
            "122 = 5 (24) + 2\n",
            "24 = 12 (2) + 0\n",
            "1000 = 1 (879) + 121\n",
            "879 = 7 (121) + 32\n",
            "121 = 3 (32) + 25\n",
            "32 = 1 (25) + 7\n",
            "25 = 3 (7) + 4\n",
            "7 = 1 (4) + 3\n",
            "4 = 1 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "1000 = 1 (880) + 120\n",
            "880 = 7 (120) + 40\n",
            "120 = 3 (40) + 0\n",
            "1000 = 1 (881) + 119\n",
            "881 = 7 (119) + 48\n",
            "119 = 2 (48) + 23\n",
            "48 = 2 (23) + 2\n",
            "23 = 11 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (882) + 118\n",
            "882 = 7 (118) + 56\n",
            "118 = 2 (56) + 6\n",
            "56 = 9 (6) + 2\n",
            "6 = 3 (2) + 0\n",
            "1000 = 1 (883) + 117\n",
            "883 = 7 (117) + 64\n",
            "117 = 1 (64) + 53\n",
            "64 = 1 (53) + 11\n",
            "53 = 4 (11) + 9\n",
            "11 = 1 (9) + 2\n",
            "9 = 4 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (884) + 116\n",
            "884 = 7 (116) + 72\n",
            "116 = 1 (72) + 44\n",
            "72 = 1 (44) + 28\n",
            "44 = 1 (28) + 16\n",
            "28 = 1 (16) + 12\n",
            "16 = 1 (12) + 4\n",
            "12 = 3 (4) + 0\n",
            "1000 = 1 (885) + 115\n",
            "885 = 7 (115) + 80\n",
            "115 = 1 (80) + 35\n",
            "80 = 2 (35) + 10\n",
            "35 = 3 (10) + 5\n",
            "10 = 2 (5) + 0\n",
            "1000 = 1 (886) + 114\n",
            "886 = 7 (114) + 88\n",
            "114 = 1 (88) + 26\n",
            "88 = 3 (26) + 10\n",
            "26 = 2 (10) + 6\n",
            "10 = 1 (6) + 4\n",
            "6 = 1 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 1 (887) + 113\n",
            "887 = 7 (113) + 96\n",
            "113 = 1 (96) + 17\n",
            "96 = 5 (17) + 11\n",
            "17 = 1 (11) + 6\n",
            "11 = 1 (6) + 5\n",
            "6 = 1 (5) + 1\n",
            "5 = 5 (1) + 0\n",
            "1000 = 1 (888) + 112\n",
            "888 = 7 (112) + 104\n",
            "112 = 1 (104) + 8\n",
            "104 = 13 (8) + 0\n",
            "1000 = 1 (889) + 111\n",
            "889 = 8 (111) + 1\n",
            "111 = 111 (1) + 0\n",
            "1000 = 1 (890) + 110\n",
            "890 = 8 (110) + 10\n",
            "110 = 11 (10) + 0\n",
            "1000 = 1 (891) + 109\n",
            "891 = 8 (109) + 19\n",
            "109 = 5 (19) + 14\n",
            "19 = 1 (14) + 5\n",
            "14 = 2 (5) + 4\n",
            "5 = 1 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "1000 = 1 (892) + 108\n",
            "892 = 8 (108) + 28\n",
            "108 = 3 (28) + 24\n",
            "28 = 1 (24) + 4\n",
            "24 = 6 (4) + 0\n",
            "1000 = 1 (893) + 107\n",
            "893 = 8 (107) + 37\n",
            "107 = 2 (37) + 33\n",
            "37 = 1 (33) + 4\n",
            "33 = 8 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "1000 = 1 (894) + 106\n",
            "894 = 8 (106) + 46\n",
            "106 = 2 (46) + 14\n",
            "46 = 3 (14) + 4\n",
            "14 = 3 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 1 (895) + 105\n",
            "895 = 8 (105) + 55\n",
            "105 = 1 (55) + 50\n",
            "55 = 1 (50) + 5\n",
            "50 = 10 (5) + 0\n",
            "1000 = 1 (896) + 104\n",
            "896 = 8 (104) + 64\n",
            "104 = 1 (64) + 40\n",
            "64 = 1 (40) + 24\n",
            "40 = 1 (24) + 16\n",
            "24 = 1 (16) + 8\n",
            "16 = 2 (8) + 0\n",
            "1000 = 1 (897) + 103\n",
            "897 = 8 (103) + 73\n",
            "103 = 1 (73) + 30\n",
            "73 = 2 (30) + 13\n",
            "30 = 2 (13) + 4\n",
            "13 = 3 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "1000 = 1 (898) + 102\n",
            "898 = 8 (102) + 82\n",
            "102 = 1 (82) + 20\n",
            "82 = 4 (20) + 2\n",
            "20 = 10 (2) + 0\n",
            "1000 = 1 (899) + 101\n",
            "899 = 8 (101) + 91\n",
            "101 = 1 (91) + 10\n",
            "91 = 9 (10) + 1\n",
            "10 = 10 (1) + 0\n",
            "1000 = 1 (900) + 100\n",
            "900 = 9 (100) + 0\n",
            "1000 = 1 (901) + 99\n",
            "901 = 9 (99) + 10\n",
            "99 = 9 (10) + 9\n",
            "10 = 1 (9) + 1\n",
            "9 = 9 (1) + 0\n",
            "1000 = 1 (902) + 98\n",
            "902 = 9 (98) + 20\n",
            "98 = 4 (20) + 18\n",
            "20 = 1 (18) + 2\n",
            "18 = 9 (2) + 0\n",
            "1000 = 1 (903) + 97\n",
            "903 = 9 (97) + 30\n",
            "97 = 3 (30) + 7\n",
            "30 = 4 (7) + 2\n",
            "7 = 3 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (904) + 96\n",
            "904 = 9 (96) + 40\n",
            "96 = 2 (40) + 16\n",
            "40 = 2 (16) + 8\n",
            "16 = 2 (8) + 0\n",
            "1000 = 1 (905) + 95\n",
            "905 = 9 (95) + 50\n",
            "95 = 1 (50) + 45\n",
            "50 = 1 (45) + 5\n",
            "45 = 9 (5) + 0\n",
            "1000 = 1 (906) + 94\n",
            "906 = 9 (94) + 60\n",
            "94 = 1 (60) + 34\n",
            "60 = 1 (34) + 26\n",
            "34 = 1 (26) + 8\n",
            "26 = 3 (8) + 2\n",
            "8 = 4 (2) + 0\n",
            "1000 = 1 (907) + 93\n",
            "907 = 9 (93) + 70\n",
            "93 = 1 (70) + 23\n",
            "70 = 3 (23) + 1\n",
            "23 = 23 (1) + 0\n",
            "1000 = 1 (908) + 92\n",
            "908 = 9 (92) + 80\n",
            "92 = 1 (80) + 12\n",
            "80 = 6 (12) + 8\n",
            "12 = 1 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "1000 = 1 (909) + 91\n",
            "909 = 9 (91) + 90\n",
            "91 = 1 (90) + 1\n",
            "90 = 90 (1) + 0\n",
            "1000 = 1 (910) + 90\n",
            "910 = 10 (90) + 10\n",
            "90 = 9 (10) + 0\n",
            "1000 = 1 (911) + 89\n",
            "911 = 10 (89) + 21\n",
            "89 = 4 (21) + 5\n",
            "21 = 4 (5) + 1\n",
            "5 = 5 (1) + 0\n",
            "1000 = 1 (912) + 88\n",
            "912 = 10 (88) + 32\n",
            "88 = 2 (32) + 24\n",
            "32 = 1 (24) + 8\n",
            "24 = 3 (8) + 0\n",
            "1000 = 1 (913) + 87\n",
            "913 = 10 (87) + 43\n",
            "87 = 2 (43) + 1\n",
            "43 = 43 (1) + 0\n",
            "1000 = 1 (914) + 86\n",
            "914 = 10 (86) + 54\n",
            "86 = 1 (54) + 32\n",
            "54 = 1 (32) + 22\n",
            "32 = 1 (22) + 10\n",
            "22 = 2 (10) + 2\n",
            "10 = 5 (2) + 0\n",
            "1000 = 1 (915) + 85\n",
            "915 = 10 (85) + 65\n",
            "85 = 1 (65) + 20\n",
            "65 = 3 (20) + 5\n",
            "20 = 4 (5) + 0\n",
            "1000 = 1 (916) + 84\n",
            "916 = 10 (84) + 76\n",
            "84 = 1 (76) + 8\n",
            "76 = 9 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "1000 = 1 (917) + 83\n",
            "917 = 11 (83) + 4\n",
            "83 = 20 (4) + 3\n",
            "4 = 1 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "1000 = 1 (918) + 82\n",
            "918 = 11 (82) + 16\n",
            "82 = 5 (16) + 2\n",
            "16 = 8 (2) + 0\n",
            "1000 = 1 (919) + 81\n",
            "919 = 11 (81) + 28\n",
            "81 = 2 (28) + 25\n",
            "28 = 1 (25) + 3\n",
            "25 = 8 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "1000 = 1 (920) + 80\n",
            "920 = 11 (80) + 40\n",
            "80 = 2 (40) + 0\n",
            "1000 = 1 (921) + 79\n",
            "921 = 11 (79) + 52\n",
            "79 = 1 (52) + 27\n",
            "52 = 1 (27) + 25\n",
            "27 = 1 (25) + 2\n",
            "25 = 12 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (922) + 78\n",
            "922 = 11 (78) + 64\n",
            "78 = 1 (64) + 14\n",
            "64 = 4 (14) + 8\n",
            "14 = 1 (8) + 6\n",
            "8 = 1 (6) + 2\n",
            "6 = 3 (2) + 0\n",
            "1000 = 1 (923) + 77\n",
            "923 = 11 (77) + 76\n",
            "77 = 1 (76) + 1\n",
            "76 = 76 (1) + 0\n",
            "1000 = 1 (924) + 76\n",
            "924 = 12 (76) + 12\n",
            "76 = 6 (12) + 4\n",
            "12 = 3 (4) + 0\n",
            "1000 = 1 (925) + 75\n",
            "925 = 12 (75) + 25\n",
            "75 = 3 (25) + 0\n",
            "1000 = 1 (926) + 74\n",
            "926 = 12 (74) + 38\n",
            "74 = 1 (38) + 36\n",
            "38 = 1 (36) + 2\n",
            "36 = 18 (2) + 0\n",
            "1000 = 1 (927) + 73\n",
            "927 = 12 (73) + 51\n",
            "73 = 1 (51) + 22\n",
            "51 = 2 (22) + 7\n",
            "22 = 3 (7) + 1\n",
            "7 = 7 (1) + 0\n",
            "1000 = 1 (928) + 72\n",
            "928 = 12 (72) + 64\n",
            "72 = 1 (64) + 8\n",
            "64 = 8 (8) + 0\n",
            "1000 = 1 (929) + 71\n",
            "929 = 13 (71) + 6\n",
            "71 = 11 (6) + 5\n",
            "6 = 1 (5) + 1\n",
            "5 = 5 (1) + 0\n",
            "1000 = 1 (930) + 70\n",
            "930 = 13 (70) + 20\n",
            "70 = 3 (20) + 10\n",
            "20 = 2 (10) + 0\n",
            "1000 = 1 (931) + 69\n",
            "931 = 13 (69) + 34\n",
            "69 = 2 (34) + 1\n",
            "34 = 34 (1) + 0\n",
            "1000 = 1 (932) + 68\n",
            "932 = 13 (68) + 48\n",
            "68 = 1 (48) + 20\n",
            "48 = 2 (20) + 8\n",
            "20 = 2 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "1000 = 1 (933) + 67\n",
            "933 = 13 (67) + 62\n",
            "67 = 1 (62) + 5\n",
            "62 = 12 (5) + 2\n",
            "5 = 2 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (934) + 66\n",
            "934 = 14 (66) + 10\n",
            "66 = 6 (10) + 6\n",
            "10 = 1 (6) + 4\n",
            "6 = 1 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 1 (935) + 65\n",
            "935 = 14 (65) + 25\n",
            "65 = 2 (25) + 15\n",
            "25 = 1 (15) + 10\n",
            "15 = 1 (10) + 5\n",
            "10 = 2 (5) + 0\n",
            "1000 = 1 (936) + 64\n",
            "936 = 14 (64) + 40\n",
            "64 = 1 (40) + 24\n",
            "40 = 1 (24) + 16\n",
            "24 = 1 (16) + 8\n",
            "16 = 2 (8) + 0\n",
            "1000 = 1 (937) + 63\n",
            "937 = 14 (63) + 55\n",
            "63 = 1 (55) + 8\n",
            "55 = 6 (8) + 7\n",
            "8 = 1 (7) + 1\n",
            "7 = 7 (1) + 0\n",
            "1000 = 1 (938) + 62\n",
            "938 = 15 (62) + 8\n",
            "62 = 7 (8) + 6\n",
            "8 = 1 (6) + 2\n",
            "6 = 3 (2) + 0\n",
            "1000 = 1 (939) + 61\n",
            "939 = 15 (61) + 24\n",
            "61 = 2 (24) + 13\n",
            "24 = 1 (13) + 11\n",
            "13 = 1 (11) + 2\n",
            "11 = 5 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (940) + 60\n",
            "940 = 15 (60) + 40\n",
            "60 = 1 (40) + 20\n",
            "40 = 2 (20) + 0\n",
            "1000 = 1 (941) + 59\n",
            "941 = 15 (59) + 56\n",
            "59 = 1 (56) + 3\n",
            "56 = 18 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (942) + 58\n",
            "942 = 16 (58) + 14\n",
            "58 = 4 (14) + 2\n",
            "14 = 7 (2) + 0\n",
            "1000 = 1 (943) + 57\n",
            "943 = 16 (57) + 31\n",
            "57 = 1 (31) + 26\n",
            "31 = 1 (26) + 5\n",
            "26 = 5 (5) + 1\n",
            "5 = 5 (1) + 0\n",
            "1000 = 1 (944) + 56\n",
            "944 = 16 (56) + 48\n",
            "56 = 1 (48) + 8\n",
            "48 = 6 (8) + 0\n",
            "1000 = 1 (945) + 55\n",
            "945 = 17 (55) + 10\n",
            "55 = 5 (10) + 5\n",
            "10 = 2 (5) + 0\n",
            "1000 = 1 (946) + 54\n",
            "946 = 17 (54) + 28\n",
            "54 = 1 (28) + 26\n",
            "28 = 1 (26) + 2\n",
            "26 = 13 (2) + 0\n",
            "1000 = 1 (947) + 53\n",
            "947 = 17 (53) + 46\n",
            "53 = 1 (46) + 7\n",
            "46 = 6 (7) + 4\n",
            "7 = 1 (4) + 3\n",
            "4 = 1 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "1000 = 1 (948) + 52\n",
            "948 = 18 (52) + 12\n",
            "52 = 4 (12) + 4\n",
            "12 = 3 (4) + 0\n",
            "1000 = 1 (949) + 51\n",
            "949 = 18 (51) + 31\n",
            "51 = 1 (31) + 20\n",
            "31 = 1 (20) + 11\n",
            "20 = 1 (11) + 9\n",
            "11 = 1 (9) + 2\n",
            "9 = 4 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (950) + 50\n",
            "950 = 19 (50) + 0\n",
            "1000 = 1 (951) + 49\n",
            "951 = 19 (49) + 20\n",
            "49 = 2 (20) + 9\n",
            "20 = 2 (9) + 2\n",
            "9 = 4 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (952) + 48\n",
            "952 = 19 (48) + 40\n",
            "48 = 1 (40) + 8\n",
            "40 = 5 (8) + 0\n",
            "1000 = 1 (953) + 47\n",
            "953 = 20 (47) + 13\n",
            "47 = 3 (13) + 8\n",
            "13 = 1 (8) + 5\n",
            "8 = 1 (5) + 3\n",
            "5 = 1 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (954) + 46\n",
            "954 = 20 (46) + 34\n",
            "46 = 1 (34) + 12\n",
            "34 = 2 (12) + 10\n",
            "12 = 1 (10) + 2\n",
            "10 = 5 (2) + 0\n",
            "1000 = 1 (955) + 45\n",
            "955 = 21 (45) + 10\n",
            "45 = 4 (10) + 5\n",
            "10 = 2 (5) + 0\n",
            "1000 = 1 (956) + 44\n",
            "956 = 21 (44) + 32\n",
            "44 = 1 (32) + 12\n",
            "32 = 2 (12) + 8\n",
            "12 = 1 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "1000 = 1 (957) + 43\n",
            "957 = 22 (43) + 11\n",
            "43 = 3 (11) + 10\n",
            "11 = 1 (10) + 1\n",
            "10 = 10 (1) + 0\n",
            "1000 = 1 (958) + 42\n",
            "958 = 22 (42) + 34\n",
            "42 = 1 (34) + 8\n",
            "34 = 4 (8) + 2\n",
            "8 = 4 (2) + 0\n",
            "1000 = 1 (959) + 41\n",
            "959 = 23 (41) + 16\n",
            "41 = 2 (16) + 9\n",
            "16 = 1 (9) + 7\n",
            "9 = 1 (7) + 2\n",
            "7 = 3 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (960) + 40\n",
            "960 = 24 (40) + 0\n",
            "1000 = 1 (961) + 39\n",
            "961 = 24 (39) + 25\n",
            "39 = 1 (25) + 14\n",
            "25 = 1 (14) + 11\n",
            "14 = 1 (11) + 3\n",
            "11 = 3 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (962) + 38\n",
            "962 = 25 (38) + 12\n",
            "38 = 3 (12) + 2\n",
            "12 = 6 (2) + 0\n",
            "1000 = 1 (963) + 37\n",
            "963 = 26 (37) + 1\n",
            "37 = 37 (1) + 0\n",
            "1000 = 1 (964) + 36\n",
            "964 = 26 (36) + 28\n",
            "36 = 1 (28) + 8\n",
            "28 = 3 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "1000 = 1 (965) + 35\n",
            "965 = 27 (35) + 20\n",
            "35 = 1 (20) + 15\n",
            "20 = 1 (15) + 5\n",
            "15 = 3 (5) + 0\n",
            "1000 = 1 (966) + 34\n",
            "966 = 28 (34) + 14\n",
            "34 = 2 (14) + 6\n",
            "14 = 2 (6) + 2\n",
            "6 = 3 (2) + 0\n",
            "1000 = 1 (967) + 33\n",
            "967 = 29 (33) + 10\n",
            "33 = 3 (10) + 3\n",
            "10 = 3 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "1000 = 1 (968) + 32\n",
            "968 = 30 (32) + 8\n",
            "32 = 4 (8) + 0\n",
            "1000 = 1 (969) + 31\n",
            "969 = 31 (31) + 8\n",
            "31 = 3 (8) + 7\n",
            "8 = 1 (7) + 1\n",
            "7 = 7 (1) + 0\n",
            "1000 = 1 (970) + 30\n",
            "970 = 32 (30) + 10\n",
            "30 = 3 (10) + 0\n",
            "1000 = 1 (971) + 29\n",
            "971 = 33 (29) + 14\n",
            "29 = 2 (14) + 1\n",
            "14 = 14 (1) + 0\n",
            "1000 = 1 (972) + 28\n",
            "972 = 34 (28) + 20\n",
            "28 = 1 (20) + 8\n",
            "20 = 2 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "1000 = 1 (973) + 27\n",
            "973 = 36 (27) + 1\n",
            "27 = 27 (1) + 0\n",
            "1000 = 1 (974) + 26\n",
            "974 = 37 (26) + 12\n",
            "26 = 2 (12) + 2\n",
            "12 = 6 (2) + 0\n",
            "1000 = 1 (975) + 25\n",
            "975 = 39 (25) + 0\n",
            "1000 = 1 (976) + 24\n",
            "976 = 40 (24) + 16\n",
            "24 = 1 (16) + 8\n",
            "16 = 2 (8) + 0\n",
            "1000 = 1 (977) + 23\n",
            "977 = 42 (23) + 11\n",
            "23 = 2 (11) + 1\n",
            "11 = 11 (1) + 0\n",
            "1000 = 1 (978) + 22\n",
            "978 = 44 (22) + 10\n",
            "22 = 2 (10) + 2\n",
            "10 = 5 (2) + 0\n",
            "1000 = 1 (979) + 21\n",
            "979 = 46 (21) + 13\n",
            "21 = 1 (13) + 8\n",
            "13 = 1 (8) + 5\n",
            "8 = 1 (5) + 3\n",
            "5 = 1 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (980) + 20\n",
            "980 = 49 (20) + 0\n",
            "1000 = 1 (981) + 19\n",
            "981 = 51 (19) + 12\n",
            "19 = 1 (12) + 7\n",
            "12 = 1 (7) + 5\n",
            "7 = 1 (5) + 2\n",
            "5 = 2 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (982) + 18\n",
            "982 = 54 (18) + 10\n",
            "18 = 1 (10) + 8\n",
            "10 = 1 (8) + 2\n",
            "8 = 4 (2) + 0\n",
            "1000 = 1 (983) + 17\n",
            "983 = 57 (17) + 14\n",
            "17 = 1 (14) + 3\n",
            "14 = 4 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "1000 = 1 (984) + 16\n",
            "984 = 61 (16) + 8\n",
            "16 = 2 (8) + 0\n",
            "1000 = 1 (985) + 15\n",
            "985 = 65 (15) + 10\n",
            "15 = 1 (10) + 5\n",
            "10 = 2 (5) + 0\n",
            "1000 = 1 (986) + 14\n",
            "986 = 70 (14) + 6\n",
            "14 = 2 (6) + 2\n",
            "6 = 3 (2) + 0\n",
            "1000 = 1 (987) + 13\n",
            "987 = 75 (13) + 12\n",
            "13 = 1 (12) + 1\n",
            "12 = 12 (1) + 0\n",
            "1000 = 1 (988) + 12\n",
            "988 = 82 (12) + 4\n",
            "12 = 3 (4) + 0\n",
            "1000 = 1 (989) + 11\n",
            "989 = 89 (11) + 10\n",
            "11 = 1 (10) + 1\n",
            "10 = 10 (1) + 0\n",
            "1000 = 1 (990) + 10\n",
            "990 = 99 (10) + 0\n",
            "1000 = 1 (991) + 9\n",
            "991 = 110 (9) + 1\n",
            "9 = 9 (1) + 0\n",
            "1000 = 1 (992) + 8\n",
            "992 = 124 (8) + 0\n",
            "1000 = 1 (993) + 7\n",
            "993 = 141 (7) + 6\n",
            "7 = 1 (6) + 1\n",
            "6 = 6 (1) + 0\n",
            "1000 = 1 (994) + 6\n",
            "994 = 165 (6) + 4\n",
            "6 = 1 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "1000 = 1 (995) + 5\n",
            "995 = 199 (5) + 0\n",
            "1000 = 1 (996) + 4\n",
            "996 = 249 (4) + 0\n",
            "1000 = 1 (997) + 3\n",
            "997 = 332 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "1000 = 1 (998) + 2\n",
            "998 = 499 (2) + 0\n",
            "1000 = 1 (999) + 1\n",
            "999 = 999 (1) + 0\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ywX4fc_mHb_G",
        "outputId": "2f68dc43-53b6-40ea-9436-065ff83aa7d8"
      },
      "source": [
        "for i in range(100):\n",
        "  Euclidean_algorithm(-i,100)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "0 = 0 (100) + 0\n",
            "-1 = -1 (100) + 99\n",
            "100 = 1 (99) + 1\n",
            "99 = 99 (1) + 0\n",
            "-2 = -1 (100) + 98\n",
            "100 = 1 (98) + 2\n",
            "98 = 49 (2) + 0\n",
            "-3 = -1 (100) + 97\n",
            "100 = 1 (97) + 3\n",
            "97 = 32 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "-4 = -1 (100) + 96\n",
            "100 = 1 (96) + 4\n",
            "96 = 24 (4) + 0\n",
            "-5 = -1 (100) + 95\n",
            "100 = 1 (95) + 5\n",
            "95 = 19 (5) + 0\n",
            "-6 = -1 (100) + 94\n",
            "100 = 1 (94) + 6\n",
            "94 = 15 (6) + 4\n",
            "6 = 1 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "-7 = -1 (100) + 93\n",
            "100 = 1 (93) + 7\n",
            "93 = 13 (7) + 2\n",
            "7 = 3 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "-8 = -1 (100) + 92\n",
            "100 = 1 (92) + 8\n",
            "92 = 11 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "-9 = -1 (100) + 91\n",
            "100 = 1 (91) + 9\n",
            "91 = 10 (9) + 1\n",
            "9 = 9 (1) + 0\n",
            "-10 = -1 (100) + 90\n",
            "100 = 1 (90) + 10\n",
            "90 = 9 (10) + 0\n",
            "-11 = -1 (100) + 89\n",
            "100 = 1 (89) + 11\n",
            "89 = 8 (11) + 1\n",
            "11 = 11 (1) + 0\n",
            "-12 = -1 (100) + 88\n",
            "100 = 1 (88) + 12\n",
            "88 = 7 (12) + 4\n",
            "12 = 3 (4) + 0\n",
            "-13 = -1 (100) + 87\n",
            "100 = 1 (87) + 13\n",
            "87 = 6 (13) + 9\n",
            "13 = 1 (9) + 4\n",
            "9 = 2 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "-14 = -1 (100) + 86\n",
            "100 = 1 (86) + 14\n",
            "86 = 6 (14) + 2\n",
            "14 = 7 (2) + 0\n",
            "-15 = -1 (100) + 85\n",
            "100 = 1 (85) + 15\n",
            "85 = 5 (15) + 10\n",
            "15 = 1 (10) + 5\n",
            "10 = 2 (5) + 0\n",
            "-16 = -1 (100) + 84\n",
            "100 = 1 (84) + 16\n",
            "84 = 5 (16) + 4\n",
            "16 = 4 (4) + 0\n",
            "-17 = -1 (100) + 83\n",
            "100 = 1 (83) + 17\n",
            "83 = 4 (17) + 15\n",
            "17 = 1 (15) + 2\n",
            "15 = 7 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "-18 = -1 (100) + 82\n",
            "100 = 1 (82) + 18\n",
            "82 = 4 (18) + 10\n",
            "18 = 1 (10) + 8\n",
            "10 = 1 (8) + 2\n",
            "8 = 4 (2) + 0\n",
            "-19 = -1 (100) + 81\n",
            "100 = 1 (81) + 19\n",
            "81 = 4 (19) + 5\n",
            "19 = 3 (5) + 4\n",
            "5 = 1 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "-20 = -1 (100) + 80\n",
            "100 = 1 (80) + 20\n",
            "80 = 4 (20) + 0\n",
            "-21 = -1 (100) + 79\n",
            "100 = 1 (79) + 21\n",
            "79 = 3 (21) + 16\n",
            "21 = 1 (16) + 5\n",
            "16 = 3 (5) + 1\n",
            "5 = 5 (1) + 0\n",
            "-22 = -1 (100) + 78\n",
            "100 = 1 (78) + 22\n",
            "78 = 3 (22) + 12\n",
            "22 = 1 (12) + 10\n",
            "12 = 1 (10) + 2\n",
            "10 = 5 (2) + 0\n",
            "-23 = -1 (100) + 77\n",
            "100 = 1 (77) + 23\n",
            "77 = 3 (23) + 8\n",
            "23 = 2 (8) + 7\n",
            "8 = 1 (7) + 1\n",
            "7 = 7 (1) + 0\n",
            "-24 = -1 (100) + 76\n",
            "100 = 1 (76) + 24\n",
            "76 = 3 (24) + 4\n",
            "24 = 6 (4) + 0\n",
            "-25 = -1 (100) + 75\n",
            "100 = 1 (75) + 25\n",
            "75 = 3 (25) + 0\n",
            "-26 = -1 (100) + 74\n",
            "100 = 1 (74) + 26\n",
            "74 = 2 (26) + 22\n",
            "26 = 1 (22) + 4\n",
            "22 = 5 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "-27 = -1 (100) + 73\n",
            "100 = 1 (73) + 27\n",
            "73 = 2 (27) + 19\n",
            "27 = 1 (19) + 8\n",
            "19 = 2 (8) + 3\n",
            "8 = 2 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "-28 = -1 (100) + 72\n",
            "100 = 1 (72) + 28\n",
            "72 = 2 (28) + 16\n",
            "28 = 1 (16) + 12\n",
            "16 = 1 (12) + 4\n",
            "12 = 3 (4) + 0\n",
            "-29 = -1 (100) + 71\n",
            "100 = 1 (71) + 29\n",
            "71 = 2 (29) + 13\n",
            "29 = 2 (13) + 3\n",
            "13 = 4 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "-30 = -1 (100) + 70\n",
            "100 = 1 (70) + 30\n",
            "70 = 2 (30) + 10\n",
            "30 = 3 (10) + 0\n",
            "-31 = -1 (100) + 69\n",
            "100 = 1 (69) + 31\n",
            "69 = 2 (31) + 7\n",
            "31 = 4 (7) + 3\n",
            "7 = 2 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "-32 = -1 (100) + 68\n",
            "100 = 1 (68) + 32\n",
            "68 = 2 (32) + 4\n",
            "32 = 8 (4) + 0\n",
            "-33 = -1 (100) + 67\n",
            "100 = 1 (67) + 33\n",
            "67 = 2 (33) + 1\n",
            "33 = 33 (1) + 0\n",
            "-34 = -1 (100) + 66\n",
            "100 = 1 (66) + 34\n",
            "66 = 1 (34) + 32\n",
            "34 = 1 (32) + 2\n",
            "32 = 16 (2) + 0\n",
            "-35 = -1 (100) + 65\n",
            "100 = 1 (65) + 35\n",
            "65 = 1 (35) + 30\n",
            "35 = 1 (30) + 5\n",
            "30 = 6 (5) + 0\n",
            "-36 = -1 (100) + 64\n",
            "100 = 1 (64) + 36\n",
            "64 = 1 (36) + 28\n",
            "36 = 1 (28) + 8\n",
            "28 = 3 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "-37 = -1 (100) + 63\n",
            "100 = 1 (63) + 37\n",
            "63 = 1 (37) + 26\n",
            "37 = 1 (26) + 11\n",
            "26 = 2 (11) + 4\n",
            "11 = 2 (4) + 3\n",
            "4 = 1 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "-38 = -1 (100) + 62\n",
            "100 = 1 (62) + 38\n",
            "62 = 1 (38) + 24\n",
            "38 = 1 (24) + 14\n",
            "24 = 1 (14) + 10\n",
            "14 = 1 (10) + 4\n",
            "10 = 2 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "-39 = -1 (100) + 61\n",
            "100 = 1 (61) + 39\n",
            "61 = 1 (39) + 22\n",
            "39 = 1 (22) + 17\n",
            "22 = 1 (17) + 5\n",
            "17 = 3 (5) + 2\n",
            "5 = 2 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "-40 = -1 (100) + 60\n",
            "100 = 1 (60) + 40\n",
            "60 = 1 (40) + 20\n",
            "40 = 2 (20) + 0\n",
            "-41 = -1 (100) + 59\n",
            "100 = 1 (59) + 41\n",
            "59 = 1 (41) + 18\n",
            "41 = 2 (18) + 5\n",
            "18 = 3 (5) + 3\n",
            "5 = 1 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "-42 = -1 (100) + 58\n",
            "100 = 1 (58) + 42\n",
            "58 = 1 (42) + 16\n",
            "42 = 2 (16) + 10\n",
            "16 = 1 (10) + 6\n",
            "10 = 1 (6) + 4\n",
            "6 = 1 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "-43 = -1 (100) + 57\n",
            "100 = 1 (57) + 43\n",
            "57 = 1 (43) + 14\n",
            "43 = 3 (14) + 1\n",
            "14 = 14 (1) + 0\n",
            "-44 = -1 (100) + 56\n",
            "100 = 1 (56) + 44\n",
            "56 = 1 (44) + 12\n",
            "44 = 3 (12) + 8\n",
            "12 = 1 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "-45 = -1 (100) + 55\n",
            "100 = 1 (55) + 45\n",
            "55 = 1 (45) + 10\n",
            "45 = 4 (10) + 5\n",
            "10 = 2 (5) + 0\n",
            "-46 = -1 (100) + 54\n",
            "100 = 1 (54) + 46\n",
            "54 = 1 (46) + 8\n",
            "46 = 5 (8) + 6\n",
            "8 = 1 (6) + 2\n",
            "6 = 3 (2) + 0\n",
            "-47 = -1 (100) + 53\n",
            "100 = 1 (53) + 47\n",
            "53 = 1 (47) + 6\n",
            "47 = 7 (6) + 5\n",
            "6 = 1 (5) + 1\n",
            "5 = 5 (1) + 0\n",
            "-48 = -1 (100) + 52\n",
            "100 = 1 (52) + 48\n",
            "52 = 1 (48) + 4\n",
            "48 = 12 (4) + 0\n",
            "-49 = -1 (100) + 51\n",
            "100 = 1 (51) + 49\n",
            "51 = 1 (49) + 2\n",
            "49 = 24 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "-50 = -1 (100) + 50\n",
            "100 = 2 (50) + 0\n",
            "-51 = -1 (100) + 49\n",
            "100 = 2 (49) + 2\n",
            "49 = 24 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "-52 = -1 (100) + 48\n",
            "100 = 2 (48) + 4\n",
            "48 = 12 (4) + 0\n",
            "-53 = -1 (100) + 47\n",
            "100 = 2 (47) + 6\n",
            "47 = 7 (6) + 5\n",
            "6 = 1 (5) + 1\n",
            "5 = 5 (1) + 0\n",
            "-54 = -1 (100) + 46\n",
            "100 = 2 (46) + 8\n",
            "46 = 5 (8) + 6\n",
            "8 = 1 (6) + 2\n",
            "6 = 3 (2) + 0\n",
            "-55 = -1 (100) + 45\n",
            "100 = 2 (45) + 10\n",
            "45 = 4 (10) + 5\n",
            "10 = 2 (5) + 0\n",
            "-56 = -1 (100) + 44\n",
            "100 = 2 (44) + 12\n",
            "44 = 3 (12) + 8\n",
            "12 = 1 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "-57 = -1 (100) + 43\n",
            "100 = 2 (43) + 14\n",
            "43 = 3 (14) + 1\n",
            "14 = 14 (1) + 0\n",
            "-58 = -1 (100) + 42\n",
            "100 = 2 (42) + 16\n",
            "42 = 2 (16) + 10\n",
            "16 = 1 (10) + 6\n",
            "10 = 1 (6) + 4\n",
            "6 = 1 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "-59 = -1 (100) + 41\n",
            "100 = 2 (41) + 18\n",
            "41 = 2 (18) + 5\n",
            "18 = 3 (5) + 3\n",
            "5 = 1 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "-60 = -1 (100) + 40\n",
            "100 = 2 (40) + 20\n",
            "40 = 2 (20) + 0\n",
            "-61 = -1 (100) + 39\n",
            "100 = 2 (39) + 22\n",
            "39 = 1 (22) + 17\n",
            "22 = 1 (17) + 5\n",
            "17 = 3 (5) + 2\n",
            "5 = 2 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "-62 = -1 (100) + 38\n",
            "100 = 2 (38) + 24\n",
            "38 = 1 (24) + 14\n",
            "24 = 1 (14) + 10\n",
            "14 = 1 (10) + 4\n",
            "10 = 2 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "-63 = -1 (100) + 37\n",
            "100 = 2 (37) + 26\n",
            "37 = 1 (26) + 11\n",
            "26 = 2 (11) + 4\n",
            "11 = 2 (4) + 3\n",
            "4 = 1 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "-64 = -1 (100) + 36\n",
            "100 = 2 (36) + 28\n",
            "36 = 1 (28) + 8\n",
            "28 = 3 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "-65 = -1 (100) + 35\n",
            "100 = 2 (35) + 30\n",
            "35 = 1 (30) + 5\n",
            "30 = 6 (5) + 0\n",
            "-66 = -1 (100) + 34\n",
            "100 = 2 (34) + 32\n",
            "34 = 1 (32) + 2\n",
            "32 = 16 (2) + 0\n",
            "-67 = -1 (100) + 33\n",
            "100 = 3 (33) + 1\n",
            "33 = 33 (1) + 0\n",
            "-68 = -1 (100) + 32\n",
            "100 = 3 (32) + 4\n",
            "32 = 8 (4) + 0\n",
            "-69 = -1 (100) + 31\n",
            "100 = 3 (31) + 7\n",
            "31 = 4 (7) + 3\n",
            "7 = 2 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "-70 = -1 (100) + 30\n",
            "100 = 3 (30) + 10\n",
            "30 = 3 (10) + 0\n",
            "-71 = -1 (100) + 29\n",
            "100 = 3 (29) + 13\n",
            "29 = 2 (13) + 3\n",
            "13 = 4 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "-72 = -1 (100) + 28\n",
            "100 = 3 (28) + 16\n",
            "28 = 1 (16) + 12\n",
            "16 = 1 (12) + 4\n",
            "12 = 3 (4) + 0\n",
            "-73 = -1 (100) + 27\n",
            "100 = 3 (27) + 19\n",
            "27 = 1 (19) + 8\n",
            "19 = 2 (8) + 3\n",
            "8 = 2 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "-74 = -1 (100) + 26\n",
            "100 = 3 (26) + 22\n",
            "26 = 1 (22) + 4\n",
            "22 = 5 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "-75 = -1 (100) + 25\n",
            "100 = 4 (25) + 0\n",
            "-76 = -1 (100) + 24\n",
            "100 = 4 (24) + 4\n",
            "24 = 6 (4) + 0\n",
            "-77 = -1 (100) + 23\n",
            "100 = 4 (23) + 8\n",
            "23 = 2 (8) + 7\n",
            "8 = 1 (7) + 1\n",
            "7 = 7 (1) + 0\n",
            "-78 = -1 (100) + 22\n",
            "100 = 4 (22) + 12\n",
            "22 = 1 (12) + 10\n",
            "12 = 1 (10) + 2\n",
            "10 = 5 (2) + 0\n",
            "-79 = -1 (100) + 21\n",
            "100 = 4 (21) + 16\n",
            "21 = 1 (16) + 5\n",
            "16 = 3 (5) + 1\n",
            "5 = 5 (1) + 0\n",
            "-80 = -1 (100) + 20\n",
            "100 = 5 (20) + 0\n",
            "-81 = -1 (100) + 19\n",
            "100 = 5 (19) + 5\n",
            "19 = 3 (5) + 4\n",
            "5 = 1 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "-82 = -1 (100) + 18\n",
            "100 = 5 (18) + 10\n",
            "18 = 1 (10) + 8\n",
            "10 = 1 (8) + 2\n",
            "8 = 4 (2) + 0\n",
            "-83 = -1 (100) + 17\n",
            "100 = 5 (17) + 15\n",
            "17 = 1 (15) + 2\n",
            "15 = 7 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "-84 = -1 (100) + 16\n",
            "100 = 6 (16) + 4\n",
            "16 = 4 (4) + 0\n",
            "-85 = -1 (100) + 15\n",
            "100 = 6 (15) + 10\n",
            "15 = 1 (10) + 5\n",
            "10 = 2 (5) + 0\n",
            "-86 = -1 (100) + 14\n",
            "100 = 7 (14) + 2\n",
            "14 = 7 (2) + 0\n",
            "-87 = -1 (100) + 13\n",
            "100 = 7 (13) + 9\n",
            "13 = 1 (9) + 4\n",
            "9 = 2 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "-88 = -1 (100) + 12\n",
            "100 = 8 (12) + 4\n",
            "12 = 3 (4) + 0\n",
            "-89 = -1 (100) + 11\n",
            "100 = 9 (11) + 1\n",
            "11 = 11 (1) + 0\n",
            "-90 = -1 (100) + 10\n",
            "100 = 10 (10) + 0\n",
            "-91 = -1 (100) + 9\n",
            "100 = 11 (9) + 1\n",
            "9 = 9 (1) + 0\n",
            "-92 = -1 (100) + 8\n",
            "100 = 12 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "-93 = -1 (100) + 7\n",
            "100 = 14 (7) + 2\n",
            "7 = 3 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "-94 = -1 (100) + 6\n",
            "100 = 16 (6) + 4\n",
            "6 = 1 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "-95 = -1 (100) + 5\n",
            "100 = 20 (5) + 0\n",
            "-96 = -1 (100) + 4\n",
            "100 = 25 (4) + 0\n",
            "-97 = -1 (100) + 3\n",
            "100 = 33 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "-98 = -1 (100) + 2\n",
            "100 = 50 (2) + 0\n",
            "-99 = -1 (100) + 1\n",
            "100 = 100 (1) + 0\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0LpCbdyVHbdB",
        "outputId": "a152ea7a-535f-47ea-a143-401e30692bfc"
      },
      "source": [
        "for i in range(100):\n",
        "  Euclidean_algorithm(-100,i)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "-100 = -100 (1) + 0\n",
            "-100 = -50 (2) + 0\n",
            "-100 = -34 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "-100 = -25 (4) + 0\n",
            "-100 = -20 (5) + 0\n",
            "-100 = -17 (6) + 2\n",
            "6 = 3 (2) + 0\n",
            "-100 = -15 (7) + 5\n",
            "7 = 1 (5) + 2\n",
            "5 = 2 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "-100 = -13 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "-100 = -12 (9) + 8\n",
            "9 = 1 (8) + 1\n",
            "8 = 8 (1) + 0\n",
            "-100 = -10 (10) + 0\n",
            "-100 = -10 (11) + 10\n",
            "11 = 1 (10) + 1\n",
            "10 = 10 (1) + 0\n",
            "-100 = -9 (12) + 8\n",
            "12 = 1 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "-100 = -8 (13) + 4\n",
            "13 = 3 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "-100 = -8 (14) + 12\n",
            "14 = 1 (12) + 2\n",
            "12 = 6 (2) + 0\n",
            "-100 = -7 (15) + 5\n",
            "15 = 3 (5) + 0\n",
            "-100 = -7 (16) + 12\n",
            "16 = 1 (12) + 4\n",
            "12 = 3 (4) + 0\n",
            "-100 = -6 (17) + 2\n",
            "17 = 8 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "-100 = -6 (18) + 8\n",
            "18 = 2 (8) + 2\n",
            "8 = 4 (2) + 0\n",
            "-100 = -6 (19) + 14\n",
            "19 = 1 (14) + 5\n",
            "14 = 2 (5) + 4\n",
            "5 = 1 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "-100 = -5 (20) + 0\n",
            "-100 = -5 (21) + 5\n",
            "21 = 4 (5) + 1\n",
            "5 = 5 (1) + 0\n",
            "-100 = -5 (22) + 10\n",
            "22 = 2 (10) + 2\n",
            "10 = 5 (2) + 0\n",
            "-100 = -5 (23) + 15\n",
            "23 = 1 (15) + 8\n",
            "15 = 1 (8) + 7\n",
            "8 = 1 (7) + 1\n",
            "7 = 7 (1) + 0\n",
            "-100 = -5 (24) + 20\n",
            "24 = 1 (20) + 4\n",
            "20 = 5 (4) + 0\n",
            "-100 = -4 (25) + 0\n",
            "-100 = -4 (26) + 4\n",
            "26 = 6 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "-100 = -4 (27) + 8\n",
            "27 = 3 (8) + 3\n",
            "8 = 2 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "-100 = -4 (28) + 12\n",
            "28 = 2 (12) + 4\n",
            "12 = 3 (4) + 0\n",
            "-100 = -4 (29) + 16\n",
            "29 = 1 (16) + 13\n",
            "16 = 1 (13) + 3\n",
            "13 = 4 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "-100 = -4 (30) + 20\n",
            "30 = 1 (20) + 10\n",
            "20 = 2 (10) + 0\n",
            "-100 = -4 (31) + 24\n",
            "31 = 1 (24) + 7\n",
            "24 = 3 (7) + 3\n",
            "7 = 2 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "-100 = -4 (32) + 28\n",
            "32 = 1 (28) + 4\n",
            "28 = 7 (4) + 0\n",
            "-100 = -4 (33) + 32\n",
            "33 = 1 (32) + 1\n",
            "32 = 32 (1) + 0\n",
            "-100 = -3 (34) + 2\n",
            "34 = 17 (2) + 0\n",
            "-100 = -3 (35) + 5\n",
            "35 = 7 (5) + 0\n",
            "-100 = -3 (36) + 8\n",
            "36 = 4 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "-100 = -3 (37) + 11\n",
            "37 = 3 (11) + 4\n",
            "11 = 2 (4) + 3\n",
            "4 = 1 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "-100 = -3 (38) + 14\n",
            "38 = 2 (14) + 10\n",
            "14 = 1 (10) + 4\n",
            "10 = 2 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "-100 = -3 (39) + 17\n",
            "39 = 2 (17) + 5\n",
            "17 = 3 (5) + 2\n",
            "5 = 2 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "-100 = -3 (40) + 20\n",
            "40 = 2 (20) + 0\n",
            "-100 = -3 (41) + 23\n",
            "41 = 1 (23) + 18\n",
            "23 = 1 (18) + 5\n",
            "18 = 3 (5) + 3\n",
            "5 = 1 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "-100 = -3 (42) + 26\n",
            "42 = 1 (26) + 16\n",
            "26 = 1 (16) + 10\n",
            "16 = 1 (10) + 6\n",
            "10 = 1 (6) + 4\n",
            "6 = 1 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "-100 = -3 (43) + 29\n",
            "43 = 1 (29) + 14\n",
            "29 = 2 (14) + 1\n",
            "14 = 14 (1) + 0\n",
            "-100 = -3 (44) + 32\n",
            "44 = 1 (32) + 12\n",
            "32 = 2 (12) + 8\n",
            "12 = 1 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "-100 = -3 (45) + 35\n",
            "45 = 1 (35) + 10\n",
            "35 = 3 (10) + 5\n",
            "10 = 2 (5) + 0\n",
            "-100 = -3 (46) + 38\n",
            "46 = 1 (38) + 8\n",
            "38 = 4 (8) + 6\n",
            "8 = 1 (6) + 2\n",
            "6 = 3 (2) + 0\n",
            "-100 = -3 (47) + 41\n",
            "47 = 1 (41) + 6\n",
            "41 = 6 (6) + 5\n",
            "6 = 1 (5) + 1\n",
            "5 = 5 (1) + 0\n",
            "-100 = -3 (48) + 44\n",
            "48 = 1 (44) + 4\n",
            "44 = 11 (4) + 0\n",
            "-100 = -3 (49) + 47\n",
            "49 = 1 (47) + 2\n",
            "47 = 23 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "-100 = -2 (50) + 0\n",
            "-100 = -2 (51) + 2\n",
            "51 = 25 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "-100 = -2 (52) + 4\n",
            "52 = 13 (4) + 0\n",
            "-100 = -2 (53) + 6\n",
            "53 = 8 (6) + 5\n",
            "6 = 1 (5) + 1\n",
            "5 = 5 (1) + 0\n",
            "-100 = -2 (54) + 8\n",
            "54 = 6 (8) + 6\n",
            "8 = 1 (6) + 2\n",
            "6 = 3 (2) + 0\n",
            "-100 = -2 (55) + 10\n",
            "55 = 5 (10) + 5\n",
            "10 = 2 (5) + 0\n",
            "-100 = -2 (56) + 12\n",
            "56 = 4 (12) + 8\n",
            "12 = 1 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "-100 = -2 (57) + 14\n",
            "57 = 4 (14) + 1\n",
            "14 = 14 (1) + 0\n",
            "-100 = -2 (58) + 16\n",
            "58 = 3 (16) + 10\n",
            "16 = 1 (10) + 6\n",
            "10 = 1 (6) + 4\n",
            "6 = 1 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "-100 = -2 (59) + 18\n",
            "59 = 3 (18) + 5\n",
            "18 = 3 (5) + 3\n",
            "5 = 1 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "-100 = -2 (60) + 20\n",
            "60 = 3 (20) + 0\n",
            "-100 = -2 (61) + 22\n",
            "61 = 2 (22) + 17\n",
            "22 = 1 (17) + 5\n",
            "17 = 3 (5) + 2\n",
            "5 = 2 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "-100 = -2 (62) + 24\n",
            "62 = 2 (24) + 14\n",
            "24 = 1 (14) + 10\n",
            "14 = 1 (10) + 4\n",
            "10 = 2 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "-100 = -2 (63) + 26\n",
            "63 = 2 (26) + 11\n",
            "26 = 2 (11) + 4\n",
            "11 = 2 (4) + 3\n",
            "4 = 1 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "-100 = -2 (64) + 28\n",
            "64 = 2 (28) + 8\n",
            "28 = 3 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "-100 = -2 (65) + 30\n",
            "65 = 2 (30) + 5\n",
            "30 = 6 (5) + 0\n",
            "-100 = -2 (66) + 32\n",
            "66 = 2 (32) + 2\n",
            "32 = 16 (2) + 0\n",
            "-100 = -2 (67) + 34\n",
            "67 = 1 (34) + 33\n",
            "34 = 1 (33) + 1\n",
            "33 = 33 (1) + 0\n",
            "-100 = -2 (68) + 36\n",
            "68 = 1 (36) + 32\n",
            "36 = 1 (32) + 4\n",
            "32 = 8 (4) + 0\n",
            "-100 = -2 (69) + 38\n",
            "69 = 1 (38) + 31\n",
            "38 = 1 (31) + 7\n",
            "31 = 4 (7) + 3\n",
            "7 = 2 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "-100 = -2 (70) + 40\n",
            "70 = 1 (40) + 30\n",
            "40 = 1 (30) + 10\n",
            "30 = 3 (10) + 0\n",
            "-100 = -2 (71) + 42\n",
            "71 = 1 (42) + 29\n",
            "42 = 1 (29) + 13\n",
            "29 = 2 (13) + 3\n",
            "13 = 4 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "-100 = -2 (72) + 44\n",
            "72 = 1 (44) + 28\n",
            "44 = 1 (28) + 16\n",
            "28 = 1 (16) + 12\n",
            "16 = 1 (12) + 4\n",
            "12 = 3 (4) + 0\n",
            "-100 = -2 (73) + 46\n",
            "73 = 1 (46) + 27\n",
            "46 = 1 (27) + 19\n",
            "27 = 1 (19) + 8\n",
            "19 = 2 (8) + 3\n",
            "8 = 2 (3) + 2\n",
            "3 = 1 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "-100 = -2 (74) + 48\n",
            "74 = 1 (48) + 26\n",
            "48 = 1 (26) + 22\n",
            "26 = 1 (22) + 4\n",
            "22 = 5 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "-100 = -2 (75) + 50\n",
            "75 = 1 (50) + 25\n",
            "50 = 2 (25) + 0\n",
            "-100 = -2 (76) + 52\n",
            "76 = 1 (52) + 24\n",
            "52 = 2 (24) + 4\n",
            "24 = 6 (4) + 0\n",
            "-100 = -2 (77) + 54\n",
            "77 = 1 (54) + 23\n",
            "54 = 2 (23) + 8\n",
            "23 = 2 (8) + 7\n",
            "8 = 1 (7) + 1\n",
            "7 = 7 (1) + 0\n",
            "-100 = -2 (78) + 56\n",
            "78 = 1 (56) + 22\n",
            "56 = 2 (22) + 12\n",
            "22 = 1 (12) + 10\n",
            "12 = 1 (10) + 2\n",
            "10 = 5 (2) + 0\n",
            "-100 = -2 (79) + 58\n",
            "79 = 1 (58) + 21\n",
            "58 = 2 (21) + 16\n",
            "21 = 1 (16) + 5\n",
            "16 = 3 (5) + 1\n",
            "5 = 5 (1) + 0\n",
            "-100 = -2 (80) + 60\n",
            "80 = 1 (60) + 20\n",
            "60 = 3 (20) + 0\n",
            "-100 = -2 (81) + 62\n",
            "81 = 1 (62) + 19\n",
            "62 = 3 (19) + 5\n",
            "19 = 3 (5) + 4\n",
            "5 = 1 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "-100 = -2 (82) + 64\n",
            "82 = 1 (64) + 18\n",
            "64 = 3 (18) + 10\n",
            "18 = 1 (10) + 8\n",
            "10 = 1 (8) + 2\n",
            "8 = 4 (2) + 0\n",
            "-100 = -2 (83) + 66\n",
            "83 = 1 (66) + 17\n",
            "66 = 3 (17) + 15\n",
            "17 = 1 (15) + 2\n",
            "15 = 7 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "-100 = -2 (84) + 68\n",
            "84 = 1 (68) + 16\n",
            "68 = 4 (16) + 4\n",
            "16 = 4 (4) + 0\n",
            "-100 = -2 (85) + 70\n",
            "85 = 1 (70) + 15\n",
            "70 = 4 (15) + 10\n",
            "15 = 1 (10) + 5\n",
            "10 = 2 (5) + 0\n",
            "-100 = -2 (86) + 72\n",
            "86 = 1 (72) + 14\n",
            "72 = 5 (14) + 2\n",
            "14 = 7 (2) + 0\n",
            "-100 = -2 (87) + 74\n",
            "87 = 1 (74) + 13\n",
            "74 = 5 (13) + 9\n",
            "13 = 1 (9) + 4\n",
            "9 = 2 (4) + 1\n",
            "4 = 4 (1) + 0\n",
            "-100 = -2 (88) + 76\n",
            "88 = 1 (76) + 12\n",
            "76 = 6 (12) + 4\n",
            "12 = 3 (4) + 0\n",
            "-100 = -2 (89) + 78\n",
            "89 = 1 (78) + 11\n",
            "78 = 7 (11) + 1\n",
            "11 = 11 (1) + 0\n",
            "-100 = -2 (90) + 80\n",
            "90 = 1 (80) + 10\n",
            "80 = 8 (10) + 0\n",
            "-100 = -2 (91) + 82\n",
            "91 = 1 (82) + 9\n",
            "82 = 9 (9) + 1\n",
            "9 = 9 (1) + 0\n",
            "-100 = -2 (92) + 84\n",
            "92 = 1 (84) + 8\n",
            "84 = 10 (8) + 4\n",
            "8 = 2 (4) + 0\n",
            "-100 = -2 (93) + 86\n",
            "93 = 1 (86) + 7\n",
            "86 = 12 (7) + 2\n",
            "7 = 3 (2) + 1\n",
            "2 = 2 (1) + 0\n",
            "-100 = -2 (94) + 88\n",
            "94 = 1 (88) + 6\n",
            "88 = 14 (6) + 4\n",
            "6 = 1 (4) + 2\n",
            "4 = 2 (2) + 0\n",
            "-100 = -2 (95) + 90\n",
            "95 = 1 (90) + 5\n",
            "90 = 18 (5) + 0\n",
            "-100 = -2 (96) + 92\n",
            "96 = 1 (92) + 4\n",
            "92 = 23 (4) + 0\n",
            "-100 = -2 (97) + 94\n",
            "97 = 1 (94) + 3\n",
            "94 = 31 (3) + 1\n",
            "3 = 3 (1) + 0\n",
            "-100 = -2 (98) + 96\n",
            "98 = 1 (96) + 2\n",
            "96 = 48 (2) + 0\n",
            "-100 = -2 (99) + 98\n",
            "99 = 1 (98) + 1\n",
            "98 = 98 (1) + 0\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "vAas_h2yMCe1",
        "outputId": "5e10c3eb-a1ab-46d8-d1a6-3ebf4d874115"
      },
      "source": [
        "for i in range(100):\n",
        "  Euclidean_algorithm(-100,-i)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "-100 = 100 (-1) + 0\n",
            "-100 = 50 (-2) + 0\n",
            "-100 = 33 (-3) + -1\n",
            "-3 = 3 (-1) + 0\n",
            "-100 = 25 (-4) + 0\n",
            "-100 = 20 (-5) + 0\n",
            "-100 = 16 (-6) + -4\n",
            "-6 = 1 (-4) + -2\n",
            "-4 = 2 (-2) + 0\n",
            "-100 = 14 (-7) + -2\n",
            "-7 = 3 (-2) + -1\n",
            "-2 = 2 (-1) + 0\n",
            "-100 = 12 (-8) + -4\n",
            "-8 = 2 (-4) + 0\n",
            "-100 = 11 (-9) + -1\n",
            "-9 = 9 (-1) + 0\n",
            "-100 = 10 (-10) + 0\n",
            "-100 = 9 (-11) + -1\n",
            "-11 = 11 (-1) + 0\n",
            "-100 = 8 (-12) + -4\n",
            "-12 = 3 (-4) + 0\n",
            "-100 = 7 (-13) + -9\n",
            "-13 = 1 (-9) + -4\n",
            "-9 = 2 (-4) + -1\n",
            "-4 = 4 (-1) + 0\n",
            "-100 = 7 (-14) + -2\n",
            "-14 = 7 (-2) + 0\n",
            "-100 = 6 (-15) + -10\n",
            "-15 = 1 (-10) + -5\n",
            "-10 = 2 (-5) + 0\n",
            "-100 = 6 (-16) + -4\n",
            "-16 = 4 (-4) + 0\n",
            "-100 = 5 (-17) + -15\n",
            "-17 = 1 (-15) + -2\n",
            "-15 = 7 (-2) + -1\n",
            "-2 = 2 (-1) + 0\n",
            "-100 = 5 (-18) + -10\n",
            "-18 = 1 (-10) + -8\n",
            "-10 = 1 (-8) + -2\n",
            "-8 = 4 (-2) + 0\n",
            "-100 = 5 (-19) + -5\n",
            "-19 = 3 (-5) + -4\n",
            "-5 = 1 (-4) + -1\n",
            "-4 = 4 (-1) + 0\n",
            "-100 = 5 (-20) + 0\n",
            "-100 = 4 (-21) + -16\n",
            "-21 = 1 (-16) + -5\n",
            "-16 = 3 (-5) + -1\n",
            "-5 = 5 (-1) + 0\n",
            "-100 = 4 (-22) + -12\n",
            "-22 = 1 (-12) + -10\n",
            "-12 = 1 (-10) + -2\n",
            "-10 = 5 (-2) + 0\n",
            "-100 = 4 (-23) + -8\n",
            "-23 = 2 (-8) + -7\n",
            "-8 = 1 (-7) + -1\n",
            "-7 = 7 (-1) + 0\n",
            "-100 = 4 (-24) + -4\n",
            "-24 = 6 (-4) + 0\n",
            "-100 = 4 (-25) + 0\n",
            "-100 = 3 (-26) + -22\n",
            "-26 = 1 (-22) + -4\n",
            "-22 = 5 (-4) + -2\n",
            "-4 = 2 (-2) + 0\n",
            "-100 = 3 (-27) + -19\n",
            "-27 = 1 (-19) + -8\n",
            "-19 = 2 (-8) + -3\n",
            "-8 = 2 (-3) + -2\n",
            "-3 = 1 (-2) + -1\n",
            "-2 = 2 (-1) + 0\n",
            "-100 = 3 (-28) + -16\n",
            "-28 = 1 (-16) + -12\n",
            "-16 = 1 (-12) + -4\n",
            "-12 = 3 (-4) + 0\n",
            "-100 = 3 (-29) + -13\n",
            "-29 = 2 (-13) + -3\n",
            "-13 = 4 (-3) + -1\n",
            "-3 = 3 (-1) + 0\n",
            "-100 = 3 (-30) + -10\n",
            "-30 = 3 (-10) + 0\n",
            "-100 = 3 (-31) + -7\n",
            "-31 = 4 (-7) + -3\n",
            "-7 = 2 (-3) + -1\n",
            "-3 = 3 (-1) + 0\n",
            "-100 = 3 (-32) + -4\n",
            "-32 = 8 (-4) + 0\n",
            "-100 = 3 (-33) + -1\n",
            "-33 = 33 (-1) + 0\n",
            "-100 = 2 (-34) + -32\n",
            "-34 = 1 (-32) + -2\n",
            "-32 = 16 (-2) + 0\n",
            "-100 = 2 (-35) + -30\n",
            "-35 = 1 (-30) + -5\n",
            "-30 = 6 (-5) + 0\n",
            "-100 = 2 (-36) + -28\n",
            "-36 = 1 (-28) + -8\n",
            "-28 = 3 (-8) + -4\n",
            "-8 = 2 (-4) + 0\n",
            "-100 = 2 (-37) + -26\n",
            "-37 = 1 (-26) + -11\n",
            "-26 = 2 (-11) + -4\n",
            "-11 = 2 (-4) + -3\n",
            "-4 = 1 (-3) + -1\n",
            "-3 = 3 (-1) + 0\n",
            "-100 = 2 (-38) + -24\n",
            "-38 = 1 (-24) + -14\n",
            "-24 = 1 (-14) + -10\n",
            "-14 = 1 (-10) + -4\n",
            "-10 = 2 (-4) + -2\n",
            "-4 = 2 (-2) + 0\n",
            "-100 = 2 (-39) + -22\n",
            "-39 = 1 (-22) + -17\n",
            "-22 = 1 (-17) + -5\n",
            "-17 = 3 (-5) + -2\n",
            "-5 = 2 (-2) + -1\n",
            "-2 = 2 (-1) + 0\n",
            "-100 = 2 (-40) + -20\n",
            "-40 = 2 (-20) + 0\n",
            "-100 = 2 (-41) + -18\n",
            "-41 = 2 (-18) + -5\n",
            "-18 = 3 (-5) + -3\n",
            "-5 = 1 (-3) + -2\n",
            "-3 = 1 (-2) + -1\n",
            "-2 = 2 (-1) + 0\n",
            "-100 = 2 (-42) + -16\n",
            "-42 = 2 (-16) + -10\n",
            "-16 = 1 (-10) + -6\n",
            "-10 = 1 (-6) + -4\n",
            "-6 = 1 (-4) + -2\n",
            "-4 = 2 (-2) + 0\n",
            "-100 = 2 (-43) + -14\n",
            "-43 = 3 (-14) + -1\n",
            "-14 = 14 (-1) + 0\n",
            "-100 = 2 (-44) + -12\n",
            "-44 = 3 (-12) + -8\n",
            "-12 = 1 (-8) + -4\n",
            "-8 = 2 (-4) + 0\n",
            "-100 = 2 (-45) + -10\n",
            "-45 = 4 (-10) + -5\n",
            "-10 = 2 (-5) + 0\n",
            "-100 = 2 (-46) + -8\n",
            "-46 = 5 (-8) + -6\n",
            "-8 = 1 (-6) + -2\n",
            "-6 = 3 (-2) + 0\n",
            "-100 = 2 (-47) + -6\n",
            "-47 = 7 (-6) + -5\n",
            "-6 = 1 (-5) + -1\n",
            "-5 = 5 (-1) + 0\n",
            "-100 = 2 (-48) + -4\n",
            "-48 = 12 (-4) + 0\n",
            "-100 = 2 (-49) + -2\n",
            "-49 = 24 (-2) + -1\n",
            "-2 = 2 (-1) + 0\n",
            "-100 = 2 (-50) + 0\n",
            "-100 = 1 (-51) + -49\n",
            "-51 = 1 (-49) + -2\n",
            "-49 = 24 (-2) + -1\n",
            "-2 = 2 (-1) + 0\n",
            "-100 = 1 (-52) + -48\n",
            "-52 = 1 (-48) + -4\n",
            "-48 = 12 (-4) + 0\n",
            "-100 = 1 (-53) + -47\n",
            "-53 = 1 (-47) + -6\n",
            "-47 = 7 (-6) + -5\n",
            "-6 = 1 (-5) + -1\n",
            "-5 = 5 (-1) + 0\n",
            "-100 = 1 (-54) + -46\n",
            "-54 = 1 (-46) + -8\n",
            "-46 = 5 (-8) + -6\n",
            "-8 = 1 (-6) + -2\n",
            "-6 = 3 (-2) + 0\n",
            "-100 = 1 (-55) + -45\n",
            "-55 = 1 (-45) + -10\n",
            "-45 = 4 (-10) + -5\n",
            "-10 = 2 (-5) + 0\n",
            "-100 = 1 (-56) + -44\n",
            "-56 = 1 (-44) + -12\n",
            "-44 = 3 (-12) + -8\n",
            "-12 = 1 (-8) + -4\n",
            "-8 = 2 (-4) + 0\n",
            "-100 = 1 (-57) + -43\n",
            "-57 = 1 (-43) + -14\n",
            "-43 = 3 (-14) + -1\n",
            "-14 = 14 (-1) + 0\n",
            "-100 = 1 (-58) + -42\n",
            "-58 = 1 (-42) + -16\n",
            "-42 = 2 (-16) + -10\n",
            "-16 = 1 (-10) + -6\n",
            "-10 = 1 (-6) + -4\n",
            "-6 = 1 (-4) + -2\n",
            "-4 = 2 (-2) + 0\n",
            "-100 = 1 (-59) + -41\n",
            "-59 = 1 (-41) + -18\n",
            "-41 = 2 (-18) + -5\n",
            "-18 = 3 (-5) + -3\n",
            "-5 = 1 (-3) + -2\n",
            "-3 = 1 (-2) + -1\n",
            "-2 = 2 (-1) + 0\n",
            "-100 = 1 (-60) + -40\n",
            "-60 = 1 (-40) + -20\n",
            "-40 = 2 (-20) + 0\n",
            "-100 = 1 (-61) + -39\n",
            "-61 = 1 (-39) + -22\n",
            "-39 = 1 (-22) + -17\n",
            "-22 = 1 (-17) + -5\n",
            "-17 = 3 (-5) + -2\n",
            "-5 = 2 (-2) + -1\n",
            "-2 = 2 (-1) + 0\n",
            "-100 = 1 (-62) + -38\n",
            "-62 = 1 (-38) + -24\n",
            "-38 = 1 (-24) + -14\n",
            "-24 = 1 (-14) + -10\n",
            "-14 = 1 (-10) + -4\n",
            "-10 = 2 (-4) + -2\n",
            "-4 = 2 (-2) + 0\n",
            "-100 = 1 (-63) + -37\n",
            "-63 = 1 (-37) + -26\n",
            "-37 = 1 (-26) + -11\n",
            "-26 = 2 (-11) + -4\n",
            "-11 = 2 (-4) + -3\n",
            "-4 = 1 (-3) + -1\n",
            "-3 = 3 (-1) + 0\n",
            "-100 = 1 (-64) + -36\n",
            "-64 = 1 (-36) + -28\n",
            "-36 = 1 (-28) + -8\n",
            "-28 = 3 (-8) + -4\n",
            "-8 = 2 (-4) + 0\n",
            "-100 = 1 (-65) + -35\n",
            "-65 = 1 (-35) + -30\n",
            "-35 = 1 (-30) + -5\n",
            "-30 = 6 (-5) + 0\n",
            "-100 = 1 (-66) + -34\n",
            "-66 = 1 (-34) + -32\n",
            "-34 = 1 (-32) + -2\n",
            "-32 = 16 (-2) + 0\n",
            "-100 = 1 (-67) + -33\n",
            "-67 = 2 (-33) + -1\n",
            "-33 = 33 (-1) + 0\n",
            "-100 = 1 (-68) + -32\n",
            "-68 = 2 (-32) + -4\n",
            "-32 = 8 (-4) + 0\n",
            "-100 = 1 (-69) + -31\n",
            "-69 = 2 (-31) + -7\n",
            "-31 = 4 (-7) + -3\n",
            "-7 = 2 (-3) + -1\n",
            "-3 = 3 (-1) + 0\n",
            "-100 = 1 (-70) + -30\n",
            "-70 = 2 (-30) + -10\n",
            "-30 = 3 (-10) + 0\n",
            "-100 = 1 (-71) + -29\n",
            "-71 = 2 (-29) + -13\n",
            "-29 = 2 (-13) + -3\n",
            "-13 = 4 (-3) + -1\n",
            "-3 = 3 (-1) + 0\n",
            "-100 = 1 (-72) + -28\n",
            "-72 = 2 (-28) + -16\n",
            "-28 = 1 (-16) + -12\n",
            "-16 = 1 (-12) + -4\n",
            "-12 = 3 (-4) + 0\n",
            "-100 = 1 (-73) + -27\n",
            "-73 = 2 (-27) + -19\n",
            "-27 = 1 (-19) + -8\n",
            "-19 = 2 (-8) + -3\n",
            "-8 = 2 (-3) + -2\n",
            "-3 = 1 (-2) + -1\n",
            "-2 = 2 (-1) + 0\n",
            "-100 = 1 (-74) + -26\n",
            "-74 = 2 (-26) + -22\n",
            "-26 = 1 (-22) + -4\n",
            "-22 = 5 (-4) + -2\n",
            "-4 = 2 (-2) + 0\n",
            "-100 = 1 (-75) + -25\n",
            "-75 = 3 (-25) + 0\n",
            "-100 = 1 (-76) + -24\n",
            "-76 = 3 (-24) + -4\n",
            "-24 = 6 (-4) + 0\n",
            "-100 = 1 (-77) + -23\n",
            "-77 = 3 (-23) + -8\n",
            "-23 = 2 (-8) + -7\n",
            "-8 = 1 (-7) + -1\n",
            "-7 = 7 (-1) + 0\n",
            "-100 = 1 (-78) + -22\n",
            "-78 = 3 (-22) + -12\n",
            "-22 = 1 (-12) + -10\n",
            "-12 = 1 (-10) + -2\n",
            "-10 = 5 (-2) + 0\n",
            "-100 = 1 (-79) + -21\n",
            "-79 = 3 (-21) + -16\n",
            "-21 = 1 (-16) + -5\n",
            "-16 = 3 (-5) + -1\n",
            "-5 = 5 (-1) + 0\n",
            "-100 = 1 (-80) + -20\n",
            "-80 = 4 (-20) + 0\n",
            "-100 = 1 (-81) + -19\n",
            "-81 = 4 (-19) + -5\n",
            "-19 = 3 (-5) + -4\n",
            "-5 = 1 (-4) + -1\n",
            "-4 = 4 (-1) + 0\n",
            "-100 = 1 (-82) + -18\n",
            "-82 = 4 (-18) + -10\n",
            "-18 = 1 (-10) + -8\n",
            "-10 = 1 (-8) + -2\n",
            "-8 = 4 (-2) + 0\n",
            "-100 = 1 (-83) + -17\n",
            "-83 = 4 (-17) + -15\n",
            "-17 = 1 (-15) + -2\n",
            "-15 = 7 (-2) + -1\n",
            "-2 = 2 (-1) + 0\n",
            "-100 = 1 (-84) + -16\n",
            "-84 = 5 (-16) + -4\n",
            "-16 = 4 (-4) + 0\n",
            "-100 = 1 (-85) + -15\n",
            "-85 = 5 (-15) + -10\n",
            "-15 = 1 (-10) + -5\n",
            "-10 = 2 (-5) + 0\n",
            "-100 = 1 (-86) + -14\n",
            "-86 = 6 (-14) + -2\n",
            "-14 = 7 (-2) + 0\n",
            "-100 = 1 (-87) + -13\n",
            "-87 = 6 (-13) + -9\n",
            "-13 = 1 (-9) + -4\n",
            "-9 = 2 (-4) + -1\n",
            "-4 = 4 (-1) + 0\n",
            "-100 = 1 (-88) + -12\n",
            "-88 = 7 (-12) + -4\n",
            "-12 = 3 (-4) + 0\n",
            "-100 = 1 (-89) + -11\n",
            "-89 = 8 (-11) + -1\n",
            "-11 = 11 (-1) + 0\n",
            "-100 = 1 (-90) + -10\n",
            "-90 = 9 (-10) + 0\n",
            "-100 = 1 (-91) + -9\n",
            "-91 = 10 (-9) + -1\n",
            "-9 = 9 (-1) + 0\n",
            "-100 = 1 (-92) + -8\n",
            "-92 = 11 (-8) + -4\n",
            "-8 = 2 (-4) + 0\n",
            "-100 = 1 (-93) + -7\n",
            "-93 = 13 (-7) + -2\n",
            "-7 = 3 (-2) + -1\n",
            "-2 = 2 (-1) + 0\n",
            "-100 = 1 (-94) + -6\n",
            "-94 = 15 (-6) + -4\n",
            "-6 = 1 (-4) + -2\n",
            "-4 = 2 (-2) + 0\n",
            "-100 = 1 (-95) + -5\n",
            "-95 = 19 (-5) + 0\n",
            "-100 = 1 (-96) + -4\n",
            "-96 = 24 (-4) + 0\n",
            "-100 = 1 (-97) + -3\n",
            "-97 = 32 (-3) + -1\n",
            "-3 = 3 (-1) + 0\n",
            "-100 = 1 (-98) + -2\n",
            "-98 = 49 (-2) + 0\n",
            "-100 = 1 (-99) + -1\n",
            "-99 = 99 (-1) + 0\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "DFK64UICMHpV",
        "outputId": "ef407405-0960-4119-e491-d84b8e17ba07"
      },
      "source": [
        "for i in range(100):\n",
        "  Euclidean_algorithm(-i,-100)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "0 = 0 (-100) + 0\n",
            "-1 = 0 (-100) + -1\n",
            "-100 = 100 (-1) + 0\n",
            "-2 = 0 (-100) + -2\n",
            "-100 = 50 (-2) + 0\n",
            "-3 = 0 (-100) + -3\n",
            "-100 = 33 (-3) + -1\n",
            "-3 = 3 (-1) + 0\n",
            "-4 = 0 (-100) + -4\n",
            "-100 = 25 (-4) + 0\n",
            "-5 = 0 (-100) + -5\n",
            "-100 = 20 (-5) + 0\n",
            "-6 = 0 (-100) + -6\n",
            "-100 = 16 (-6) + -4\n",
            "-6 = 1 (-4) + -2\n",
            "-4 = 2 (-2) + 0\n",
            "-7 = 0 (-100) + -7\n",
            "-100 = 14 (-7) + -2\n",
            "-7 = 3 (-2) + -1\n",
            "-2 = 2 (-1) + 0\n",
            "-8 = 0 (-100) + -8\n",
            "-100 = 12 (-8) + -4\n",
            "-8 = 2 (-4) + 0\n",
            "-9 = 0 (-100) + -9\n",
            "-100 = 11 (-9) + -1\n",
            "-9 = 9 (-1) + 0\n",
            "-10 = 0 (-100) + -10\n",
            "-100 = 10 (-10) + 0\n",
            "-11 = 0 (-100) + -11\n",
            "-100 = 9 (-11) + -1\n",
            "-11 = 11 (-1) + 0\n",
            "-12 = 0 (-100) + -12\n",
            "-100 = 8 (-12) + -4\n",
            "-12 = 3 (-4) + 0\n",
            "-13 = 0 (-100) + -13\n",
            "-100 = 7 (-13) + -9\n",
            "-13 = 1 (-9) + -4\n",
            "-9 = 2 (-4) + -1\n",
            "-4 = 4 (-1) + 0\n",
            "-14 = 0 (-100) + -14\n",
            "-100 = 7 (-14) + -2\n",
            "-14 = 7 (-2) + 0\n",
            "-15 = 0 (-100) + -15\n",
            "-100 = 6 (-15) + -10\n",
            "-15 = 1 (-10) + -5\n",
            "-10 = 2 (-5) + 0\n",
            "-16 = 0 (-100) + -16\n",
            "-100 = 6 (-16) + -4\n",
            "-16 = 4 (-4) + 0\n",
            "-17 = 0 (-100) + -17\n",
            "-100 = 5 (-17) + -15\n",
            "-17 = 1 (-15) + -2\n",
            "-15 = 7 (-2) + -1\n",
            "-2 = 2 (-1) + 0\n",
            "-18 = 0 (-100) + -18\n",
            "-100 = 5 (-18) + -10\n",
            "-18 = 1 (-10) + -8\n",
            "-10 = 1 (-8) + -2\n",
            "-8 = 4 (-2) + 0\n",
            "-19 = 0 (-100) + -19\n",
            "-100 = 5 (-19) + -5\n",
            "-19 = 3 (-5) + -4\n",
            "-5 = 1 (-4) + -1\n",
            "-4 = 4 (-1) + 0\n",
            "-20 = 0 (-100) + -20\n",
            "-100 = 5 (-20) + 0\n",
            "-21 = 0 (-100) + -21\n",
            "-100 = 4 (-21) + -16\n",
            "-21 = 1 (-16) + -5\n",
            "-16 = 3 (-5) + -1\n",
            "-5 = 5 (-1) + 0\n",
            "-22 = 0 (-100) + -22\n",
            "-100 = 4 (-22) + -12\n",
            "-22 = 1 (-12) + -10\n",
            "-12 = 1 (-10) + -2\n",
            "-10 = 5 (-2) + 0\n",
            "-23 = 0 (-100) + -23\n",
            "-100 = 4 (-23) + -8\n",
            "-23 = 2 (-8) + -7\n",
            "-8 = 1 (-7) + -1\n",
            "-7 = 7 (-1) + 0\n",
            "-24 = 0 (-100) + -24\n",
            "-100 = 4 (-24) + -4\n",
            "-24 = 6 (-4) + 0\n",
            "-25 = 0 (-100) + -25\n",
            "-100 = 4 (-25) + 0\n",
            "-26 = 0 (-100) + -26\n",
            "-100 = 3 (-26) + -22\n",
            "-26 = 1 (-22) + -4\n",
            "-22 = 5 (-4) + -2\n",
            "-4 = 2 (-2) + 0\n",
            "-27 = 0 (-100) + -27\n",
            "-100 = 3 (-27) + -19\n",
            "-27 = 1 (-19) + -8\n",
            "-19 = 2 (-8) + -3\n",
            "-8 = 2 (-3) + -2\n",
            "-3 = 1 (-2) + -1\n",
            "-2 = 2 (-1) + 0\n",
            "-28 = 0 (-100) + -28\n",
            "-100 = 3 (-28) + -16\n",
            "-28 = 1 (-16) + -12\n",
            "-16 = 1 (-12) + -4\n",
            "-12 = 3 (-4) + 0\n",
            "-29 = 0 (-100) + -29\n",
            "-100 = 3 (-29) + -13\n",
            "-29 = 2 (-13) + -3\n",
            "-13 = 4 (-3) + -1\n",
            "-3 = 3 (-1) + 0\n",
            "-30 = 0 (-100) + -30\n",
            "-100 = 3 (-30) + -10\n",
            "-30 = 3 (-10) + 0\n",
            "-31 = 0 (-100) + -31\n",
            "-100 = 3 (-31) + -7\n",
            "-31 = 4 (-7) + -3\n",
            "-7 = 2 (-3) + -1\n",
            "-3 = 3 (-1) + 0\n",
            "-32 = 0 (-100) + -32\n",
            "-100 = 3 (-32) + -4\n",
            "-32 = 8 (-4) + 0\n",
            "-33 = 0 (-100) + -33\n",
            "-100 = 3 (-33) + -1\n",
            "-33 = 33 (-1) + 0\n",
            "-34 = 0 (-100) + -34\n",
            "-100 = 2 (-34) + -32\n",
            "-34 = 1 (-32) + -2\n",
            "-32 = 16 (-2) + 0\n",
            "-35 = 0 (-100) + -35\n",
            "-100 = 2 (-35) + -30\n",
            "-35 = 1 (-30) + -5\n",
            "-30 = 6 (-5) + 0\n",
            "-36 = 0 (-100) + -36\n",
            "-100 = 2 (-36) + -28\n",
            "-36 = 1 (-28) + -8\n",
            "-28 = 3 (-8) + -4\n",
            "-8 = 2 (-4) + 0\n",
            "-37 = 0 (-100) + -37\n",
            "-100 = 2 (-37) + -26\n",
            "-37 = 1 (-26) + -11\n",
            "-26 = 2 (-11) + -4\n",
            "-11 = 2 (-4) + -3\n",
            "-4 = 1 (-3) + -1\n",
            "-3 = 3 (-1) + 0\n",
            "-38 = 0 (-100) + -38\n",
            "-100 = 2 (-38) + -24\n",
            "-38 = 1 (-24) + -14\n",
            "-24 = 1 (-14) + -10\n",
            "-14 = 1 (-10) + -4\n",
            "-10 = 2 (-4) + -2\n",
            "-4 = 2 (-2) + 0\n",
            "-39 = 0 (-100) + -39\n",
            "-100 = 2 (-39) + -22\n",
            "-39 = 1 (-22) + -17\n",
            "-22 = 1 (-17) + -5\n",
            "-17 = 3 (-5) + -2\n",
            "-5 = 2 (-2) + -1\n",
            "-2 = 2 (-1) + 0\n",
            "-40 = 0 (-100) + -40\n",
            "-100 = 2 (-40) + -20\n",
            "-40 = 2 (-20) + 0\n",
            "-41 = 0 (-100) + -41\n",
            "-100 = 2 (-41) + -18\n",
            "-41 = 2 (-18) + -5\n",
            "-18 = 3 (-5) + -3\n",
            "-5 = 1 (-3) + -2\n",
            "-3 = 1 (-2) + -1\n",
            "-2 = 2 (-1) + 0\n",
            "-42 = 0 (-100) + -42\n",
            "-100 = 2 (-42) + -16\n",
            "-42 = 2 (-16) + -10\n",
            "-16 = 1 (-10) + -6\n",
            "-10 = 1 (-6) + -4\n",
            "-6 = 1 (-4) + -2\n",
            "-4 = 2 (-2) + 0\n",
            "-43 = 0 (-100) + -43\n",
            "-100 = 2 (-43) + -14\n",
            "-43 = 3 (-14) + -1\n",
            "-14 = 14 (-1) + 0\n",
            "-44 = 0 (-100) + -44\n",
            "-100 = 2 (-44) + -12\n",
            "-44 = 3 (-12) + -8\n",
            "-12 = 1 (-8) + -4\n",
            "-8 = 2 (-4) + 0\n",
            "-45 = 0 (-100) + -45\n",
            "-100 = 2 (-45) + -10\n",
            "-45 = 4 (-10) + -5\n",
            "-10 = 2 (-5) + 0\n",
            "-46 = 0 (-100) + -46\n",
            "-100 = 2 (-46) + -8\n",
            "-46 = 5 (-8) + -6\n",
            "-8 = 1 (-6) + -2\n",
            "-6 = 3 (-2) + 0\n",
            "-47 = 0 (-100) + -47\n",
            "-100 = 2 (-47) + -6\n",
            "-47 = 7 (-6) + -5\n",
            "-6 = 1 (-5) + -1\n",
            "-5 = 5 (-1) + 0\n",
            "-48 = 0 (-100) + -48\n",
            "-100 = 2 (-48) + -4\n",
            "-48 = 12 (-4) + 0\n",
            "-49 = 0 (-100) + -49\n",
            "-100 = 2 (-49) + -2\n",
            "-49 = 24 (-2) + -1\n",
            "-2 = 2 (-1) + 0\n",
            "-50 = 0 (-100) + -50\n",
            "-100 = 2 (-50) + 0\n",
            "-51 = 0 (-100) + -51\n",
            "-100 = 1 (-51) + -49\n",
            "-51 = 1 (-49) + -2\n",
            "-49 = 24 (-2) + -1\n",
            "-2 = 2 (-1) + 0\n",
            "-52 = 0 (-100) + -52\n",
            "-100 = 1 (-52) + -48\n",
            "-52 = 1 (-48) + -4\n",
            "-48 = 12 (-4) + 0\n",
            "-53 = 0 (-100) + -53\n",
            "-100 = 1 (-53) + -47\n",
            "-53 = 1 (-47) + -6\n",
            "-47 = 7 (-6) + -5\n",
            "-6 = 1 (-5) + -1\n",
            "-5 = 5 (-1) + 0\n",
            "-54 = 0 (-100) + -54\n",
            "-100 = 1 (-54) + -46\n",
            "-54 = 1 (-46) + -8\n",
            "-46 = 5 (-8) + -6\n",
            "-8 = 1 (-6) + -2\n",
            "-6 = 3 (-2) + 0\n",
            "-55 = 0 (-100) + -55\n",
            "-100 = 1 (-55) + -45\n",
            "-55 = 1 (-45) + -10\n",
            "-45 = 4 (-10) + -5\n",
            "-10 = 2 (-5) + 0\n",
            "-56 = 0 (-100) + -56\n",
            "-100 = 1 (-56) + -44\n",
            "-56 = 1 (-44) + -12\n",
            "-44 = 3 (-12) + -8\n",
            "-12 = 1 (-8) + -4\n",
            "-8 = 2 (-4) + 0\n",
            "-57 = 0 (-100) + -57\n",
            "-100 = 1 (-57) + -43\n",
            "-57 = 1 (-43) + -14\n",
            "-43 = 3 (-14) + -1\n",
            "-14 = 14 (-1) + 0\n",
            "-58 = 0 (-100) + -58\n",
            "-100 = 1 (-58) + -42\n",
            "-58 = 1 (-42) + -16\n",
            "-42 = 2 (-16) + -10\n",
            "-16 = 1 (-10) + -6\n",
            "-10 = 1 (-6) + -4\n",
            "-6 = 1 (-4) + -2\n",
            "-4 = 2 (-2) + 0\n",
            "-59 = 0 (-100) + -59\n",
            "-100 = 1 (-59) + -41\n",
            "-59 = 1 (-41) + -18\n",
            "-41 = 2 (-18) + -5\n",
            "-18 = 3 (-5) + -3\n",
            "-5 = 1 (-3) + -2\n",
            "-3 = 1 (-2) + -1\n",
            "-2 = 2 (-1) + 0\n",
            "-60 = 0 (-100) + -60\n",
            "-100 = 1 (-60) + -40\n",
            "-60 = 1 (-40) + -20\n",
            "-40 = 2 (-20) + 0\n",
            "-61 = 0 (-100) + -61\n",
            "-100 = 1 (-61) + -39\n",
            "-61 = 1 (-39) + -22\n",
            "-39 = 1 (-22) + -17\n",
            "-22 = 1 (-17) + -5\n",
            "-17 = 3 (-5) + -2\n",
            "-5 = 2 (-2) + -1\n",
            "-2 = 2 (-1) + 0\n",
            "-62 = 0 (-100) + -62\n",
            "-100 = 1 (-62) + -38\n",
            "-62 = 1 (-38) + -24\n",
            "-38 = 1 (-24) + -14\n",
            "-24 = 1 (-14) + -10\n",
            "-14 = 1 (-10) + -4\n",
            "-10 = 2 (-4) + -2\n",
            "-4 = 2 (-2) + 0\n",
            "-63 = 0 (-100) + -63\n",
            "-100 = 1 (-63) + -37\n",
            "-63 = 1 (-37) + -26\n",
            "-37 = 1 (-26) + -11\n",
            "-26 = 2 (-11) + -4\n",
            "-11 = 2 (-4) + -3\n",
            "-4 = 1 (-3) + -1\n",
            "-3 = 3 (-1) + 0\n",
            "-64 = 0 (-100) + -64\n",
            "-100 = 1 (-64) + -36\n",
            "-64 = 1 (-36) + -28\n",
            "-36 = 1 (-28) + -8\n",
            "-28 = 3 (-8) + -4\n",
            "-8 = 2 (-4) + 0\n",
            "-65 = 0 (-100) + -65\n",
            "-100 = 1 (-65) + -35\n",
            "-65 = 1 (-35) + -30\n",
            "-35 = 1 (-30) + -5\n",
            "-30 = 6 (-5) + 0\n",
            "-66 = 0 (-100) + -66\n",
            "-100 = 1 (-66) + -34\n",
            "-66 = 1 (-34) + -32\n",
            "-34 = 1 (-32) + -2\n",
            "-32 = 16 (-2) + 0\n",
            "-67 = 0 (-100) + -67\n",
            "-100 = 1 (-67) + -33\n",
            "-67 = 2 (-33) + -1\n",
            "-33 = 33 (-1) + 0\n",
            "-68 = 0 (-100) + -68\n",
            "-100 = 1 (-68) + -32\n",
            "-68 = 2 (-32) + -4\n",
            "-32 = 8 (-4) + 0\n",
            "-69 = 0 (-100) + -69\n",
            "-100 = 1 (-69) + -31\n",
            "-69 = 2 (-31) + -7\n",
            "-31 = 4 (-7) + -3\n",
            "-7 = 2 (-3) + -1\n",
            "-3 = 3 (-1) + 0\n",
            "-70 = 0 (-100) + -70\n",
            "-100 = 1 (-70) + -30\n",
            "-70 = 2 (-30) + -10\n",
            "-30 = 3 (-10) + 0\n",
            "-71 = 0 (-100) + -71\n",
            "-100 = 1 (-71) + -29\n",
            "-71 = 2 (-29) + -13\n",
            "-29 = 2 (-13) + -3\n",
            "-13 = 4 (-3) + -1\n",
            "-3 = 3 (-1) + 0\n",
            "-72 = 0 (-100) + -72\n",
            "-100 = 1 (-72) + -28\n",
            "-72 = 2 (-28) + -16\n",
            "-28 = 1 (-16) + -12\n",
            "-16 = 1 (-12) + -4\n",
            "-12 = 3 (-4) + 0\n",
            "-73 = 0 (-100) + -73\n",
            "-100 = 1 (-73) + -27\n",
            "-73 = 2 (-27) + -19\n",
            "-27 = 1 (-19) + -8\n",
            "-19 = 2 (-8) + -3\n",
            "-8 = 2 (-3) + -2\n",
            "-3 = 1 (-2) + -1\n",
            "-2 = 2 (-1) + 0\n",
            "-74 = 0 (-100) + -74\n",
            "-100 = 1 (-74) + -26\n",
            "-74 = 2 (-26) + -22\n",
            "-26 = 1 (-22) + -4\n",
            "-22 = 5 (-4) + -2\n",
            "-4 = 2 (-2) + 0\n",
            "-75 = 0 (-100) + -75\n",
            "-100 = 1 (-75) + -25\n",
            "-75 = 3 (-25) + 0\n",
            "-76 = 0 (-100) + -76\n",
            "-100 = 1 (-76) + -24\n",
            "-76 = 3 (-24) + -4\n",
            "-24 = 6 (-4) + 0\n",
            "-77 = 0 (-100) + -77\n",
            "-100 = 1 (-77) + -23\n",
            "-77 = 3 (-23) + -8\n",
            "-23 = 2 (-8) + -7\n",
            "-8 = 1 (-7) + -1\n",
            "-7 = 7 (-1) + 0\n",
            "-78 = 0 (-100) + -78\n",
            "-100 = 1 (-78) + -22\n",
            "-78 = 3 (-22) + -12\n",
            "-22 = 1 (-12) + -10\n",
            "-12 = 1 (-10) + -2\n",
            "-10 = 5 (-2) + 0\n",
            "-79 = 0 (-100) + -79\n",
            "-100 = 1 (-79) + -21\n",
            "-79 = 3 (-21) + -16\n",
            "-21 = 1 (-16) + -5\n",
            "-16 = 3 (-5) + -1\n",
            "-5 = 5 (-1) + 0\n",
            "-80 = 0 (-100) + -80\n",
            "-100 = 1 (-80) + -20\n",
            "-80 = 4 (-20) + 0\n",
            "-81 = 0 (-100) + -81\n",
            "-100 = 1 (-81) + -19\n",
            "-81 = 4 (-19) + -5\n",
            "-19 = 3 (-5) + -4\n",
            "-5 = 1 (-4) + -1\n",
            "-4 = 4 (-1) + 0\n",
            "-82 = 0 (-100) + -82\n",
            "-100 = 1 (-82) + -18\n",
            "-82 = 4 (-18) + -10\n",
            "-18 = 1 (-10) + -8\n",
            "-10 = 1 (-8) + -2\n",
            "-8 = 4 (-2) + 0\n",
            "-83 = 0 (-100) + -83\n",
            "-100 = 1 (-83) + -17\n",
            "-83 = 4 (-17) + -15\n",
            "-17 = 1 (-15) + -2\n",
            "-15 = 7 (-2) + -1\n",
            "-2 = 2 (-1) + 0\n",
            "-84 = 0 (-100) + -84\n",
            "-100 = 1 (-84) + -16\n",
            "-84 = 5 (-16) + -4\n",
            "-16 = 4 (-4) + 0\n",
            "-85 = 0 (-100) + -85\n",
            "-100 = 1 (-85) + -15\n",
            "-85 = 5 (-15) + -10\n",
            "-15 = 1 (-10) + -5\n",
            "-10 = 2 (-5) + 0\n",
            "-86 = 0 (-100) + -86\n",
            "-100 = 1 (-86) + -14\n",
            "-86 = 6 (-14) + -2\n",
            "-14 = 7 (-2) + 0\n",
            "-87 = 0 (-100) + -87\n",
            "-100 = 1 (-87) + -13\n",
            "-87 = 6 (-13) + -9\n",
            "-13 = 1 (-9) + -4\n",
            "-9 = 2 (-4) + -1\n",
            "-4 = 4 (-1) + 0\n",
            "-88 = 0 (-100) + -88\n",
            "-100 = 1 (-88) + -12\n",
            "-88 = 7 (-12) + -4\n",
            "-12 = 3 (-4) + 0\n",
            "-89 = 0 (-100) + -89\n",
            "-100 = 1 (-89) + -11\n",
            "-89 = 8 (-11) + -1\n",
            "-11 = 11 (-1) + 0\n",
            "-90 = 0 (-100) + -90\n",
            "-100 = 1 (-90) + -10\n",
            "-90 = 9 (-10) + 0\n",
            "-91 = 0 (-100) + -91\n",
            "-100 = 1 (-91) + -9\n",
            "-91 = 10 (-9) + -1\n",
            "-9 = 9 (-1) + 0\n",
            "-92 = 0 (-100) + -92\n",
            "-100 = 1 (-92) + -8\n",
            "-92 = 11 (-8) + -4\n",
            "-8 = 2 (-4) + 0\n",
            "-93 = 0 (-100) + -93\n",
            "-100 = 1 (-93) + -7\n",
            "-93 = 13 (-7) + -2\n",
            "-7 = 3 (-2) + -1\n",
            "-2 = 2 (-1) + 0\n",
            "-94 = 0 (-100) + -94\n",
            "-100 = 1 (-94) + -6\n",
            "-94 = 15 (-6) + -4\n",
            "-6 = 1 (-4) + -2\n",
            "-4 = 2 (-2) + 0\n",
            "-95 = 0 (-100) + -95\n",
            "-100 = 1 (-95) + -5\n",
            "-95 = 19 (-5) + 0\n",
            "-96 = 0 (-100) + -96\n",
            "-100 = 1 (-96) + -4\n",
            "-96 = 24 (-4) + 0\n",
            "-97 = 0 (-100) + -97\n",
            "-100 = 1 (-97) + -3\n",
            "-97 = 32 (-3) + -1\n",
            "-3 = 3 (-1) + 0\n",
            "-98 = 0 (-100) + -98\n",
            "-100 = 1 (-98) + -2\n",
            "-98 = 49 (-2) + 0\n",
            "-99 = 0 (-100) + -99\n",
            "-100 = 1 (-99) + -1\n",
            "-99 = 99 (-1) + 0\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "uUnUZ2DsUoWS"
      },
      "source": [
        "No matter how large the inputs (dividend and divisor) are, the number of steps required for the Euclidean Algorithm will never be greater than the absolute value of the larger of the two inputs. Also, in the case where the dividend is less than the divisor, when the inputs are close to each other or further apart from each other, more steps are required for the Euclidean Algorithm than if the dividend were to be greater than the divisor."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "k9CTfZD4Xdzv"
      },
      "source": [
        "#4\n",
        "def LCM(a,b):\n",
        "  x = int(a)\n",
        "  y = int(b)\n",
        "  if a==0 or b==0:\n",
        "    return 0\n",
        "  else:\n",
        "    return (x*y) // GCD(x,y)\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0EbHOPCCTfNR",
        "outputId": "b75860c8-f017-499f-e7e0-29722cc17ee1"
      },
      "source": [
        "LCM(6,4)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "12"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 263
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0uDJBAnnc35Z",
        "outputId": "44add0e5-5f99-4936-add1-883f7ce1af18"
      },
      "source": [
        "GCD(0,0)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 81
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5fWT_exBdQHr",
        "outputId": "eb59c125-4b92-4ec8-c4b8-03d7c043c3b6"
      },
      "source": [
        "GCD(0,2)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "2"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 82
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "8hheW8kJaP4H",
        "outputId": "89def97b-94a2-4f64-c4fb-1fd5b3770343"
      },
      "source": [
        "GCD(2,0)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "2"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 83
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bFX3UDcCdSab",
        "outputId": "d29d5361-00f9-4b6b-890d-101b95276294"
      },
      "source": [
        "GCD(2,2)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "2"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 84
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "WVIeAGsedmPI",
        "outputId": "d5f4945b-99ad-42d6-da6d-5090134938fa"
      },
      "source": [
        "GCD(-2,-2)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "2"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 88
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "CvC8sVsRdZs1",
        "outputId": "983a3610-10f9-41e7-c18d-7cfd5832145b"
      },
      "source": [
        "GCD(-2,0)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "2"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 85
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "fI2drN30dh-n",
        "outputId": "02983f50-5c7c-473c-ac85-c5b4cf41a5db"
      },
      "source": [
        "GCD(0,-2)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "2"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 87
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "YdCc5KXRecZv"
      },
      "source": [
        "When a and/or b are zero or negative, the GCD function behaves strangely. For example, it makes sense that when both numbers are 0, 0 divided by 0 is 0. However, this is not good because zero divided by zero is undefined. Also, when there is exactly one 0 and a nonzero number, the GCD of these two numbers is the absolute value of the nonzero input because 0 can be diveded by the absolute value of the nonzero number. This latter case is good."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "iBym39uSf0wA"
      },
      "source": [
        "#5\n",
        "import mpmath\n",
        "def approximate_e(n):\n",
        "  max_error = (10.0)**(-n)\n",
        "  term = 1.0\n",
        "  factorial = 1.0\n",
        "  sum = 1.0\n",
        "  while mpmath.mpf(abs(mpmath.e-mpmath.mpf(sum))) > mpmath.mpf(max_error):\n",
        "    factorial = mpmath.mpf(factorial) * mpmath.mpf(term)\n",
        "    sum = mpmath.mpf(sum) + mpmath.mpf(float(1.0)/factorial)\n",
        "    term = mpmath.mpf(term) + 1\n",
        "  print(sum)\n",
        "\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dytmreelupEg",
        "outputId": "cf8d5844-8846-4487-8656-a3980b5f789b"
      },
      "source": [
        "approximate_e(5)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "2.71827876984127\n"
          ],
          "name": "stdout"
        }
      ]
    }
  ]
}
